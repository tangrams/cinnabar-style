# Cinnabar is a classic look and should be your go-to for general mapping applications.
# Give OpenStreetMap data a refined basemap skin using the Tangram graphics library and
# Mapzen's versatile Vector Tiles.
#
# This style is a High Road influenced evolution of the Traditional style Stamen created
# for Mapzen's Open Android app in 2014. Please use and adapt the open source scene file
# in your own projects!
#
# Authors: Nathaniel V. Kelso, Geraldine Sarmiento
# Read more: https://github.com/tangrams/cinnabar-style
#

global:
    # SHIELDS
    sdk_shield_color: black
    sdk_shield_text_color: white

labels-global:
    # - &text_visible_continent         true
    # - &text_visible_admin             true
    # - &text_visible_populated_places  true
    # - &icon_visible_populated_places  true
    # - &text_visible_neighbourhoods    true
    # - &text_visible_neighbourhoods_e  true
    # - &text_visible_building          true
    # - &text_visible_address           true
    # - &text_visible_water_labels      true
    # - &label_visible_landuse_green    true
    # - &icon_visible_landuse_green     true     # needs work
    # - &text_visible_landuse_green     true
    # - &label_visible_poi_landuse      true
    # - &icon_visible_poi_landuse       false     #false for default
    # - &text_visible_poi_landuse       false     #false for default
    # - &text_visible_landuse_generic   false     #false for default
    # - &label_visible_poi_landuse_e    true
    # - &icon_visible_poi_landuse_e     false     #false for default
    # - &text_visible_poi_landuse_e     true
    # - &label_visible_station          false     #false for default
    # - &icon_visible_station           false     #false for default
    # - &text_visible_station           false     #false for default
    # - &text_visible_highway           true
    # - &text_visible_highway_e         false     #false for default, #false for more
    # - &text_visible_trunk_primary     true
    # - &text_visible_trunk_primary_e2  false     #false for default, #false for more
    # - &text_visible_trunk_primary_e   false     #false for default, #false for more
    # - &text_visible_secondary         true
    # - &text_visible_secondary_e       false     #false for default, #false for more
    # - &text_visible_tertiary          true
    # - &text_visible_tertiary_e        false     #false for default, #false for more
    # - &text_visible_minor_road        true
    # - &text_visible_minor_road_e      true
    # - &text_visible_service_road      true
    # - &text_visible_path              true
    # - &text_visible_piste             true
    # - &text_visible_steps             true
    # - &text_visible_aerialway         true
    # - &text_visible_shields           true
    # - &text_visible_exits             true
    # - &text_visible_exits_e           false     #false for default, #false for more
    # - &text_visible_airport_gate      true

    - &text_visible_continent         true
    - &text_visible_admin             true
    - &text_visible_populated_places  true
    - &icon_visible_populated_places  true
    - &text_visible_neighbourhoods    true
    - &text_visible_neighbourhoods_e  true
    - &text_visible_building          true
    - &text_visible_address           true
    - &text_visible_water_labels      true
    - &label_visible_landuse_green    true
    - &icon_visible_landuse_green     true    # needs work
    - &text_visible_landuse_green     true
    - &label_visible_poi_landuse      true
    - &icon_visible_poi_landuse       true     #false for default
    - &text_visible_poi_landuse       true     #false for default
    - &text_visible_landuse_generic   true     #false for default
    - &label_visible_poi_landuse_e    true
    - &icon_visible_poi_landuse_e     true     #false for default
    - &text_visible_poi_landuse_e     true
    - &label_visible_station          true     #false for default
    - &icon_visible_station           true     #false for default
    - &text_visible_station           true     #false for default
    - &text_visible_highway           true
    - &text_visible_highway_e         true     #false for default, #false for more
    - &text_visible_trunk_primary     true
    - &text_visible_trunk_primary_e2  true     #false for default, #false for more
    - &text_visible_trunk_primary_e   true     #false for default, #false for more
    - &text_visible_secondary         true
    - &text_visible_secondary_e       true     #false for default, #false for more
    - &text_visible_tertiary          true
    - &text_visible_tertiary_e        true     #false for default, #false for more
    - &text_visible_minor_road        true
    - &text_visible_minor_road_e      true
    - &text_visible_service_road      true
    - &text_visible_path              true
    - &text_visible_piste             true
    - &text_visible_steps             true
    - &text_visible_aerialway         true
    - &text_visible_shields           true
    - &text_visible_exits             true
    - &text_visible_exits_e           true     #false for default, #false for more
    - &text_visible_airport_gate      true

cinnabar-colors:
    cameras:
        - &camera_settings            { type: isometric, axis: [0, .1], vanishing_point: [0, -500] }

    lights:
        - &light_settings             { type: directional, direction: [1, 1, -.9], diffuse: 0.5, ambient: 0.85 }

    roads:
        - &highway1                   '#f8c2c2'
        - &highway1_e                 '#eeb1b1'
        - &highway_link1              '#D19596'
        - &highway_casing1            '#D16768'
        - &highway_tunnel1            '#D19596'       #85%
        - &highway_tunnel_casing1     [0.3, 0.3, 0.3] #95%
        - &highway_link_tunnel_casing1 '#D16768'      #95%
        - &ferry1                     '#7caacb'
        - &rail1                      '#777'
        - &rail1_e                    '#bbb'
        - &rail2                      '#999'             # less important rail (service, sidings)
        - &major_road1                '#fbf2f2'    #80%
        - &major_road1b               '#faeeee'    #10%
        - &major_road1c               white    #15%
        - &major_road2                white    #20%
        - &major_road2a               white    #17%
        - &major_road2b               white    #25%
        - &major_road3                white    #30%
        - &major_road4                white
        - &major_road5                '#e3989a'
        - &major_casing1              '#d19596'           # same as highway_casing1
        - &major_casing2              '#d19596'           # zoomed out
        - &major_tunnel1              grey                # light orange (major_route1)
        - &major_tunnel_casing1       [0.3, 0.3, 0.3]
        - &major_route1               '#f8d8d9'
        - &major_route2               '#e3989a'           # zoomed out
        - &minor_route                '#d19596'           # same as major_route
        - &minor_road1                white               # natural earth
        - &minor_road2                whtie               # natural earth, same as major_road2
        - &minor_road3                white
        - &minor_road4                white               # zoomed out
        - &minor_road5                white               # zoomed out, again
        - &minor_casing1              white               # same as highway_casing1
        - &minor_casing2              grey                # zoomed out
        - &minor_tunnel1              white
        - &minor_tunnel_casing1       [0.3, 0.3, 0.3]
        - &service_road1              white
        - &service_road2              white
        - &service_road_casing1       white
        - &service_road_casing2       white
        - &path1                      '#fff'
        - &path2                      '#fff'              # zoomed out
        - &path_casing1               grey
        - &path_bridge_casing1        black
        - &path_bridge_casing2        grey                # zoomed out
        - &path_steps1                '#bcc19e'
        - &path_steps1_b              '#e3e2e0'
        - &piste_easy                 '#d0d0d0'
        - &piste_intermediate         '#d0d0d0'
        - &piste_advanced             '#b3b3b3'
        - &piste_expert               '#a6a6a6'

    boundaries:
        - &country_boundary           '#fff'
        - &region_boundary            '#eee'
        - &subregion_boundary         '#eee'
        - &city_wall                  '#ccb38f'
        - &retaining_wall             '#d9c4a5'
        - &snow_fence                 '#d9c4a5'
        - &fence                      '#555555'

    areas:
        - &scene1      white               # map background, water
        - &water1      '#9dc3de'           # water
        - &water2      [.75,.75,.75]       # playa
        - &water1_o    '#9dc3de'           # water stroke
        - &water2_o    '#9dc3de'           # water stroke 2
        - &earth1      '#e3e2e0'           # land color
        - &earth1_r    '#666'              # land color road
        - &earth2      '#d8d3ca'           # urban
        - &earth2_v    false               # urban visibility
        - &earth2_e    '#d8d3ca'           # urban early
        - &earth2_e2   '#d4cfc6'           # urban early fade in
        - &earth2_e3   '#dbd8d3'           # urban early fade in 3
        - &earth2_ev   true                # urban early visibility
        - &green1      '#aed0b6'           # park (national park, local parks)
        - &green1_r    '#bddec5'           # park roads
        - &green1_b    '#9caca0'           # park buildings
        - &green1_bo   [.20, .20, .20]     # park building outlines
        - &green1_w    '#b7d7bf'           # wilderness area
        - &green1_ws   '#aed0b6'           # wilderness area stroke
        - &green1b     [0.80,0.80,0.80]    # park
        - &green2      '#b8d2bf'           # cemetery
        - &green2_r    [0.7,0.7,0.7]       # cemetery road
        - &green2_b    '#9caca0'           # cemetery, zoo buildings
        - &green2_bo   [.20, .20, .20]     # cemetery, zoo building outline
        - &green3      '#b8d2bf'           # golf course
        - &green4      '#e3e2e0'           # farm faint
        - &green4_v    false               # farm faint
        - &green5      '#e3e2e0'           # farm
        - &green6      '#94d59f'           # nature reserve
        - &green7      '#bddec5'           # forest
        - &green8      '#B4D8BD'           # conservation
        - &green9      '#cfe3d4'           # forest (landcover)
        - &green9_e    '#cfe3d4'           # forest (landcover) early
        - &green9_v    true                # forest (landcover) visibility
        - &green10     '#c7d4c0'           # sports_centre
        - &green11     '#d8ddd0'           # minor zoo related AOIs
        - &green11_o   '#aec7b5'           # minor zoo related AOIs outline
        - &green12     [0.584,0.843,0.792] # grass (common areas)
        - &orange1     '#bfb08e'           # stadium
        - &orange2     '#d8ccb0'           # pitch (play field)
        - &orange3     '#b9a597'           # racetrack (play field)
        - &brown1      '#D9CFC3'           # university
        - &brown1_r    '#cec1b2'           # university roads
        - &brown1_b    '#b1aca4'           # university buildings
        - &brown1_bo   [.30, .30, .30]     # university building outlines
        - &brown2      '#D9CFC3'           # school
        - &brown3      '#c7b7a2'           # playground
        - &red1        '#d9c3c3'           # hospital
        - &red1_r      '#d9c3c3'           # hospital roads
        - &red1_b      '#b5a7a7'           # hospital buildings
        - &red1_bo     [.30, .30, .30]     # hospital building outlines
        - &grey1       '#d7d7d7'           # retail, airport apron, parking, church
        - &grey1_e     '#cacaca'           # retail, airport apron, parking, church early zoom 14
        - &grey1_v     true                # retail, airport apron, parking, church
        - &grey2       orange              # airport runway
        - &grey3       '#d7d7d7'           # railway
        - &grey4       '#ffc52a'           # airport taxiway
        - &grey5       '#ffc52a'           # airport taxiway
        - &grey6       '#d1d1d1'           # industrial
        - &grey6_b     [.70, .70, .70]     # industrial buildings
        - &grey6_bo    [.20, .20, .20]     # industrial building outlines
        - &grey7       '#ecebe9'           # pedestrian, match minor road / path color
        - &grey7_v     true                # pedestrian visibility
        - &grey8       '#ecebe9'           # winter sports
        - &grey8_v     true                # winter sports visibility
        - &grey9       [.569,.69,.722,.5]  #[.7, .7, .7]        # transit platform
        - &grey9_o     [.5, .5, .5]        # transit platform outline
        - &grey9_v     true                # transit platform visibility
        - &grey10      '#d4cce6'           # generic major landuse (theme park, resort, aquarium, winery)
        - &grey10_o    '#bcb9c5'           # generic major landuse outline
        - &grey11      '#d7d7d7'           # generic minor landuse (attraction, artwork)
        - &grey11_o    '#cccccc'           # generic minor landuse outline
        - &grey12      '#cfcfcf'           # generic minor amusements (roller coasters, rides, slide, carousel)
        - &grey12_o    '#c5c5c5'           # generic minor amusements
        - &purple      '#d2d1cd'           # airport
        - &purple_v    true                # airport visibility
        - &purple_b    '#c2c3c4'           # airport buildings
        - &purple_bo   '#969798'           # airport buildings outline
        - &mystry1     '#d9d7c3'           # recreation ground
        - &yellow1     '#e7eda8'           # beach
        - &building1   [.8, .8, .8]        # building
        - &building2   [.6, .6, .6]        # building stroke
        - &building_o  5                   # building stroke order
        - &building_e  true                # building stroke order

    labels:
        - &text_fill          '#333'             # WHITE
        - &text_fill2         '#000'             # WHITE
        - &text_fill_road_e   '#555'             # WHITE
        - &text_fill_exits    '#D16768'          # motorway junctions, highway_casing1
        - &text_fill_building '#ccc'             # WHITE
        - &text_fill_address  '#aaa'             # HUH
        - &text_fill_water    '#4c89b5'          # blue
        - &text_fill_park     '#43a254'          # green
        - &text_fill_beach    '#99905c'          # green
        - &text_fill_piste    '#444'             # dark gray
        - &text_fill_piste_e  '#666'             # dark gray early
        - &text_fill_shield   white              # road shield fill color
        - &text_stroke        '#e4e1de'          # land color
        - &text_stroke_water  [0.9, 0.9, 0.9]    # water stroke color
        - &text_stroke_park   '#bddec5'          # park stroke color
        - &text_stroke_building  [.8, .8, .8]    # building stroke color
        - &text_stroke_address   [0.85, 0.85, 0.85]    # address stroke color
        - &text_stroke_road1  '#f8c2c2'          # road stroke color highway
        - &text_stroke_road2  '#fbf2f2'          # road stroke color major road
        - &text_stroke_road3  '#f8d8d9'          # road stroke color major road route
        - &text_stroke_road4   white             # road stroke color minor road
        - &text_stroke_shield  '#D16768'         # road shield stroke color &highway_casing1
        - &townspot_sprite    townspot-l-rev     # depends on land color and text settings
        - &text_font_family  'Open Sans'        # branding in asperational Unicode, yo (or Helvetica)

textures:
    pois:
        url: images/refill@2x.png
        filtering: mipmap
        sprites:
            # define sprites: [x origin, y origin, width, height]
            'US:CA-1char': [488, 642, 82, 92]
            'US:CA-2char': [388, 642, 94, 94]
            'US:CA-3char': [268, 642, 114, 92]
            'US:CA-4char': [136, 642, 124, 92]
            'US:CA-5char': [0, 642, 128, 92]
            'US:I-1char': [908, 746, 90, 100]
            'US:I-2char': [798, 746, 102, 100]
            'US:I-3char': [658, 746, 132, 100]
            'US:I-4char': [512, 746, 140, 100]
            'US:I-5char': [352, 746, 152, 100]
            'US:NY-1char': [756, 386, 72, 88]
            'US:NY-2char': [660, 386, 88, 88]
            'US:NY-3char': [548, 386, 104, 86]
            'US:NY-4char': [424, 388, 116, 84]
            'US:NY-5char': [296, 386, 120, 86]
            'US:PA-1char': [216, 386, 72, 88]
            'US:PA-2char': [120, 386, 88, 88]
            'US:PA-3char': [0, 386, 112, 88]
            'US:PA-4char': [844, 254, 120, 88]
            'US:PA-5char': [708, 254, 128, 88]
            'US:US-1char': [256, 746, 88, 94]
            'US:US-2char': [144, 746, 106, 94]
            'US:US-3char': [0, 746, 138, 100]
            'US:US-4char': [748, 642, 156, 100]
            'US:US-5char': [576, 642, 164, 100]
            airport: [870, 0, 38, 38]
            aerodrome: [870, 0, 38, 38]
            aquarium: [732, 168, 38, 38]
            atm: [918, 126, 38, 38]
            bakery: [548, 168, 38, 38]
            bank: [964, 126, 38, 38]
            category-predicate-money: [964, 126, 38, 38]
            bar: [230, 168, 38, 38]
            pub: [230, 168, 38, 38]
            category-predicate-drink: [230, 168, 38, 38]
            baseball: [460, 84, 38, 38]
            basketball: [414, 84, 38, 38]
            beach: [598, 84, 38, 38]
            bench: [548, 0, 38, 38]
            bicycle: [872, 126, 38, 38]
            bicycle_rental: [872, 126, 38, 38]
            bicycle_rental_station: [872, 126, 38, 38]
            bicycle_parking: [644, 126, 38, 38]
            biergarten: [276, 210, 38, 38]
            brewery: [276, 210, 38, 38]
            books: [826, 126, 38, 38]
            bridge: [874, 84, 38, 38]
            buddhist: [736, 84, 38, 38]
            building: [414, 168, 38, 38]
            hangar: [414, 168, 38, 38]
            nursing_home: [414, 168, 38, 38]
            manor: [414, 168, 38, 38]
            apartments: [414, 168, 38, 38]
            care_home: [414, 168, 38, 38]
            bus_station: [778, 0, 38, 38]
            bus_stop: [778, 0, 38, 38]
            butcher: [920, 42, 38, 38]
            cafe: [502, 168, 38, 38]
            camp_site: [782, 84, 38, 38]
            summer_camp: [782, 84, 38, 38]
            capital-l: [544, 210, 32, 32]
            capital-m: [512, 210, 24, 24]
            capital-s: [482, 210, 20, 20]
            capital-xl: [632, 210, 40, 40]
            capital-xs: [460, 210, 16, 16]
            car: [780, 126, 38, 38]
            category-namespace-mobility: [780, 126, 38, 38]
            category-predicate-mobility: [780, 126, 38, 38]
            car_repair: [0, 168, 38, 38]
            car_sharing: [594, 0, 38, 38]
            castle: [414, 42, 38, 38]
            fort: [414, 42, 38, 38]
            cemetery: [690, 84, 38, 38]
            grave_yard: [690, 84, 38, 38]
            christian: [184, 126, 38, 38]
            cinema: [778, 168, 38, 38]
            clothes: [824, 168, 38, 38]
            fashion: [824, 168, 38, 38]
            college: [870, 168, 38, 38]
            university: [870, 168, 38, 38]
            confectionery: [0, 210, 38, 38]
            convenience: [46, 84, 38, 38]
            county_shield-1char: [404, 478, 72, 72]
            county_shield-2char: [300, 478, 96, 72]
            county_shield-3char: [160, 478, 132, 72]
            county_shield-4char: [0, 478, 152, 72]
            county_shield-5char: [836, 386, 180, 72]
            courthouse: [364, 0, 38, 38]
            department_store: [734, 126, 38, 38]
            drinking_water: [230, 210, 38, 38]
            dry_cleaning: [0, 84, 38, 38]
            electronics: [598, 126, 38, 38]
            computer: [598, 126, 38, 38]
            estate_agent: [138, 42, 38, 38]
            factory: [368, 168, 38, 38]
            industrial: [368, 168, 38, 38]
            chimney: [368, 168, 38, 38]
            substation: [368, 168, 38, 38]
            wastewater_plant: [368, 168, 38, 38]
            works: [368, 168, 38, 38]
            water_works: [368, 168, 38, 38]
            plant: [368, 168, 38, 38]
            generator: [368, 168, 38, 38]
            category-predicate-industry: [368, 168, 38, 38]
            fast_food: [138, 210, 38, 38]
            ferry: [824, 0, 38, 38]
            ferry_terminal: [824, 0, 38, 38]
            fire_station: [318, 0, 38, 38]
            fitness: [874, 42, 38, 38]
            fitness_station: [874, 42, 38, 38]
            florist: [138, 126, 38, 38]
            forest: [46, 210, 38, 38]
            natural_forest: [46, 210, 38, 38]
            nature_reserve: [46, 210, 38, 38]
            fountain: [276, 126, 38, 38]
            fuel: [960, 168, 38, 38]
            gallery: [640, 168, 38, 38]
            garden: [644, 84, 38, 38]
            generic: [368, 210, 38, 38]
            category-namespace-other: [368, 210, 38, 38]
            category-predicate-addressing: [368, 210, 38, 38]
            generic_shield-1char: [104, 554, 72, 72]
            generic_shield-2char: [0, 554, 98, 72]
            generic_shield-3char: [832, 478, 132, 72]
            generic_shield-4char: [672, 478, 152, 72]
            generic_shield-5char: [484, 478, 180, 72]
            gift: [92, 126, 38, 38]
            golf_course: [368, 84, 38, 38]
            government: [138, 168, 38, 38]
            townhall: [138, 168, 38, 38]
            public: [138, 168, 38, 38]
            embassy: [138, 168, 38, 38]
            category-predicate-civic: [138, 168, 38, 38]
            hairdresser: [46, 42, 38, 38]
            hardware: [828, 42, 38, 38]
            doityourself: [828, 42, 38, 38]
            painter: [828, 42, 38, 38]
            historical: [46, 126, 38, 38]
            hospital: [184, 0, 38, 38]
            category-namespace-health: [184, 0, 38, 38]
            category-predicate-health: [184, 0, 38, 38]
            hotel: [732, 0, 38, 38]
            motel: [732, 0, 38, 38]
            hostel: [732, 0, 38, 38]
            category-predicate-sleep: [732, 0, 38, 38]
            ice_cream: [322, 210, 38, 38]
            information: [414, 210, 38, 38]
            jewelry: [736, 42, 38, 38]
            jewish: [46, 0, 38, 38]
            landmark: [272, 0, 38, 38]
            memorial: [272, 0, 38, 38]
            monument: [272, 0, 38, 38]
            tower: [272, 0, 38, 38]
            beacon: [272, 0, 38, 38]
            laundry: [690, 42, 38, 38]
            library: [0, 0, 38, 38]
            light_rail: [686, 0, 38, 38]
            tram_stop: [686, 0, 38, 38]
            lighthouse: [230, 84, 38, 38]
            liquor: [506, 126, 38, 38]
            alcohol: [506, 126, 38, 38]
            mall: [644, 42, 38, 38]
            marina: [92, 168, 38, 38]
            dock: [92, 168, 38, 38]
            mineshaft: [782, 42, 38, 38]
            quarry: [782, 42, 38, 38]
            adit: [782, 42, 38, 38]
            mobile_phone: [506, 42, 38, 38]
            museum: [0, 126, 38, 38]
            observatory: [0, 126, 38, 38]
            music: [368, 42, 38, 38]
            muslim: [92, 0, 38, 38]
            newspaper: [322, 42, 38, 38]
            kiosk: [322, 42, 38, 38]
            office: [552, 84, 38, 38]
            insurance: [552, 84, 38, 38]
            company: [552, 84, 38, 38]
            category-predicate-service: [552, 84, 38, 38]
            optician: [276, 42, 38, 38]
            park: [230, 126, 38, 38]
            category-predicate-nature: [230, 126, 38, 38]
            parking: [690, 126, 38, 38]
            peak: [184, 84, 38, 38]
            pet: [230, 42, 38, 38]
            pharmacy: [966, 42, 38, 38]
            photographic_laboratory: [184, 42, 38, 38]
            photographer: [184, 42, 38, 38]
            pier: [640, 0, 38, 38]
            place_of_worship: [276, 168, 38, 38]
            chapel: [276, 168, 38, 38]
            wayside_shrine: [276, 168, 38, 38]
            category-predicate-religion: [276, 168, 38, 38]
            playground: [460, 42, 38, 38]
            police: [226, 0, 38, 38]
            post_office: [322, 168, 38, 38]
            recycling: [92, 42, 38, 38]
            restaurant: [92, 210, 38, 38]
            category-namespace-eat_and_drink: [92, 210, 38, 38]
            category-predicate-eat: [92, 210, 38, 38]
            retail: [598, 42, 38, 38]
            store: [598, 42, 38, 38]
            category-namespace-shop_and_service: [598, 42, 38, 38]
            category-predicate-shop: [598, 42, 38, 38]
            ruin: [502, 0, 38, 38]
            ruins: [502, 0, 38, 38]
            archaeological_site: [502, 0, 38, 38]
            school: [506, 84, 38, 38]
            kindergarten: [506, 84, 38, 38]
            category-namespace-education_and_religion: [506, 84, 38, 38]
            category-predicate-education: [506, 84, 38, 38]
            sdk_shield-1char: [832, 554, 84, 84]
            sdk_shield-2char: [712, 554, 112, 84]
            sdk_shield-3char: [560, 554, 144, 84]
            sdk_shield-4char: [384, 554, 168, 84]
            sdk_shield-5char: [184, 554, 192, 84]
            shoemaker: [552, 42, 38, 38]
            ski: [322, 126, 38, 38]
            ski_rental: [322, 126, 38, 38]
            ski_school: [322, 126, 38, 38]
            winter_sports: [322, 126, 38, 38]
            slipway: [138, 84, 38, 38]
            soccer: [322, 84, 38, 38]
            sports: [0, 42, 38, 38]
            sports_centre: [184, 168, 38, 38]
            pitch: [184, 168, 38, 38]
            recreation_ground: [184, 168, 38, 38]
            spring: [276, 84, 38, 38]
            hot_spring: [276, 84, 38, 38]
            stadium: [414, 126, 38, 38]
            subway_entrance: [456, 0, 38, 38]
            supermarket: [552, 126, 38, 38]
            greengrocer: [552, 126, 38, 38]
            swimming_pool: [460, 126, 38, 38]
            swimming_area: [460, 126, 38, 38]
            tailor: [962, 0, 38, 38]
            tennis: [368, 126, 38, 38]
            theatre: [594, 168, 38, 38]
            category-predicate-fun: [594, 168, 38, 38]
            theme_park: [966, 84, 38, 38]
            amusement_ride: [966, 84, 38, 38]
            toilets: [828, 84, 38, 38]
            townspot-l: [932, 210, 32, 32]
            townspot-l-rev: [760, 210, 32, 32]
            townspot-m: [900, 210, 24, 24]
            townspot-m-rev: [728, 210, 24, 24]
            townspot-s: [872, 210, 20, 20]
            townspot-s-rev: [700, 210, 20, 20]
            townspot-xl: [972, 210, 40, 40]
            townspot-xl-rev: [800, 210, 40, 40]
            townspot-xs: [848, 210, 16, 16]
            townspot-xs-rev: [680, 210, 12, 12]
            toys: [916, 0, 38, 38]
            traffic_signals: [916, 168, 38, 38]
            train_station: [410, 0, 38, 38]
            station: [410, 0, 38, 38]
            train: [410, 0, 38, 38]
            category-predicate-transport: [410, 0, 38, 38]
            ux-current-location: [294, 254, 88, 88]
            ux-locate-off: [628, 254, 72, 72]
            ux-locate-on: [548, 254, 72, 72]
            ux-route-arrow: [0, 254, 128, 128]
            ux-route-start: [214, 254, 72, 92]
            ux-route-stop: [136, 254, 72, 92]
            ux-search-active: [388, 254, 72, 108]
            ux-search-inactive: [468, 254, 72, 108]
            ux-transit-stop: [584, 212, 42, 36]
            veterinary: [138, 0, 38, 38]
            viewpoint: [686, 168, 38, 38]
            category-namespace-do_and_see: [686, 168, 38, 38]
            category-predicate-attraction: [686, 168, 38, 38]
            vineyard: [46, 168, 38, 38]
            volcano: [92, 84, 38, 38]
            wine: [184, 210, 38, 38]
            winery: [456, 168, 38, 38]
            zoo: [920, 84, 38, 38]

sources:
    mapzen:
        type: TopoJSON #GeoJSON, MVT, TopoJSON
        url:  https://tile.mapzen.com/mapzen/vector/v1/all/{z}/{x}/{y}.topojson
        #url:  https://tile.dev.mapzen.com/mapzen/vector/v1/all/{z}/{x}/{y}.topojson
        #url:  //localhost:8080/vector/all/{z}/{x}/{y}.json
        url_params:
            api_key: vector-tiles-HqUVidw
        max_zoom: 16

#    # Only enable this for local debug, should not be enabled for prod (app inserts these at runtime)
#    # These are all in San Francisco, California
#    #
#    # Current location gem
#    mz_current_location:
#        type: GeoJSON
#        url: https://gist.githubusercontent.com/anonymous/9e9588228b0a604264a2/raw/b28be49bea0b7feb859eb65b588c28e9fee5ae2c/map.geojson
#    # Route line
#    mz_route_line:
#        type: GeoJSON
#        # sf to ny
#        #url: https://gist.githubusercontent.com/anonymous/30c6c1a75c168d91d90c/raw/92bfe55e622766d250b1f2f5d17bdc7c26acb956/map.geojson
#        # local sf trip
#        url: https://gist.githubusercontent.com/anonymous/9a610ebda6fe4be7bccc/raw/8d217e43f2412d48d01534ba115f1e42dac72e68/map.geojson
#    # Dashed route line
#    mz_dash_line:
#        type: GeoJSON
#        url: https://gist.githubusercontent.com/anonymous/d73b851c64c3e5fbfc2754aa32f44c10/raw/938ae435776e176919c4797bed1465a92e403ef3/map.geojson
#    # Transit route line
#    mz_route_line_transit:
#        type: GeoJSON
#        url: https://gist.githubusercontent.com/anonymous/71ae88cbc6d62c4d141ecd6a61060050/raw/2254bbc18243f5dc609e663a580c9412a7447936/map.geojson
#    # Pin at start of route
#    mz_route_start:
#        type: GeoJSON
#        url: https://gist.githubusercontent.com/anonymous/5262969cb7549ea69221/raw/be03f233fa323d9b5cf50ef1d8e89a1faa3750f1/map.geojson
#    # Pin at end of route
#    mz_route_stop:
#        type: GeoJSON
#        url: https://gist.githubusercontent.com/anonymous/dbae9635dfe46796490e/raw/df55c318635a7d91b309ed40754d4738a292fd38/map.geojson
#    # Arrow for current route location
#    mz_route_location:
#        type: GeoJSON
#        url: https://gist.githubusercontent.com/anonymous/36613092be6e2aa004fd/raw/f753d13069425199e1dea1b449ef67d723f6510e/map.geojson
#    # Dots for transit stops in route preview
#    mz_route_transit_stop:
#        type: GeoJSON
#        url: https://gist.githubusercontent.com/anonymous/b9f16bca4a804f50faf71277d52ee4ab/raw/db13e4e765fa1ac8844b8ba02f4a0f66fe772907/map.geojson
#    # Pins showing search result locations
#    mz_search_result:
#        type: GeoJSON
#        url: https://gist.githubusercontent.com/anonymous/57dc09eeb120919f76de/raw/43426217da3c2bae0522dc4257aaa61e4df3981e/map.geojson
#    # Default point styling (SDK)
#    mz_default_point:
#        type: GeoJSON
#        url: https://gist.githubusercontent.com/anonymous/16324c771edfce45be0721390389b878/raw/7dbaebf17da7da8562e6c6f8768bc8cff83efa88/map.geojson
#    # Default shield styling (SDK)
#    mz_default_shield:
#        type: GeoJSON
#        url: https://gist.githubusercontent.com/anonymous/5a789f6bd8b51b5693ba9cd57a767aa1/raw/d4523a6c9deebca125298c31085958262caa1ecd/map.geojson
#    # Default line styling (SDK)
#    mz_default_line:
#        type: GeoJSON
#        url: https://gist.githubusercontent.com/anonymous/26f4e8b6b34b2617b5d5533d89decb39/raw/df8e180ab4f7f19448014dccc4a755f7cfa20003/map.geojson
#    # Default polygon styling (SDK)
#    mz_default_polygon:
#        type: GeoJSON
#        url: https://gist.githubusercontent.com/anonymous/88235c795bb44b8c45150bdd5561f947/raw/71d4fab97b6513833bf1a589167119e6169ef86d/map.geojson

camera:
    type: isometric
    axis: [0, .1] # very small building extrusion

#lights:
#    light1:
#        type: directional
#        direction: [1, 1, -.9]
#        diffuse: .5
#        ambient: .85

styles:
    dashedline:
        base: lines
        texcoords: true
        shaders:
            blocks:
                global: |
                    vec2 mirrorTile(vec2 _st, vec2 _zoom){
                        _st *= _zoom;
                        if (fract(_st.y * 0.5) > 0.5){
                            _st.x = _st.x+0.5;
                            _st.y = 1.0-_st.y;
                        }
                        return fract(_st);
                    }

                    float fillY(vec2 _st, float _pct,float _antia){
                      return smoothstep( _pct-_antia, _pct, _st.y);
                    }

                    float chevron(vec2 st){
                        st = mirrorTile(st,vec2(1.,6.));
                        float x = st.x*2.;
                        float a = floor(1.+sin(x*3.14));
                        float b = floor(1.+sin((x+1.)*3.14));
                        float f = fract(x);
                        return fillY(st,mix(a,b,f),0.01);
                    }

                    float stripes(vec2 st){
                        st = st*10.;
                        return step(.5,1.0-smoothstep(.3,1.,abs(sin(st.y*3.1415))));
                    }

                    float xMargin(vec2 st,float margin){
                        return 1.0-clamp(step(margin*.5,st.x)*step(margin*.5,1.0-st.x),0.,1.);
                    }

                    //  Function from Iñigo Quiles
                    //  https://www.shadertoy.com/view/MsS3Wc
                    vec3 hsb2rgb( in vec3 c ){
                        vec3 rgb = clamp(abs(mod(c.x*6.0+vec3(0.0,4.0,2.0),
                                                 6.0)-3.0)-1.0,
                                         0.0,
                                         1.0 );
                        rgb = rgb*rgb*(3.0-2.0*rgb);
                        return c.z * mix(vec3(1.0), rgb, c.y);
                    }
                color: |
                    vec2 st = v_texcoord;
                    vec4 foreground = vec4(0.400,0.400,0.400,1.0);

                    vec3 color1 = hsb2rgb(vec3(color.r,1.,1.));
                    vec3 color2 = hsb2rgb(vec3(color.g,1.,1.));

                    // Nathaniel un-comment the following lines
                     color = mix(v_color,foreground, chevron(st) - xMargin(st,.25) );
                     color = mix(v_color,foreground, stripes(st) );
                    // color = mix(v_color,foreground, clamp(stripes(st)-xMargin(st,.9),0.,1.) ) ;

    tools:
        base: polygons
        shaders:
            extensions: OES_standard_derivatives
            blocks:
                global: |
                    // GridTile
                    //=============================
                    varying vec3 v_pos;

                    #ifdef TANGRAM_FRAGMENT_SHADER

                    vec2 TileCoords() {
                        return fract(v_pos.xy*0.0002445);
                    }

                    bool grid(vec2 st, float res, float press) {
                        vec2 grid = fract(st*res);
                        return grid.x < res*press || grid.y < res*press;
                    }

                    float TileGrid(float res) {
                        vec2 st = TileCoords()*100.*res;
                        float pct = 0.0;
                        float press = 0.4+(1.0-fract(u_map_position.z))*0.1;
                        if (grid(st,0.01,press)) pct += 0.5;
                        if (grid(st,0.1,press)) pct += 0.1;
                        return pct;
                    }

                    float TileGrid() {
                        return mix(TileGrid(1.),TileGrid(2.),fract(u_map_position.z));
                    }

                    float aastep(float threshold, float value) {
                      #ifdef TANGRAM_EXTENSION_OES_standard_derivatives
                        float afwidth = length(vec2(dFdx(value), dFdy(value))) * 0.70710678118654757;
                        return smoothstep(threshold-afwidth, threshold+afwidth, value);
                      #else
                        return step(threshold, value);
                      #endif
                    }

                    vec2 tile(vec2 _st, float _zoom){
                      _st *= _zoom;
                      return fract(_st);
                    }

                    vec2 brickTile(vec2 st, float zoom){
                      st *= zoom;
                      if (fract(st.y * 0.5) > 0.5){
                          st.x += 0.5;
                      }
                      return fract(st);
                    }

                    float circleDF(vec2 st){
                      vec2 pos = vec2(0.5)-st;
                      return dot(pos,pos)*3.14;
                    }

                    float circle(vec2 st, float radius){
                      radius *= 0.75;
                      return 1.-aastep(radius,circleDF(st));
                    }

                    float dots(vec2 st, float size){
                        st = brickTile(st, 2.);
                        return circle(st, size);
                    }

                    float dotsDF(vec2 st){
                        st = brickTile(st, 2.);
                        return circleDF(st);
                    }

                    float TileDots(float scale, float size) {
                        vec2 IN = TileCoords()*scale;
                        vec2 OUT = TileCoords()*scale*2.;
                        float pct = fract(u_map_position.z);
                        pct = pow(pct,6.);
                        // return mix(dots(fract(IN),size*(1.-pct)), dots(fract(OUT),size*pct), pct);
                        return mix(dots(fract(IN),size*(1.-pct)), dots(fract(OUT),size*pct), pct);
                    }

                    float TileDotsDF(float scale, float size) {
                        vec2 IN = TileCoords()*scale;
                        vec2 OUT = TileCoords()*scale*2.;
                        float pct = fract(u_map_position.z);
                        pct = pow(pct,15.);
                        float d = 0.0;
                        d = dotsDF(fract(IN))*(1.-pct) + dotsDF(fract(OUT))*pct;
                        d = 1.-aastep(size,d);
                        return d;
                    }

                    // Grain
                    //=============================
                    float random(vec2 p) {
                        return fract(1e4 * sin(17.0 * p.x + p.y * 0.1) * (0.1 + abs(sin(p.y * 13.0 + p.x))));
                    }

                    float noise(vec2 x) {
                        vec2 i = floor(x);
                        vec2 f = fract(x);
                        float a = random(i);
                        float b = random(i + vec2(1.0, 0.0));
                        float c = random(i + vec2(0.0, 1.0));
                        float d = random(i + vec2(1.0, 1.0));
                        vec2 u = f * f * (3.0 - 2.0 * f);
                        return mix(a, b, u.x) + (c - a) * u.y * (1.0 - u.x) + (d - b) * u.x * u.y;
                    }

                    float fbm(in vec2 p) {
                        float s = 0.0;
                        float m = 0.0;
                        float a = 0.5;
                        for(int i=0; i<2; i++ ){
                            s += a * noise(p);
                            m += a;
                            a *= 0.5;
                            p *= 2.0;
                        }
                        return s/m;
                    }

                    float grain(vec2 pos) {
                        vec2 st = pos/u_resolution.xy-vec2(.5);
                        return dot(st,st)+(fbm(pos*0.6)*0.1);
                    }
                    #endif
                position: |
                    // GridTile
                    v_pos = modelPosition().xyz * 32767.;

    grid:
        base: polygons
        mix: tools
        shaders:
            blocks:
                filter: |
                    vec2 st = (TileCoords()+vec2(.4))*1000.;
                    color.rgb = mix(vec3(0.899,0.95,1.0), vec3(0.899,0.95,1.0), gl_FragCoord.x / u_resolution.x);
                    color.rgb -= grain(gl_FragCoord.xy)*0.1;

                    color.rgb = mix(color.rgb, vec3(0.639,0.886,0.906), TileGrid());
                    //float g = grain(st);
                    //color.rgb = mix(color.rgb, vec3(0.475,0.853,0.853),pow(g,3.5));

    ground:
        base: polygons
        mix: tools
        shaders:
            blocks:
                filter: |
                    color.rgb -= grain(gl_FragCoord.xy)*0.5;
    ground2:
        base: polygons
        mix: tools
        shaders:
            blocks:
                filter: |
                    color.rgb -= grain(gl_FragCoord.xy)*0.2;
    lines_transparent:
        base: lines
        blend: overlay
    outline_transparent:
        base: lines
        blend: overlay
    polygons_transparent:
        base: polygons
        blend: overlay
    icons:
        base: points
        texture: pois
        interactive: true
        blend_order: 1
    text-blend-order:
        base: text
        blend_order: 1
    ux-route-line-overlay:
        base: lines
        blend: overlay
        blend_order: 0
    ux-route-line-dash-overlay:
        base: lines
        blend: overlay
        blend_order: 0
        dash: [2, 1]
    ux-transit-line-overlay:
        base: lines
        blend: overlay
        blend_order: 0
    ux-location-gem-overlay:
        base: points
        texture: pois
        interactive: true
        blend: overlay
        blend_order: 2
    ux-icons-overlay:
        base: points
        texture: pois
        interactive: true
        blend: overlay
        blend_order: 3
    sdk-point-overlay:
        base: points
        texture: pois
        interactive: true
        blend: overlay
        blend_order: 3
    sdk-shield-overlay:
        base: points
        texture: pois
        interactive: true
        blend: overlay
        blend_order: 3
    sdk-line-overlay:
        base: lines
        blend: overlay
        blend_order: 0
    sdk-polygon-overlay:
        base: polygons
        blend: overlay
        blend_order: 0

scene:
    background:
        color: *scene1

fonts:
    Montserrat:
        url: https://fonts.gstatic.com/s/montserrat/v7/zhcz-_WihjSQC0oHJ9TCYL3hpw3pgy2gAi-Ip7WPMi0.woff

layers:
    # Map overlays for styling the server response (using special source layer names) for route line, current location, and search result pins
    mz_route_line:
        data: { source: mz_route_line }
        draw:
            ux-route-line-overlay:
                color: '#06a6d4'
                order: 500
                width: [[0,3.5px],[5,5px],[9,7px],[10,6px],[11,6px],[13,8px],[14,9px],[15,10px],[16,11px],[17,12px],[18,10px]]
    mz_route_line_dash:
        data: { source: mz_dash_line }
        draw:
            ux-route-line-dash-overlay:
                color: '#06a6d4'
                order: 500
                width: [[2,2px],[5,2.5px],[11,3px],[16,7px],[17,9px]]
    mz_route_line_transit:
        data: { source: mz_route_line_transit }
        draw:
            ux-transit-line-overlay:
                # each transit route segment could be a different "line" each with it's own color
                # but some transit lines don't define a color, in those cases default to blue
                # and since the color is coming from Transit.land they call it "color" instead of "colour"
                color: function() { return feature.color || '#06a6d4'; }
                order: 500
                width: [[0,3.5px],[5,5px],[9,7px],[10,6px],[11,6px],[13,8px],[14,9px],[15,10px],[16,11px],[17,12px],[18,10px]]
    mz_current_location_gem:
        data: { source: mz_current_location }
        draw:
            ux-location-gem-overlay:
                interactive: true
                sprite: ux-current-location
                size: 36px
                collide: false
                transition:
                    [show, hide]:
                        time: 0s
    mz_route_location:
        data: { source: mz_route_location }
        draw:
            ux-location-gem-overlay:
                interactive: true
                sprite: ux-route-arrow
                size: [60px,60px]
                collide: false
                transition:
                    [show, hide]:
                        time: 0s
    mz_route_start:
        data: { source: mz_route_start }
        draw:
            ux-icons-overlay:
                interactive: true
                priority: 1
                sprite: ux-route-start
                size: [36px,46px]
                collide: false
                anchor: top
                transition:
                    [show, hide]:
                        time: 0s
    mz_route_stop:
        data: { source: mz_route_stop }
        draw:
            ux-icons-overlay:
                interactive: true
                priority: 1
                sprite: ux-route-stop
                size: [36px,46px]
                collide: false
                anchor: top
                transition:
                    [show, hide]:
                        time: 0s
    mz_route_transit_stop:
        data: { source: mz_route_transit_stop }
        draw:
            ux-icons-overlay:
                interactive: true
                sprite: ux-transit-stop
                size: [15px,15px]
                collide: false
                transition: { show: { time: 0s }, hide: { time: 0s } }
    mz_search_result:
        data: { source: mz_search_result }
        draw:
            ux-icons-overlay:
                interactive: true
                sprite: ux-search-active
                size: [36px,54px]
                collide: false
                anchor: top
                transition:
                    [show, hide]:
                        time: 0s
        inactive:
            filter: { state: inactive }
            draw:
                ux-icons-overlay:
                    sprite: ux-search-inactive
    mz_dropped_pin:
        data: { source: mz_dropped_pin }
        draw:
            ux-icons-overlay:
                interactive: true
                sprite: ux-search-active
                size: [36px,54px]
                collide: false
                anchor: top
                transition:
                    [show, hide]:
                        time: 0s

    # Used by the SDK to place point, line, and polygon overlays on the map
    mz_default_point:
        data: { source: mz_default_point }
        draw:
            sdk-point-overlay:
                interactive: true
                sprite: ux-search-active
                size: [36px,54px]
                collide: false
                anchor: top
                transition:
                    [show, hide]:
                        time: 0s
    mz_default_shield:
        data: { source: mz_default_shield }
        draw:
            sdk-shield-overlay:
                interactive: true
                sprite: |
                    function() {
                        if( feature.ref ) {
                            return ('sdk_shield-' + feature.ref.length + 'char');
                        } else {
                            return ('sdk_shield-' + feature.name.length + 'char');
                        }
                    }
                sprite_default: sdk_shield-1char
                color: global.sdk_shield_color
                collide: false
                transition:
                    [show, hide]:
                        time: 0s
                text:
                    # offset: [0px, -1px]
                    text_source: |
                        function() {
                            if( feature.ref ) {
                                return feature.ref;
                            } else {
                                return feature.name;
                            }
                        }
                    anchor: center
                    font:
                        family: Montserrat
                        fill: global.sdk_shield_text_color
                        style: bold
                        size: [[7,7px],[12,8px],[16,11px]]

        width_1char:
            filter: |
                function() {
                    if( feature.ref ) {
                        return (feature.ref.length === 1);
                    } else {
                        return (feature.name.length === 1);
                    }
                }
            draw:
                sdk-shield-overlay:
                    size: [[6,[16px,16px]],[13,[18px,18px]],[16,[21px,21px]]]
        width_2char:
            filter: |
                function() {
                    if( feature.ref ) {
                        return (feature.ref.length === 2);
                    } else {
                        return (feature.name.length === 2);
                    }
                }
            draw:
                sdk-shield-overlay:
                    size: [[6,[21px,16px]],[13,[24px,18px]],[16,[28px,21px]]]
        width_3char:
            filter: |
                function() {
                    if( feature.ref ) {
                        return (feature.ref.length === 3);
                    } else {
                        return (feature.name.length === 3);
                    }
                }
            draw:
                sdk-shield-overlay:
                    size: [[6,[27px,16px]],[13,[31px,18px]],[16,[36px,21px]]]
        width_4char:
            filter: |
                function() {
                    if( feature.ref ) {
                        return (feature.ref.length === 4);
                    } else {
                        return (feature.name.length === 4);
                    }
                }
            draw:
                sdk-shield-overlay:
                    size: [[6,[32px,16px]],[13,[36px,18px]],[16,[41px,21px]]]
        width_5char:
            filter: |
                function() {
                    if( feature.ref ) {
                        return (feature.ref.length === 5);
                    } else {
                        return (feature.name.length === 5);
                    }
                }
            draw:
                sdk-shield-overlay:
                    size: [[6,[37px,16px]],[13,[41px,18px]],[16,[48px,21px]]]
        # this is kinda a hack
        width_longggggg:
            filter: |
                function() {
                    if( feature.ref ) {
                        return (feature.ref.length > 5);
                    } else {
                        return (feature.name.length > 5);
                    }
                }
            draw:
                sdk-shield-overlay:
                    visible: false
    mz_default_line:
        data: { source: mz_default_line }
        draw:
            sdk-line-overlay:
                color: '#06a6d4'
                order: 503
                width: 3px
    mz_default_polygon:
        data: { source: mz_default_polygon }
        draw:
            sdk-polygon-overlay:
                color: [0.02,0.65,0.82,0.5]  #'#06b1e2'
                order: 501
            sdk-line-overlay:
                color: '#06a6d4'
                order: 502
                width: 0px


    # Basemap styling
    earth:
        data: { source: mapzen, layer: earth }
        draw:
            polygons:
                order: function() { return feature.sort_rank; }
                color: *earth1

    ocean-water:
        data: { source: mapzen, layer: water }
        # don't filter ocean polys because OSM ocean split tiles don't have coherent areas
        filter: { kind: ocean }
        draw:
            polygons:
                order: function() { return feature.sort_rank; }
                color: *water1
        water_boundaries-ocean:
            filter: { boundary: true, $zoom: { min: 10 } }
            draw:
                lines:
                    order: function() { return feature.sort_rank; }
                    color: *water1_o
                    width: [[10,1px],[12,2px]]
                    join: round

    water-not-ocean:
        data: { source: mapzen, layer: water }
        filter: { not: { kind: ocean } }
        draw:
            polygons:
                order: function() { return feature.sort_rank; }
                #color: *water1
        inland-water:
            filter:
                all:
                    - kind: [lake, water, riverbank, reservoir, playa, swimming_pool]
                any:
                    # limit show smaller landuse areas to higher zooms
                    - { $zoom: { min: 1 },  area: { min: 40000000000 } }
                    - { $zoom: { min: 2 },  area: { min: 20000000000 } }
                    # some weird natural earth scale set transition
                    - { $zoom: { min: 3 },  area: { min: 80000000000 } }
                    - { $zoom: { min: 4 },  area: { min: 5000000000 } }
                    - { $zoom: { min: 5 },  area: { min: 700000000 } }
                    - { $zoom: { min: 6 },  area: { min: 500000000 } }
                    - { $zoom: { min: 7 },  area: { min: 160000000 } }
                    - { $zoom: { min: 8 },  area: { min: 40000000 } }
                    - { $zoom: { min: 9 },  area: { min: 10000000 } }
                    - { $zoom: { min: 10 }, area: { min: 8000000 } }
                    - { $zoom: { min: 11 }, area: { min: 2000000 } }
                    - { $zoom: { min: 12 }, area: { min: 200000 } }
                    - { $zoom: { min: 13 }, area: { min: 100000 } }
                    - { $zoom: { min: 14 }, area: { min: 2000 } }
                    - { $zoom: { min: 15 } }
            draw:
                polygons:
                    color: *water1
        other-water-areas:
            filter: { not: { kind: [lake, water, reservoir, playa] }, $zoom: { min: 11 }, area: { min: 100 } }
            draw:
                polygons:
                    color: *water1
        playas:
            filter: { kind: playa, $zoom: {min: 6} }
            draw:
                polygons:
                    color: *water2
#        swimming_pool:
#            filter: { kind: swimming_pool }
#            draw:
#                polygons:
#                    order: 8
        water_boundaries-not-ocean:
            filter:
                all:
                    - boundary: true
                    - $zoom: { min: 14 }
                any:
                    - { $zoom: { min: 14 }, area: { min: 2000 } }
                    - { $zoom: { min: 15 } }
            draw:
                lines:
                    order: function() { return feature.sort_rank; }
                    color: *water2_o
                    width: [[14,1.0px],[16,1.5px],[18,2m]]
                    join: round
        river:
            filter: { kind: [river,canal,stream,dam,ditch,drain], $zoom: { min: 13 } }
            draw:
                lines:
                    order: function() { return feature.sort_rank; }
                    color: *water2_o
                    width: [[13,0.5px],[14,1.0px],[16,1.5px],[18,4m]]
                    join: round

    subway-light-rail:
        data: { source: mapzen, layer: transit }
        filter: { not: { kind: [platform] }, $zoom: { min: 14 } }
        draw:
            lines:
                interactive: true
                order: function() { return feature.sort_rank || 275; }
        railway:
            filter: { kind: [railway,train] }
            draw:
                lines:
                    color: grey
                    width: [[14,1px],[16,2px],[18,3m]]
        subway:
            filter: { kind: subway }
            draw:
                lines:
                    color: *rail1
                    width: [[14,0.5px],[16,1px],[17,1.5px],[18,2m]]
        light_rail:
            filter: { kind: [light_rail,tram], $zoom: { min: 15 } }
            draw:
                lines:
                    order: 415    # We want this to be above roads, below gondolas
                    color: grey
                    width: [[14,0.5px],[16,1px],[17,1.5px],[19,1m]]

    railway-late:
        data: { source: mapzen, layer: roads }
        filter: { kind: rail, not: { railway: [subway,light_rail,tram] } }
        draw:
            lines:
                interactive: true
                color: [[14,*rail1_e],[16,*rail1]]
                width: [[15,0.5px],[16,0.75px],[18,1m]]
                # let roads sort themselves past zoom 14
                order: function() { return feature.sort_rank; }
                # but give them all the same outline
                outline:
                    order: 354
        bridges-tunnels:
            filter: { any: [is_bridge: true, is_tunnel: true] }
            draw:
                lines:
                    outline:
                        # except bridges and tunnels, their outlines should also self-sort
                        order: function() { return feature.sort_rank || 305; }
        service:
            filter: { service: true }
            draw:
                lines:
                    color: *rail2
                    width: [[14,0px],[15,0.4px],[16,0.6px],[18,0.7m]]
    platforms:
        data: { source: mapzen, layer: transit }
        filter: { kind: platform, $zoom: { min: 16 } }
        draw:
            lines_transparent:
                color: *grey9
                width: 5m
                visible: *grey9_v
                order: function() { if($zoom<17) { return feature.sort_rank; } else { return 435; } }
            polygons_transparent:
                order: function() { if($zoom<17) { return feature.sort_rank; } else { return 435; } }
            outline_transparent:
                order: function() { if($zoom<17) { return feature.sort_rank; } else { return 436; } }
        polygon_geom:
            filter: { $geometry: polygon }
            draw:
                polygons_transparent:
                    color: *grey9
                    visible: *grey9_v
                lines_transparent:
                    visible: false
                outline_transparent:
                    color: *grey9_o
                    width: [[15,0px],[16,0.5px],[17,1px],[19,2px]]
    roads:
        data: { source: mapzen, layer: roads }
        filter: { not: { kind: rail } }
        draw:
            lines:
                interactive: true
                #color: black
                width: 1px
                order: function() { return feature.sort_rank; }
                # but give them all the same outline
                outline:
                    order: 352
            text-blend-order:
                visible: false    # labels are enabled by each layer below
                font:
                    family: *text_font_family
                    weight: 400
                    fill: *text_fill

        early-other:
            filter: { $zoom: { max: 12 }, kind: [major_road] }
            draw:
                lines:
                    order: 351
        early-minor_road:
            filter: { $zoom: { max: 15 }, kind: [minor_road] }
            draw:
                lines:
                    order: 350
        bridges-tunnels:
            filter: { any: [is_bridge: true, is_tunnel: true] }
            draw:
                lines:
                    #cap: butt
                    outline:
                        # except bridges and tunnels, their outlines should also self-sort
                        order: function() { return feature.sort_rank; }

        # default outlines starting at zoom 16
        default-outline-width:
            filter: { $zoom: { min: 16 } }
            draw:
                lines:
                    outline:
                        width: function () { return 3/16 * Math.log($zoom); }

        natural_earth_highways:
            filter: { source: 'naturalearthdata.com' }
            draw:
                lines:
                    # put highways on top of all other roads
                    cap: round
                    join: round
                    color: [[7,*highway1_e],[8,*major_road3]]
                    width: [[5, 1px], [7, 1.4px], [9, 2px], [14, 3px], [16, 4px], [17, 10m]]
            major_road:
                filter: { kind: major_road }
                draw:
                    lines:
                        color: *highway1_e
                        width: [[5, 0.45px], [6, 0.75px]]
            minor_road:
                filter: { kind: minor_road }
                draw:
                    lines:
                        color: [[12, *minor_road1], [17, *minor_road2]]
                        width: [[12, 1.0px], [14, 1.5px], [15, 3px], [16, 5m]]
            ferry:
                filter: { kind: ferry }
                draw:
                    lines:
                        color: *ferry1
                        width: 1px
        highway:
            filter: { kind: highway, $zoom: { min: 8 } }
            draw:
                lines:
                    #cap: [[0,butt],[15,round]]
                    #join: round
                    color: *highway1
                    width: [[8, 2px], [9, 2.5px], [14, 4.0px], [15, 6.0px], [16, 6.5px], [17, 20m]]
                    outline:
                        color: *highway_casing1
                        width: [[9, 0.5px], [12, 1px], [16, 2px], [18, 6px]]
#            not_link:
#                filter: { not: { is_link: true }, $zoom: {max: 15} }
#                draw:
#                    lines:
#                        order: function() { return (14 + feature.sort_rank) || 14; }
#                        outline:
#                            # except bridges and tunnels, their outlines should also self-sort
#                            order: function() { return (14 + feature.sort_rank) || 14; }
            link:
                filter: { is_link: true } # on- and off-ramps, etc
                draw:
                    lines:
                        color: *highway_link1
                        width: [[9, 1px], [14, 2.5px], [16, 4px], [18, 9m]]
                        cap: butt
                        outline:
                            color: *highway_casing1
                            width: [[13, 0px], [14, 1px], [18, 1.5px]]
                early_link:
                    filter: { $zoom: { max: 15 } }
                    draw:
                        lines:
                            # except bridges and tunnels, their outlines should also self-sort
                            order: 352
                tunnel-link:
                    filter: {is_tunnel: true, $zoom: {min: 13} }
                    draw:
                        lines:
                            color: *highway_tunnel1
                            outline:
                                color: *highway_tunnel_casing1
            tunnel:
                filter: {is_tunnel: true, $zoom: {min: 13} }
                draw:
                    lines:
                        color: *highway_tunnel1
                        outline:
                            color: *highway_tunnel_casing1
            highway_bridge:
                filter: {is_bridge: true}
                draw:
                    lines:
                        cap: round
                        outline:
                            cap: butt
            # labels-highway-early:
            #     filter: { $zoom: [7,8,9] }
            #     draw:
            #         text-blend-order:
            #             priority: 50
            #             visible: *text_visible_shields
            #             text_source: ref
            #             font:
            #                 fill: *text_fill_shield
            #                 size: 8px
            #                 stroke: { color: *text_stroke_shield, width: 2 }
            # labels-highway-z10:
            #     filter:
            #         $zoom: 10
            #     draw:
            #         text-blend-order:
            #             visible: *text_visible_shields
            #             text_source: ref
            #             font:
            #                 fill: *text_fill_shield
            #                 size: 10px
            #                 stroke: { color: *text_stroke_shield, width: 2 }
            # labels-highway-z11:
            #     filter:
            #         $zoom: 11
            #     draw:
            #         text-blend-order:
            #             visible: *text_visible_shields
            #             text_source: ref
            #             font:
            #                 fill: *text_fill_shield
            #                 size: 11px
            #                 stroke: { color: *text_stroke_shield, width: 2 }
            # labels-highway-z12:
            #     filter:
            #         $zoom: 12
            #     draw:
            #         text-blend-order:
            #             visible: *text_visible_shields
            #             text_source: ref
            #             font:
            #                 fill: *text_fill_shield
            #                 size: 11px
            #                 stroke: { color: *text_stroke_shield, width: 2 }
            labels-highway-z13:
                filter:
                    $zoom: 13
                draw:
                    text-blend-order:
                        priority: 50
                        visible: *text_visible_highway
                        #text_source: ref
                        #text_source: function() { if( feature.ref && feature.name ) { return feature.ref + " " + feature.name; } else { return feature.name; } }
                        font:
                            fill: *text_fill
                            size: 13px
                            stroke: { color: *text_stroke_road1, width: 4 }
            labels-highway-z14:
                filter:
                    $zoom: 14
                draw:
                    text-blend-order:
                        priority: 50
                        visible: *text_visible_highway
                        #text_source: ref
                        #text_source: function() { if( feature.ref && feature.name ) { return feature.ref + " " + feature.name; } else { return feature.name; } }
                        font:
                            fill: *text_fill
                            size: 11px
                            stroke: { color: *text_stroke_road1, width: 4 }
            labels-highway-z15:
                filter:
                    $zoom: 15
                draw:
                    text-blend-order:
                        visible: *text_visible_highway
                        font:
                            fill: *text_fill
                            size: 13px
                            #stroke: { color: *text_stroke_road1, width: 4 }
            labels-highway-z16:
                filter: { $zoom: { min: 16, max: 18 } }
                draw:
                    text-blend-order:
                        priority: 50
                        visible: *text_visible_highway
                        font:
                            fill: *text_fill
                            size: 15px
                            #stroke: { color: *text_stroke_road1, width: 4 }
            labels-highway-z18:
                filter: { $zoom: { min: 18 } }
                draw:
                    text-blend-order:
                        priority: 50
                        visible: *text_visible_highway
                        font:
                            fill: *text_fill2
                            size: 18px
                            #stroke: { color: *highway1, width: 4 }

        major_road:
            filter: { kind: major_road }
            # default style
            draw:
                lines:
                    #cap: round
                    #join: round
                    color: [[8, *major_road4], [13, major_road2], [17, *major_road1]]
                    width: [[13, 0px], [14, 2px], [16, 2.5px], [19, 8m]]
                    outline:
                        color: [[0,*earth1_r],[13,*major_casing1]]
                        width: [[12, 0px], [13, .5px], [15, 1px]]
            trunk_primary:
                filter: { kind_detail: [trunk, primary] }
                draw:
                    lines:
                        color: [[8, *major_road5], [9, *major_road2b], [13, *major_road2], [14, *major_road1c], [15, *major_road1b], [17, *major_road1]]
                        width: [[8, 0.6px], [9, 0.75px], [10, 1.5px], [13, 2.5px], [14, 4.5px], [15, 5.5px], [16, 7.0px], [19, 14m]]
                        outline:
                            width: [[8, 0px], [9, 0.5px], [10, 1px], [12, 1.25px], [14, 1.5px], [16, 2.5px], [18, 4.5px]]
#                early:
#                    filter: { $zoom: { max: 16 } }
#                    draw:
#                        lines:
#                            order: 352
#                            outline:
#                                order: function() { return feature.sort_rank + 2; }
#                    primary:
#                        filter: { kind: [primary] }
#                        draw:
#                            lines:
#                                outline:
#                                    order: function() { return feature.sort_rank + 1; }
                routes:
                    filter: { ref: true }
                    draw:
                        lines:
                            color: [[8,*major_road5],[9,*major_route2],[10,*major_route1]]
                            width: [[8, 1.0px], [9, 1.5px], [10, 2.0px], [14, 3.5px], [15, 4.5px], [16, 6.0px], [17, 12m]]
                            outline:
                                color: *highway_casing1
                                width: [[9, 0px], [10, 0.5px], [11, 0.75px], [12, 1px], [16, 2px], [18, 4.5px]]
#                    early:
#                        filter: { $zoom: { max: 16 } }
#                        draw:
#                            lines:
#                                order: function() { return feature.sort_rank + 2; }
#                                outline:
#                                    order: 353
                    national-routes:
                        filter: { network: ["US:US", "US:I"] }
                        draw:
                            lines:
                                color: [[8,*major_route2],[9,*major_route2],[10,*major_route1]]
                                width: [[8, 2.0px], [10, 2.5px], [14, 3.5px], [15, 4.5px], [16, 6.0px], [17, 12m]]
                    tunnel:
                        filter: {is_tunnel: true, $zoom: {min: 13} }
                        draw:
                            lines:
                                color: *major_tunnel1
                                outline:
                                    color: *major_tunnel_casing1
                    labels-trunk_primary-route-z10:
                        filter: { $zoom: [10] }
                        draw:
                            text-blend-order:
                                priority: 51
                                visible: *text_visible_trunk_primary_e2
                                text_source: ref
                                font:
                                    fill: *text_fill_shield
                                    size: 8px
                                    stroke: { color: *text_stroke_shield, width: 2 }
                    labels-trunk_primary-route-z11-z12:
                        filter: { $zoom: [11,12] }
                        draw:
                            text-blend-order:
                                priority: 51
                                visible: *text_visible_trunk_primary_e
                                text_source: ref
                                font:
                                    fill: *text_fill_shield
                                    size: 9px
                                    stroke: { color: *text_stroke_shield, width: 2 }
                    labels-trunk_primary-route-z13-z14:
                        filter: { $zoom: [13,14] }
                        draw:
                            text-blend-order:
                                priority: 51
                                visible: *text_visible_trunk_primary
                                #text_source: function() { if( feature.ref && feature.name ) { return feature.ref + " " + feature.name; } else { return feature.name; } }
                                font:
                                    fill: *text_fill
                                    size: 11px
                                    stroke: { color: *text_stroke_road3, width: 2px }
                    labels-trunk_primary-route-z15:
                        filter: { $zoom: [15] }
                        draw:
                            text-blend-order:
                                priority: 51
                                visible: *text_visible_trunk_primary
                                #text_source: function() { if( feature.ref && feature.name ) { return feature.ref + " " + feature.name; } else { return feature.name; } }
                                font:
                                    fill: *text_fill
                                    size: 12px
                                    stroke: { color: *text_stroke_road3, width: 2px }
                labels-trunk_primary-z11-z12:
                    filter:
                        $zoom: [11,12]
                    draw:
                        text-blend-order:
                            priority: 51
                            visible: *text_visible_trunk_primary_e
                            #text_source: function() { if( feature.ref && feature.name ) { if( feature.ref.length < 6 ) { return feature.ref + " " + feature.name; } else { return feature.name; } } else { return feature.name; } }
                            font:
                                fill: *text_fill
                                size: 11px
                                stroke: { color: *text_stroke_road2, width: 4 }
                labels-trunk_primary-z13-z14:
                    filter:
                        $zoom: [13,14]
                    draw:
                        text-blend-order:
                            priority: 51
                            visible: *text_visible_trunk_primary
                            #text_source: function() { if( feature.ref && feature.name ) { if( feature.ref.length < 6 ) { return feature.ref + " " + feature.name; } else { return feature.name; } } else { return feature.name; } }
                            font:
                                fill: *text_fill
                                size: 12px
                                stroke: { color: *text_stroke_road2, width: 4 }
                labels-trunk_primary-z15:
                    filter: { $zoom: [15] } #huh: , ref: false }
                    draw:
                        text-blend-order:
                            priority: 51
                            visible: *text_visible_trunk_primary
                            #text_source: function() { if( feature.ref && feature.name ) { if( feature.ref.length < 6 ) { return feature.ref + " " + feature.name; } else { return feature.name; } } else { return feature.name; } }
                            font:
                                fill: *text_fill
                                size: 14px
                                stroke: { color: *text_stroke_road2, width: 4 }
                labels-trunk_primary-z16:
                    filter: { $zoom: [16] }
                    draw:
                        text-blend-order:
                            priority: 51
                            visible: *text_visible_trunk_primary
                            #text_source: function() { if( feature.ref && feature.name ) { return feature.ref + " " + feature.name; } else { return feature.name; } }
                            font:
                                fill: *text_fill2
                                size: 14px
                                stroke: { color: *text_stroke_road2, width: 4 }
                labels-trunk_primary-z17:
                    filter: { $zoom: [17] }
                    draw:
                        text-blend-order:
                            priority: 51
                            visible: *text_visible_trunk_primary
                            #text_source: function() { if( feature.ref && feature.name ) { return feature.ref + " " + feature.name; } else { return feature.name; } }
                            font:
                                fill: *text_fill2
                                size: 15px
                                stroke: { color: *text_stroke_road2, width: 4 }
                labels-trunk_primary-z18:
                    filter: { $zoom: { min: 18 } }
                    draw:
                        text-blend-order:
                            priority: 51
                            visible: *text_visible_trunk_primary
                            #text_source: function() { if( feature.ref && feature.name ) { return feature.ref + " " + feature.name; } else { return feature.name; } }
                            font:
                                fill: *text_fill2
                                size: 16px
            link:
                filter: { is_link: true } # on- and off-ramps, etc
                draw:
                    lines:
                        color: [[8, *major_road3], [9, *major_road2b], [14, *major_road2], [15, *major_road1b], [17, *major_road1]]
                        width: [[10, 1px], [14, 3px], [16, 4.5px], [18, 10m]]
                        outline:
                            color: *major_casing1
                            width: [[10, 1px], [14, 1px], [18, 1.5px]]
            tunnel:
                filter: {is_tunnel: true, $zoom: {min: 13} }
                draw:
                    lines:
                        color: *major_tunnel1
                        outline:
                            color: *major_tunnel_casing1
            secondary:
                filter: { kind_detail: secondary }
                draw:
                    lines:
                        color: [[13,*major_road3], [14,*major_road2b], [15,*major_road1b], [17,*major_road1]]
                        width: [[11, 1.0px], [12, 1.0px], [13, 2.0px], [14, 3.5px], [15, 4.5px], [16, 7.0px], [19, 16m]]
                        outline:
                            width: [[11, 0px], [12, .75px], [13, 1.0px], [14, 1.75px], [15, 2.0px], [16, 3.0px], [18, 4.0px]]
                routes:
                    filter: { ref: true, $zoom: { min: 12} }
                    draw:
                        lines:
                            color: [[8,*major_road5],[9,*major_route2],[10,*major_route1]]  #*minor_route
                    tunnel:
                        filter: {is_tunnel: true, $zoom: {min: 13} }
                        draw:
                            lines:
                                color: *major_tunnel1
                                outline:
                                    color: *major_tunnel_casing1
                    labels-secondary-routes:
                        filter: { $zoom: [12,13] }
                        draw:
                            text-blend-order:
                                priority: 56
                                visible: *text_visible_secondary_e
                                #text_source: function() { if( feature.ref && feature.name ) { if( feature.ref.length < 6 ) { return feature.ref + " " + feature.name; } else { return feature.name; } } else { return feature.name; } }
                                font:
                                    fill: *text_fill_road_e
                                    size: 13px
                                    stroke: { color: *text_stroke_road3, width: 2 }
                in_park:
                    filter: { landuse_kind: [park,nature_reserve,conservation,golf_course,garden] }
                    draw:
                        lines:
                            #width: [[11, 0.0px], [12, .5px], [14, 1.5px], [16, 2.0px], [19, 7m]]
                            color: [[11,*green1_r],[12,*minor_road3],[14,*minor_road3]]
                            outline:
                                color: [[14,*green1_r],[15,*major_casing1]]
                                width: [[12, 0px], [13, 0.5px], [14, 1.0px], [15, 1.0px], [16, 1.5px], [18, 3.0px]]
                    golf_course:
                        filter: { landuse_kind: golf_course }
                        draw:
                            lines:
                                outline:
                                    color: *green1_r
                    nature_reserve:
                        filter: { landuse_kind: nature_reserve }
                        draw:
                            lines:
                                outline:
                                    color: *green1_r
                    conservation:
                        filter: { landuse_kind: conservation }
                        draw:
                            lines:
                                outline:
                                    color: *green1_r
                    zoo:
                        filter: { landuse_kind: zoo }
                        draw:
                            lines:
                                outline:
                                    color: *green1_r
                labels-secondary-z13:
                    filter:
                        $zoom: [12,13,14]
                    draw:
                        text-blend-order:
                            priority: 56
                            visible: *text_visible_secondary_e
                            #text_source: function() { if( feature.ref && feature.name ) { if( feature.ref.length < 6 ) { return feature.ref + " " + feature.name; } else { return feature.name; } } else { return feature.name; } }
                            font:
                                fill: *text_fill
                                size: 10px
                                stroke: { color: *text_stroke_road4, width: 1 }
                labels-secondary-z15:
                    filter:
                        $zoom: [15]
                    draw:
                        text-blend-order:
                            priority: 56
                            visible: *text_visible_secondary
                            #text_source: function() { if( feature.ref && feature.name ) { if( feature.ref.length < 6 ) { return feature.ref + " " + feature.name; } else { return feature.name; } } else { return feature.name; } }
                            font:
                                fill: *text_fill
                                size: 11px
                                stroke: { color: *text_stroke_road3, width: 3 }
                labels-secondary-z16:
                    filter:
                        $zoom: [16]
                    draw:
                        text-blend-order:
                            priority: 56
                            visible: *text_visible_secondary
                            #text_source: function() { if( feature.ref && feature.name ) { if( feature.ref.length < 6 ) { return feature.ref + " " + feature.name; } else { return feature.name; } } else { return feature.name; } }
                            font:
                                fill: *text_fill
                                size: 11px
                                stroke: { color: *text_stroke_road3, width: 3 }
                labels-secondary2:
                    filter: { $zoom: [17] }
                    draw:
                        text-blend-order:
                            priority: 56
                            visible: *text_visible_secondary
                            #text_source: function() { if( feature.ref && feature.name ) { if( feature.ref.length < 6 ) { return feature.ref + " " + feature.name; } else { return feature.name; } } else { return feature.name; } }
                            font:
                                fill: [0.15,0.15,0.15]
                                size: 12px
                                # stroke: { color: *text_stroke, width: 4 }
                labels-secondary3:
                    filter: { $zoom: { min: 18 } }
                    draw:
                        text-blend-order:
                            priority: 56
                            visible: *text_visible_secondary
                            #text_source: ref
                            #text_source: function() { if( feature.ref && feature.name ) { return feature.ref + " " + feature.name; } else { return feature.name; } }
                            font:
                                fill: *text_fill2
                                size: 13px
                                stroke: { color: *major_road1, width: 4 }
            tertiary:
                filter: { kind_detail: [tertiary, tertiary_link] }
                draw:
                    lines:
                        color: [[13,*major_road2b], [14,*major_road2a], [15,*major_road1b], [17,*major_road1]]
                        width: [[11, 0.5px], [12, .75px], [14, 2.5px], [15, 4.0px], [16, 6.5px], [17, 7.5px], [19, 14m]]
                        outline:
                            width: [[11, 0px], [13, 0.5px], [14, 1.0px], [15, 1.5px], [16, 2.0px], [18, 3.5px]]
#                early:
#                    filter: { $zoom: { max: 15 } }
#                    draw:
#                        lines:
#                            order: 352
#                            outline:
#                                order: function() { return feature.sort_rank + 3; }
                routes:
                    filter: { ref: true, $zoom: { min: 12} }
                    draw:
                        lines:
                            color: *minor_route
#                    early:
#                        filter: { $zoom: { max: 15 } }
#                        draw:
#                            lines:
#                                order: function() { return feature.sort_rank + 3; }
#                                outline:
#                                    order: 353
                    tunnel:
                        filter: {is_tunnel: true, $zoom: {min: 13} }
                        draw:
                            lines:
                                color: *major_tunnel1
                                outline:
                                    color: *major_tunnel_casing1
                link:
                    filter: { is_link: true } # on- and off-ramps, etc
                    draw:
                        lines:
                            color: *major_road1
                            width: [[11, 0.0px], [12, .5px], [14, 1.5px], [16, 2.0px], [19, 7m]]
                            outline:
                                color: [[12,*major_casing2],[13,*major_casing1]]
                                width: [[12, 0px], [14, .25px], [16, 1.0px], [18, 4.0px]]
                in_park:
                    filter: { landuse_kind: [park,nature_reserve,conservation,golf_course,garden] }
                    draw:
                        lines:
                            #width: [[11, 0.0px], [12, .5px], [14, 1.5px], [16, 2.0px], [19, 7m]]
                            color: [[11,*green1_r],[12,*minor_road3],[14,*minor_road3]]
                            outline:
                                color: [[14,*green1_r],[15,*major_casing1]]
                                width: [[12, 0px], [13, 0.5px], [14, 1.0px], [15, 1.0px], [16, 1.5px], [18, 3.0px]]
                    golf_course:
                        filter: { landuse_kind: golf_course }
                        draw:
                            lines:
                                outline:
                                    color: *green1_r
                    nature_reserve:
                        filter: { landuse_kind: nature_reserve }
                        draw:
                            lines:
                                outline:
                                    color: *green1_r
                    conservation:
                        filter: { landuse_kind: conservation }
                        draw:
                            lines:
                                outline:
                                    color: *green1_r
                    zoo:
                        filter: { landuse_kind: zoo }
                        draw:
                            lines:
                                outline:
                                    color: *green1_r
                labels-tertiary-z12-z13-z14:
                    filter: { $zoom: [12,13,14] }
                    draw:
                        text-blend-order:
                            priority: 57
                            visible: *text_visible_tertiary_e
                            #text_source: function() { if( feature.ref && feature.name ) { if( feature.ref.length < 6 ) { return feature.ref + " " + feature.name; } else { return feature.name; } } else { return feature.name; } }
                            font:
                                fill: *text_fill_road_e
                                size: 11px
                                stroke: { color: *text_stroke_road4, width: 2 }
                    labels-tertiary-z12:
                        filter: { $zoom: [12] }
                        draw:
                            text-blend-order:
                                font:
                                    size: 10px
                                    stroke: { color: *text_stroke_road4, width: 1 }
                    labels-tertiary-z13:
                        filter: { $zoom: [13] }
                        draw:
                            text-blend-order:
                                font:
                                    size: 10px
                                    stroke: { color: *text_stroke_road4, width: 1 }
                labels-tertiary-z15:
                    filter: { $zoom: [15] }
                    draw:
                        text-blend-order:
                            priority: 57
                            visible: *text_visible_tertiary
                            #text_source: function() { if( feature.ref && feature.name ) { if( feature.ref.length < 6 ) { return feature.ref + " " + feature.name; } else { return feature.name; } } else { return feature.name; } }
                            font:
                                fill: *text_fill
                                size: 12px
                                stroke: { color: *text_stroke_road3, width: 2 }
                labels-tertiary-z16-z17:
                    filter: { $zoom: { min: 16, max: 18 } }
                    draw:
                        text-blend-order:
                            priority: 57
                            visible: *text_visible_tertiary
                            #text_source: function() { if( feature.ref && feature.name ) { if( feature.ref.length < 6 ) { return feature.ref + " " + feature.name; } else { return feature.name; } } else { return feature.name; } }
                            font:
                                fill: *text_fill
                                size: 13px
                                #stroke: { color: *text_stroke_road3, width: 4 }
                labels-tertiary-z18:
                    filter: { $zoom: { min: 18 } }
                    draw:
                        text-blend-order:
                            priority: 57
                            visible: *text_visible_tertiary
                            #text_source: function() { if( feature.ref && feature.name ) { if( feature.ref.length < 6 ) { return feature.ref + " " + feature.name; } else { return feature.name; } } else { return feature.name; } }
                            font:
                                fill: *text_fill2
                                size: 15px
                                #stroke: { color: *text_stroke_road3, width: 4 }
        minor_road:
            filter: { kind: minor_road, not: { kind_detail: service } }
            draw:
                lines:
                    color: [[11, *minor_road5], [13, *minor_road4], [15, *minor_road3]]
                    width: [[11, 0.5px], [12, 0.75px], [13, 1.0px], [14, 1.2px], [15, 2.5px], [16, 8m]]
                    outline:
                        width: [[14, 0px], [15, 0.5px], [17, 0.75px], [18, 1.5px], [19, 2px]]
                        color: [[16,*minor_casing1],[17,*minor_casing2]]
#            early:
#                filter: { $zoom: { max: 15 } }
#                draw:
#                    lines:
#                        order: 352
#                        outline:
#                            order: 353
            # Is this junk code?
            round:
                filter: { $zoom: { min: 17 } }
                draw:
                    lines:
                        cap: round
                        join: round

            in_park:
                filter: { landuse_kind: [park,protected_area,nature_reserve,conservation,golf_course,garden,wood,farmland,farm] }
                draw:
                    lines:
                        #width: [[11, 0.5px], [12, 1.0px], [13, 1.2px], [14, 1.75px], [15, 2.5px], [16, 8m]]
                        color: [[11,*green1_r],[12,*green1_r],[14,*minor_road3]]
                        outline:
                            color: [[14,*green1_r],[18,*minor_casing1]]
                            width: [[12, 0px], [13, 0.5px], [14, 0.75px], [17, 2.0px], [18, 4.0px]]
                golf_course:
                    filter: { landuse_kind: golf_course }
                    draw:
                        lines:
                            outline:
                                color: *green1_r
                nature_reserve:
                    filter: { landuse_kind: nature_reserve }
                    draw:
                        lines:
                            outline:
                                color: *green1_r
                conservation:
                    filter: { landuse_kind: conservation }
                    draw:
                        lines:
                            outline:
                                color: *green1_r
                zoo:
                    filter: { landuse_kind: zoo }
                    draw:
                        lines:
                            outline:
                                color: *green1_r
            in_university:
                filter: { landuse_kind: university }
                draw:
                    lines:
                        #color: [[11,*brown1_re],[13,*brown1_r],[14,*minor_road3]]
                        outline:
                            color: *brown1_r
                            width: [[13, 0px], [14, 0.5px], [17, 2.0px], [18, 4.0px]]
            in_hospital:
                filter: { landuse_kind: hospital }
                draw:
                    lines:
                        #color: [[11,*red1_r],[13,*red1_r],[14,*minor_road3]]
                        outline:
                            color: *red1_r
                            width: [[13, 0px], [14, 0.5px], [17, 2.0px], [18, 4.0px]]

            tunnel:
                filter: {is_tunnel: true, $zoom: {min: 13} }
                draw:
                    lines:
                        cap: butt
                        color: *minor_tunnel1
                        outline:
                            color: *minor_tunnel_casing1
            minor_road_bridge:
                filter: { is_bridge: true }
                draw:
                    lines:
                        cap: round
                        outline:
                            cap: butt
            labels-minor_road:
                filter: { $zoom: [15,16,17] }
                draw:
                    text-blend-order:
                        priority: 59
                        visible: *text_visible_minor_road_e
                        text_source: name
                        font:
                            fill: *text_fill_road_e
                            size: 11px
                            stroke: { color: *text_stroke_road4, width: 2 }
                labels-minor_road-z15:
                    filter: { $zoom: [15] }
                    draw:
                        text-blend-order:
                            font:
                                size: 9px
                                stroke: { color: *text_stroke_road4, width: 1 }
                labels-minor_road-z16:
                    filter: { $zoom: [15] }
                    draw:
                        text-blend-order:
                            font:
                                size: 10px
                                stroke: { color: *text_stroke_road4, width: 1 }
            labels-minor_road2:
                filter: { $zoom: { min: 18 } }
                draw:
                    text-blend-order:
                        priority: 59
                        visible: *text_visible_minor_road
                        text_source: name
                        font:
                            fill: *text_fill2
                            size: 15px
                            #stroke: { color: *text_stroke_road4, width: 4 }
        service_road:
            filter: { kind: minor_road, kind_detail: service }
            draw:
                lines:
                    #cap: round
                    #join: round
                    color: [[0,*service_road2],[18,*service_road2]]
                    width: [[13,0.5px],[15, 1px], [16, 1.5px], [18, 4m], [19, 4.5m]]
                    outline:
                        color: [[0,*service_road_casing1],[18,*service_road_casing2]]
                        width: [[15, 0px], [16, 0.5px], [17, 1.0px], [18, 1.75px]]
            in_park:
                filter: { landuse_kind: [park,forest,nature_reserve,conservation,golf_course,garden] }
                draw:
                    lines:
                        #color: *green1_r
                        outline:
                            color: *green1_r
                            width: [[13, 0px], [14, 0.5px], [17, 2.0px], [18, 4.0px]]
                golf_course:
                    filter: { landuse_kind: golf_course }
                    draw:
                        lines:
                            outline:
                                color: *green1_r
                nature_reserve:
                    filter: { landuse_kind: nature_reserve }
                    draw:
                        lines:
                            outline:
                                color: *green1_r
                conservation:
                    filter: { landuse_kind: conservation }
                    draw:
                        lines:
                            outline:
                                color: *green1_r
                zoo:
                    filter: { landuse_kind: zoo }
                    draw:
                        lines:
                            outline:
                                color: *green1_r
            in_cemetery_garden:
                filter: { landuse_kind: [cemetery,garden] }
                draw:
                    lines:
                        outline:
                            color: *green2_r
                            width: [[13, 0.25px], [14, 0.5px], [17, 2.0px], [18, 4.0px]]
            in_university:
                filter: { landuse_kind: university }
                draw:
                    lines:
                        #color: *brown1_r
                        outline:
                            color: *brown1_r
                            width: [[13, 0px], [14, 0.5px], [17, 2.0px], [18, 4.0px]]
            in_hospital:
                filter: { landuse_kind: hospital }
                draw:
                    lines:
                        #color: *red1_r
                        outline:
                            color: *red1_r
                            width: [[13, 0px], [14, 0.5px], [17, 2.0px], [18, 4.0px]]
            labels-service_road:
                filter: { $zoom: 17 }
                draw:
                    text-blend-order:
                        priority: 60
                        visible: *text_visible_service_road
                        text_source: name
                        font:
                            fill: *text_fill
                            size: 12px
                            #stroke: { color: *text_stroke_road4, width: 4 }
            labels-service_road-z18:
                filter: { $zoom: { min: 18 } }
                draw:
                    text-blend-order:
                        priority: 60
                        visible: *text_visible_service_road
                        text_source: name
                        font:
                            fill: *text_fill2
                            size: 12px
                            #stroke: { color: *text_stroke_road4, width: 4 }

        shields:
            filter:
                $zoom: { min: 6 }
                #
                # United State looks great with shield_text alone, but...
                #
                #shield_text: true    # some roads don't have shield text, deal with that later
                #
                # Europe doesn't have many network relations set, so we could look for either
                # shield_text or ref (with no shield_text) but...
                # that makes United States look a bit funky with `(xxx)` and generic shields
                # showing up in fields of custom state shields like US:CA and US:NY
                #
                any:
                    - shield_text: true    # some roads don't have shield text, deal with that later
                    - all:
                        - shield_text: false    # some roads don't have shield text, deal with that later
                        - ref: true
                        - kind_detail: [motorway, trunk, primary, secondary, tertiary]
            # default
            draw:
                icons:
                    # you need to match any custom shield to the vector tile `network` values
                    sprite: |
                        function() {
                            if( feature.shield_text ) {
                                return ('generic_shield-' + feature.shield_text.length + 'char');
                            } else {
                                return ('generic_shield-' + feature.ref.length + 'char');
                            }
                        }
                    sprite_default: generic_shield-5char
                    priority: 58
                    # Size is specified below, and limited to 5 char in another filter
                    repeat_group: shields
                    repeat_distance: [[8,90px],[10,40px],[13,30px]]
                    placement: midpoint
                    placement_min_length_ratio:
                        - [8, 0.1]
                        - [9, 0.25]
                        - [10, 0.25]
                        - [11, 0.15]
                        - [12, 1]
                        - [13, 1.50]
                        - [14, 2.0]
                    cull_from_tile: true
                    visible: false
                    text:
                        offset: [0px, -0.5px]
                        repeat_distance: 200px
                        anchor: center
                        text_source: |
                            function() {
                                if( feature.shield_text ) {
                                    return feature.shield_text;
                                } else {
                                    return feature.ref;
                                }
                            }
                        font:
                            family: Montserrat
                            fill: [0.308,0.308,0.308]
                            size: [[7,7px],[12,8px],[16,11px]]

            default_priority_highway:
                filter:
                    all:
                        - kind_detail: motorway
                        - $zoom: { min: 9 }
                draw:
                    icons:
                        priority: 47
                        #color: yellow
                        visible: *text_visible_shields

            default_priority_trunk:
                filter:
                    all:
                        - kind_detail: [trunk]
                        - $zoom: { min: 10 }
                draw:
                    icons:
                        priority: 48
                        #color: red
                        visible: *text_visible_shields
            default_priority_primary:
                filter:
                    all:
                        - kind_detail: [primary]
                        - $zoom: { min: 12 }
                draw:
                    icons:
                        priority: 49
                        #color: aqua
                        visible: *text_visible_shields
            default_priority_trunk_secondary:
                filter:
                    all:
                        - kind_detail: [secondary]
                        - $zoom: { min: 12 }
                draw:
                    icons:
                        priority: 53
                        #color: blue
                        visible: *text_visible_shields
            default_priority_trunk_tertiary:
                filter:
                    all:
                        - kind_detail: tertiary
                        - $zoom: { min: 13 }
                draw:
                    icons:
                        priority: 55
                        #color: green
                        visible: *text_visible_shields

            width_1char:
                filter: |
                    function() {
                        if( feature.shield_text ) {
                            return (feature.shield_text.length === 1)
                        } else {
                            return (feature.ref.length === 1)
                        }
                    }
                draw:
                    icons:
                        size: [[6,[14px,14px]],[13,[16px,16px]],[16,[18px,18px]]]
            width_2char:
                filter: |
                    function() {
                        if( feature.shield_text ) {
                            return (feature.shield_text.length === 2)
                        } else {
                            return (feature.ref.length === 2)
                        }
                    }
                draw:
                    icons:
                        size: [[6,[18px,14px]],[13,[20px,15px]],[16,[24px,18px]]]
            width_3char:
                filter: |
                    function() {
                        if( feature.shield_text ) {
                            return (feature.shield_text.length === 3)
                        } else {
                            return (feature.ref.length === 3)
                        }
                    }
                draw:
                    icons:
                        size: [[6,[25px,14px]],[13,[27px,15px]],[16,[33px,18px]]]
            width_4char:
                filter: |
                    function() {
                        if( feature.shield_text ) {
                            return (feature.shield_text.length === 4)
                        } else {
                            return (feature.ref.length === 4)
                        }
                    }
                draw:
                    icons:
                        size: [[6,[29px,14px]],[13,[31px,15px]],[16,[38px,18px]]]
                # London sucks
                early:
                    filter: { $zoom: { max: 14 } }
                    draw:
                        icons:
                            visible: false
            width_5char:
                filter: |
                    function() {
                        if( feature.shield_text ) {
                            return (feature.shield_text.length === 5)
                        } else {
                            return (feature.ref.length === 5)
                        }
                    }
                draw:
                    icons:
                        size: [[6,[34px,14px]],[13,[37px,15px]],[16,[45px,18px]]]
                # London sucks
                early:
                    filter: { $zoom: { max: 14 } }
                    draw:
                        icons:
                            visible: false
            # this is kinda a hack
            width_longggggg:
                filter: |
                    function() {
                        if( feature.shield_text ) {
                            return (feature.shield_text.length > 5)
                        } else {
                            return (feature.ref.length > 5)
                        }
                    }
                draw:
                    icons:
                        visible: false
            #
            # Now for the good stuff
            #
            legit-shields:
                filter: { shield_text: true }
                # draw:
                #     icons:
                #         color: pink

                # US Interstate roads
                US-I:
                    filter:
                        network: 'US:I'
                    draw:
                        icons:
                            # you need to match any custom shield to the vector tile `network` values
                            sprite: function() { return (feature.network + '-' + feature.shield_text.length + 'char'); }
                            priority: 46
                            visible: *text_visible_shields
                            text:
                                offset: [0px, 0.5px]
                                font:
                                    fill: [0.308,0.308,0.308]
                                    size: [[7,8px],[13,9px],[15,11px]]
                    width_1char:
                        filter: function() { return (feature.shield_text.length === 1) }
                        draw:
                            icons:
                                size: [[6,[15px,18px]],[13,[17px,20px]],[15,[22px,25px]]]
                    width_2char:
                        filter: function() { return (feature.shield_text.length === 2) }
                        draw:
                            icons:
                                size: [[6,[18px,18px]],[13,[20px,20px]],[15,[25px,25px]]]
                    width_3char:
                        filter: function() { return (feature.shield_text.length === 3) }
                        draw:
                            icons:
                                size: [[6,[23px,18px]],[13,[26px,20px]],[15,[33px,25px]]]
                    width_4char:
                        filter: function() { return (feature.shield_text.length === 4) }
                        draw:
                            icons:
                                size: [[6,[25px,18px]],[13,[27px,20px]],[15,[35px,25px]]]
                    width_5char:
                        filter: function() { return (feature.shield_text.length === 5) }
                        draw:
                            icons:
                                size: [[6,[26px,18px]],[13,[30px,20px]],[15,[38px,25px]]]
                # US Federal Routes
                US-US:
                    filter:
                        network: ['US:US','US:US:Business', 'US:US:Truck', 'US:US:Alternate']
                        $zoom: { min: 7 }
                    draw:
                        icons:
                            # you need to match any custom shield to the vector tile `network` values
                            sprite: |
                                function() { return ('US:US-' + feature.shield_text.length + 'char'); }
                            priority: 47
                            cull_from_tile: true
                            visible: *text_visible_shields
                            text:
                                offset: [0px, -0.7px]
                                font:
                                    fill: [0.380,0.318,0.312]
                                    size: [[7,8px],[13,9px],[15,11px]]
                    width_1char:
                        filter: function() { return (feature.shield_text.length === 1) }
                        draw:
                            icons:
                                size: [[6,[15px,17px]],[13,[17px,19px]],[15,[22px,24px]]]
                    width_2char:
                        filter: function() { return (feature.shield_text.length === 2) }
                        draw:
                            icons:
                                size: [[6,[18px,17px]],[13,[20px,19px]],[15,[26px,24px]]]
                    width_3char:
                        filter: function() { return (feature.shield_text.length === 3) }
                        draw:
                            icons:
                                size: [[6,[22px,17px]],[13,[25px,19px]],[15,[34px,25px]]]
                    width_4char:
                        filter: function() { return (feature.shield_text.length === 4) }
                        draw:
                            icons:
                                size: [[6,[25px,17px]],[13,[29px,19px]],[15,[39px,25px]]]
                    width_5char:
                        filter: function() { return (feature.shield_text.length === 5) }
                        draw:
                            icons:
                                size: [[6,[27px,17px]],[13,[30px,19px]],[15,[41px,25px]]]
                # US State Routes
                # US-states:
                #     # Match state highways: `US:??`
                #     filter: |
                #         function() {
                #             return feature.shield_text &&
                #                 /^US:(?!US)\w\w$/.test(feature.network)
                #         }
                #     draw:
                #         icons:
                #             # you need to match any custom shield to the vector tile `network` values
                #             #priority: 48
                #             visible: *text_visible_shields
                US-CA:
                    # Match California state highways: `US:CA`
                    filter: |
                        function() {
                            return feature.shield_text &&
                                /^US:CA$/.test(feature.network)
                        }
                    draw:
                        icons:
                            sprite: function() { return (feature.network + '-' + feature.shield_text.length + 'char'); }
                            #priority: 48
                            text:
                                offset: [0px, 1px]
                                font:
                                    fill: [0.308,0.308,0.308]
                                    size: [[7,7px],[13,9px],[15,10px]]
                    motorway:
                        filter: { kind_detail: [motorway], $zoom: [7,8] }
                        draw:
                            icons:
                                visible: *text_visible_shields
                    trunk:
                        filter: { kind_detail: [trunk], $zoom: [8,9] }
                        draw:
                            icons:
                                visible: *text_visible_shields
                    primary:
                        filter: { kind_detail: primary, $zoom: [10,11] }
                        draw:
                            icons:
                                visible: *text_visible_shields
                    width_1char:
                        filter: function() { return (feature.shield_text.length === 1) }
                        draw:
                            icons:
                                size: [[6,[14px,16px]],[13,[15px,18px]],[15,[18px,21px]]]
                    width_2char:
                        filter: function() { return (feature.shield_text.length === 2) }
                        draw:
                            icons:
                                size: [[6,[18px,18px]],[13,[20px,20px]],[15,[23px,23px]]]
                    width_3char:
                        filter: function() { return (feature.shield_text.length === 3) }
                        draw:
                            icons:
                                size: [[6,[21px,18px]],[13,[24px,20px]],[15,[28px,23px]]]
                    width_4char:
                        filter: function() { return (feature.shield_text.length === 4) }
                        draw:
                            icons:
                                size: [[6,[24px,18px]],[13,[26px,20px]],[15,[31px,23px]]]
                    width_5char:
                        filter: function() { return (feature.shield_text.length === 5) }
                        draw:
                            icons:
                                size: [[6,[25px,18px]],[13,[27px,20px]],[15,[32px,23px]]]
                US-NY:
                    # Match New York state highways: `US:NY`
                    filter: |
                        function() {
                            return feature.shield_text &&
                                /^US:NY$/.test(feature.network)
                                /* (/^US:NY$/.test(feature.network) || /^NY:US$/.test(feature.network)) */
                        }
                    draw:
                        icons:
                            sprite: |
                                function() { return ( 'US:NY-' + feature.shield_text.length + 'char'); }
                            text:
                                # offset: [0px, 1px]
                                font:
                                    fill: [0.308,0.308,0.308]
                                    size: [[7,7px],[13,9px],[15,10px]]
                    width_1char:
                        filter: function() { return (feature.shield_text.length === 1) }
                        draw:
                            icons:
                                size: [[6,[13px,17px]],[13,[15px,19px]],[15,[18px,22px]]]
                    width_2char:
                        filter: function() { return (feature.shield_text.length === 2) }
                        draw:
                            icons:
                                size: [[6,[17px,17px]],[13,[19px,19px]],[15,[22px,22px]]]
                    width_3char:
                        filter: function() { return (feature.shield_text.length === 3) }
                        draw:
                            icons:
                                size: [[6,[20px,17px]],[13,[22px,19px]],[15,[27px,22px]]]
                    width_4char:
                        filter: function() { return (feature.shield_text.length === 4) }
                        draw:
                            icons:
                                size: [[6,[21px,17px]],[13,[24px,19px]],[15,[29px,22px]]]
                    width_5char:
                        filter: function() { return (feature.shield_text.length === 5) }
                        draw:
                            icons:
                                size: [[6,[22px,17px]],[13,[25px,19px]],[15,[30px,22px]]]
                US-PA:
                    # Match Pennsylvania state highways
                    filter: |
                        function() {
                            return feature.shield_text &&
                                /^US:PA$/.test(feature.network)
                        }
                    draw:
                        icons:
                            sprite: |
                                function() { return ( 'US:PA-' + feature.shield_text.length + 'char'); }
                            text:
                                offset: [0px, 1px]
                                font:
                                    fill: [0.308,0.308,0.308]
                                    size: [[7,7px],[13,9px],[15,10px]]
                    width_1char:
                        filter: function() { return (feature.shield_text.length === 1) }
                        draw:
                            icons:
                                size: [[6,[13px,17px]],[13,[15px,19px]],[15,[18px,22px]]]
                    width_2char:
                        filter: function() { return (feature.shield_text.length === 2) }
                        draw:
                            icons:
                                size: [[6,[17px,17px]],[13,[19px,19px]],[15,[22px,22px]]]
                    width_3char:
                        filter: function() { return (feature.shield_text.length === 3) }
                        draw:
                            icons:
                                size: [[6,[21px,17px]],[13,[24px,19px]],[15,[28px,22px]]]
                    width_4char:
                        filter: function() { return (feature.shield_text.length === 4) }
                        draw:
                            icons:
                                size: [[6,[22px,17px]],[13,[25px,19px]],[15,[30x,22px]]]
                    width_5char:
                        filter: function() { return (feature.shield_text.length === 5) }
                        draw:
                            icons:
                                size: [[6,[24px,17px]],[13,[27px,19px]],[15,[32px,22px]]]
                # USA County Routes
                US-counties:
                    # Match state highways: `US:??:*`
                    #
                    # this is very USA specific
                    #
                    # filter: |
                    #     function() {
                    #         return feature.shield_text &&
                    #             /^US:(?!US)\w\w:.*$/.test(feature.network)
                    #     }
                    #
                    # this generic for any country with 3rd level networks (like county routes in USA)
                    # BEWARE:
                    # US:US:Business  about 150
                    # US:US:Truck
                    # US:US:Alternate
    #
                    # STATE ROUTE
                    # ??:??:Loop  about 200
                    # ??:??:Spur  about 200
                    # ??:??:Business   about 100
    #
                    # STATE TEXAS SPECIAL ROUTE
                    # US:TX:FM -- probably just state? there are 3k of these
                    #
                    #
                    filter: |
                        function() {
                            return feature.shield_text &&
                                /^\w+:\w+:(!Alternate).+$/.test(feature.network) &&
                                $zoom > 10
                        }
                    draw:
                        icons:
                            # you need to match any custom shield to the vector tile `network` values
                            sprite: function() { return ('county_shield-' + feature.shield_text.length + 'char'); }
                            #color: pink
                            #priority: 19
                            visible: *text_visible_shields
                            text:
                                font:
                                    fill: [0.508,0.508,0.508]
                                    #size: [[11,7px],[15,10px]]
                    width_1char:
                        filter: function() { return (feature.shield_text.length === 1) }
                        draw:
                            icons:
                                size: [[6,[14px,14px]],[13,[16px,16px]],[15,[18px,18px]]]
                    width_2char:
                        filter: function() { return (feature.shield_text.length === 2) }
                        draw:
                            icons:
                                size: [[6,[16px,14px]],[13,[18px,15px]],[15,[22px,18px]]]
                    width_3char:
                        filter: function() { return (feature.shield_text.length === 3) }
                        draw:
                            icons:
                                size: [[6,[20px,14px]],[13,[21px,15px]],[15,[26px,18px]]]
                    width_4char:
                        filter: function() { return (feature.shield_text.length === 4) }
                        draw:
                            icons:
                                size: [[6,[25px,14px]],[13,[28px,15px]],[15,[34px,18px]]]
                    width_5char:
                        filter: function() { return (feature.shield_text.length === 5) }
                        draw:
                            icons:
                                size: [[6,[30px,14px]],[13,[33px,15px]],[15,[40px,18px]]]
        path:
            filter:
                all:
                    - kind: path
                not:
                    - kind_detail: [steps, track]
                    - kind_detail: [pier]
            draw:
                lines:
                    color: [[14,*path2],[16,*path1]]
                    width: [[14, 1.0], [15, 1.5], [17, 3m]]
                    #cap: butt
                    #join: round
                    order: 351
                    outline:
                        color: *path_casing1
                        width: [[17, 0.0], [18, 1px]]
                        order: 350
            pedestrian:
                filter: { kind_detail: pedestrian }
                draw:
                    lines:
                        color: [[13,*path2],[16,*path1]]
                        width: [[13, 1.5], [15, 1.5], [17, 3m]]
                        #cap: butt
                        #join: round
#                        outline:
#                            color: *path_casing1
#                            width: [[17, 0.5], [18, 1px]]
            bridge:
                filter: { is_bridge: true }
                draw:
                    lines:
                        width: [[15, 3.5], [17, 3m]]
                        cap: round
                        outline:
                            color: [[15,*path_bridge_casing2],[16,*path_bridge_casing1]]
                            width: [[15, 0.5px], [16, 1.0px], [18, 2px]]
                            cap: butt
            in_park:
                # should `forest` and `wood` be included?
                filter: { landuse_kind: [park,nature_reserve,conservation,golf_course,garden] }
                draw:
                    lines:
                        color: [[14,*green1_r],[16,*minor_road3]]
                        outline:
                            color: *green1_r
                            width: [[14, 0.1px], [15, 0.5px], [18, 2px]]
                golf_course:
                    filter: { landuse_kind: golf_course }
                    draw:
                        lines:
                            outline:
                                color: *green1_r
                nature_reserve:
                    filter: { landuse_kind: nature_reserve }
                    draw:
                        lines:
                            outline:
                                color: *green1_r
                conservation:
                    filter: { landuse_kind: conservation }
                    draw:
                        lines:
                            outline:
                                color: *green1_r
            in_cemetery_garden:
                filter: { landuse_kind: [cemetery,garden] }
                draw:
                    lines:
                        outline:
                            color: *green2_r
                            width: [[15, 0px], [16, 0.5px], [18, 3px]]
            in_zoo:
                filter: { landuse_kind: zoo }
                draw:
                    lines:
                        outline:
                            color: *green1_r
                            width: [[15, 0px], [16, 0.5px], [18, 3px]]
            in_university:
                filter: { landuse_kind: university }
                draw:
                    lines:
                        color: [[14,*brown1_r],[16,*minor_road3]]
                        outline:
                            color: *brown1_r
                            width: [[14, 0px], [16, 0.5px], [18, 2px]]
            in_hospital:
                filter: { landuse_kind: hospital }
                draw:
                    lines:
                        color: [[14,*red1_r],[16,*minor_road3]]
                        outline:
                            color: *red1_r
                            width: [[14, 0px], [16, 0.5px], [18, 2px]]
            labels-path:
                filter: { $zoom: { min: 17 } }
                draw:
                    text-blend-order:
                        priority: 61
                        visible: *text_visible_path
                        text_source: name
                        font:
                            fill: *text_fill
                            size: 12px
                            stroke: { color: *text_stroke_road4, width: 4 }
        track:
            filter: { kind: path, kind_detail: track }
            draw:
                lines:
                    color: [[13, *minor_road4], [15, *minor_road3]]
                    width: [[13, 0.5px], [14, 1.0px], [15, 1.0px], [16, 6m]]
                    #color: [[13,*minor_road4],[16,*minor_road3]]
                    #width: [[13, 1.0], [15, 1.5], [17, 3m]]
                    cap: butt
                    join: round
                    outline:
                        color: *minor_casing1
                        width: [[14, 0px], [15, 0px], [16, 0.5px], [17, 1.0px], [18, 2.0px]]
            bridge:
                filter: { is_bridge: true }
                draw:
                    lines:
                        width: [[15, 3.5], [17, 3m]]
                        cap: round
                        outline:
                            color: [[15,*minor_casing2],[16,*minor_casing1]]
                            width: [[15, 0.5px], [16, 1.0px], [18, 2px]]
                            cap: butt
            in_park:
                filter: { landuse_kind: [park,national_park,nature_reserve,conservation,golf_course,garden] }
                draw:
                    lines:
                        width: [[13, 0.5px], [14, 0.5px], [15, 1.0px], [16, 6m]]
                        outline:
                            color: [[16,*green1_r],[17,*major_casing1]]
                            width: [[14, 0px], [15, 0px], [16, 0.25px], [17, 0.5px], [18, 1.0px], [19, 2.0px]]
        steps:
            filter:
                all:
                    - kind: path
                    - kind_detail: steps
            draw:
                dashedline:
                    order: function() { return feature.sort_rank; }
                    #cap: round
                    #join: round
                    color: *path_steps1_b
                    width: [[14, 0.1], [17, 0.1]]
                    outline:
                        color: *path_steps1
                        width: [[14, 1.0], [15, 1.5], [18, 3m]]
            in_park:
                filter: { landuse_kind: [park,nature_reserve,conservation,golf_course,garden] }
                draw:
                    dashedline:
                        color: [[14,*green1_r],[16,*minor_road3]]
                        outline:
                            color: *green1_r
            in_university:
                filter: { landuse_kind: university }
                draw:
                    dashedline:
                        color: [[14,*brown1_r],[16,*minor_road3]]
                        outline:
                            color: *brown1_r
            in_hospital:
                filter: { landuse_kind: hospital }
                draw:
                    dashedline:
                        color: [[14,*red1_r],[16,*minor_road3]]
                        outline:
                            color: *red1_r
            labels-steps:
                filter: { $zoom: { min: 17 } }
                draw:
                    text-blend-order:
                        priority: 62
                        visible: *text_visible_steps
                        text_source: name
                        font:
                            fill: *text_fill
                            size: 12px
                            stroke: { color: *text_stroke_road4, width: 4 }
        winter_sport_pistes:
            filter: { kind: piste }
            draw:
                lines:
                    order: 388   # We override the server value here because this is also a special Ski Map
                    cap: round
                    join: round
                    color: '#909090'
                    width: [[13,0px],[14,0.5px],[15, 1px], [16, 2px], [18, 3m]]
                text-blend-order:
                    priority: 18
                    visible: *text_visible_piste
                    font:
                        fill: *text_fill_piste
                        size: 12px
                        stroke: { color: *grey8, width: 4 }
            early:
                filter: { $zoom: { max: 15 } }
                draw:
                    text-blend-order:
                        visible: false
            early-z15:
                filter: { $zoom: [15] }
                draw:
                    text-blend-order:
                        font:
                            fill: *text_fill_piste_e
                            size: 11px
            easy:
                filter: { piste_difficulty: easy }
                draw:
                    lines:
                        color: *piste_easy
            intermediate:
                filter: { piste_difficulty: intermediate }
                draw:
                    lines:
                        color: *piste_intermediate
            advanced:
                filter: { piste_difficulty: advanced }
                draw:
                    lines:
                        color: *piste_advanced
                    text-blend-order:
                        text_source: function() { if( feature.name ){ return '◆ ' + feature.name; } else { return '◆'; } }
            expert:
                filter: { piste_difficulty: expert }
                draw:
                    lines:
                        color: *piste_expert
                    text-blend-order:
                        text_source: function() { if( feature.name ){ return '◆◆ ' + feature.name; } else { return '◆◆'; } }
        pier:
            filter: { kind: path, kind_detail: pier }
            draw:
                lines:
                    color: [[13,*path2],[16,*path1]]
                    width: [[13, 1.5], [15, 2.0], [17, 3m]]
        racetrack:
            filter: { kind: racetrack }
            draw:
                lines:
                    interactive: true
                    #order: 5
                    cap: round
                    join: round
                    color: *orange3
                    width: [[13,1.5px],[14,2px],[15, 3px], [16, 5px], [18, 10m], [19, 15m]]
        airport-lines:
            filter: { kind: aeroway }
            draw:
                lines:
                    color: *grey2
                    cap: butt
                    width: [[10, 1px], [11, 1.5px], [12, 2px], [13, 4px], [14, 8px], [15, 16px], [16, 32px], [17, 60m]]
            # Features come in at zoom 9, but include mostly minor airports without POIs until z13
            early:
                filter: { $zoom: { max: 12 }, not: { landuse_kind: [aerodrome, runway, taxiway] } }
                draw:
                    lines:
                        visible: false
            not-round:
                filter: { $zoom: { min: 17 } }
                draw:
                    lines:
                        cap: butt
            taxiway:
                filter: { kind_detail: taxiway }
                draw:
                    lines:
                        color: *grey4
                        width: [[14, 1px], [15, 1.5px], [16, 8m]]
                early:
                    filter: { $zoom: { max: 14 } }
                    draw:
                        lines:
                            visible: false
            runway:
                filter: { kind_detail: runway }
                draw:
                    lines:
                        color: *grey2
        ferry:
            filter: { kind: ferry }
            draw:
                lines:
                    color: *ferry1
                    width: [[12, 0.5px], [14, 1px], [17, 3m]]
        aerialway:
            filter: { kind: aerialway }
            draw:
                lines:
                    interactive: true
                    color: '#444'
                    width: [[14, 0.5px], [15, 1.0px], [16, 2m]]
            gondola_cable_car:
                filter: { kind_detail: [gondola, cable_car] }
                draw:
                    lines:
                        color: black
                        width: [[12, 2.0px], [13, 2px], [14, 3.5px], [15, 4.5px], [16, 9m]]
            chair_lift:
                filter: { kind_detail: chair_lift }
                draw:
                    lines:
                        color: '#333'
                        width: [[13, 1px], [14, 1.5px], [15, 3px], [16, 7m]]
            aerialway-labels:
                filter: { $zoom: { min: 14 } }
                draw:
                    text-blend-order:
                        priority: 63
                        visible: *text_visible_aerialway
                        text_source: name
                        font:
                            fill: *text_fill
                            size: 12px
                            stroke: { color: *grey8, width: 4 }
                minor:
                    filter: { not: { kind_detail: [gondola,cable_car,chair_lift] }, $zoom: { max: 17 } }
                    draw:
                        text-blend-order:
                            visible: false
                early_gondola:
                    filter: { $zoom: [14], kind_detail: [gondola,cable_car] }
                    draw:
                        text-blend-order:
                            font:
                                weight: 600
                later:
                    filter: { $zoom: { min: 15 } }
                    draw:
                        text-blend-order:
                            font:
                                weight: 600

    # buildings are the only layer that gets lighting
    buildings:
        data: { source: mapzen, layer: buildings }
        filter:
            any:
                # limit show smaller landuse areas to higher zooms
                - { $zoom: [13], scale_rank: [1,2] }
                - { $zoom: [14], scale_rank: [1,2,3] }
                - { $zoom: [15], area: { min: 5000 }, name: true }
                - { $zoom: [15], area: { min: 5000 }, kind: true }
                - { $zoom: [15], area: { min: 3000 }, landuse_kind: true }
                - { $zoom: [15], height: { min: 100 } }
                - { $zoom: [15], volume: { min: 100000 } }
                - { $zoom: [16], area: { min: 1000 }, name: true }
                - { $zoom: [16], area: { min: 1000 }, kind: true }
                - { $zoom: [16], area: { min: 2000 }, landuse_kind: true }
                - { $zoom: [16], volume: { min: 50000 } }
                #- { $zoom: [16], height: { min: 50 } }
                - { $zoom: { min: 17 } }
            all:
                - not: { location: underground }
#                - { $zoom: { max: 18 } }
        draw:
            #filter: { not: { location: underground } }
            polygons:
                #order: function() { if( $zoom < 17) { return 5; } else { return 9; } }
                order: 438
                color: *building1
                extrude: *building_e
            outline:
                style: lines
                order: 439
                color: *building2
                width: [[14,0.1px],[15,0.5px],[17,0.5px],[18,0.75px],[19,0.4m]]
                extrude: *building_e
        in_park:
            #todo: does forest belong here?
            filter: { landuse_kind: [park,forest,nature_reserve,conservation,golf_course,garden] }
            draw:
                polygons:
                    color: *green1_b
                outline:
                    color: *green1_bo
            golf_course:
                filter: { landuse_kind: golf_course }
                draw:
                    outline:
                        color: *green1_r
            nature_reserve:
                filter: { landuse_kind: nature_reserve }
                draw:
                    outline:
                        color: *green1_r
            conservation:
                filter: { landuse_kind: conservation }
                draw:
                    outline:
                        color: *green1_r
        in_zoo:
            filter: { landuse_kind: [zoo, animal, enclosure, petting_zoo, aviary] }
            draw:
                polygons:
                    color: *green2_b
                outline:
                    color: *green2_bo
        in_university:
            filter: { landuse_kind: [university,school] }
            draw:
                polygons:
                    color: *brown1_b
                outline:
                    color: *brown1_bo
        in_hospital:
            filter: { landuse_kind: hospital }
            draw:
                polygons:
                    color: *red1_b
                outline:
                    color: *red1_bo
        in_airport:
            filter: { landuse_kind: [aerodrome, runway, taxiway] }
            draw:
                polygons:
                    color: *purple_b
                outline:
                    color: *purple_bo
#                    width: [[14,0.5px],[15,0.5px],[17,0.5px],[18,0.75px],[19,0.25m]]
#        in_retail:
#            filter: { landuse_kind: retail }
#            draw:
#                polygons:
#                    color: orange

    building-labels:
        data: { source: mapzen, layer: buildings }
        filter:
            all:
                - { $zoom: { min: 16 } }
                - $geometry: point
                - not: { location: underground }
                - kind_detail: [building, university, college, school, kindergarten]
            any:
                - { $zoom: [16], area: { min: 5000 }, name: true }
                - { $zoom: [16], area: { min: 5000 }, kind: true }
                - { $zoom: [16], area: { min: 10000 }, landuse_kind: true }
                - { $zoom: [16], area: { min: 7000 }, kind_detail: [university, college, school, kindergarten] }
                - { $zoom: [16], volume: { min: 50000 }, name: true }
                - { $zoom: [17], area: { min: 3000 }, name: true }
                - { $zoom: [17], area: { min: 2000 }, kind_detail: [university, college, school, kindergarten] }
                - { $zoom: [18], area: { min: 1000 }, name: true }
                - { $zoom: [18], kind_detail: [university, college, school, kindergarten] }
                - { $zoom: [19], area: { min: 200 }, name: true }
                - { $zoom: { min: 19 }, kind_detail: [university, college, school, kindergarten] }
                - { $zoom: { min: 20 }, name: true }
        draw:
            text-blend-order:
                interactive: true
                move_into_tile: true
                priority: 51
                visible: *text_visible_building
                order: 7
                font:
                    fill: *text_fill
                    family: *text_font_family
                    style: italic
                    size: 11px
                    stroke: { color: *text_stroke_address, width: 1 }
        building_labels-z15-z16-z17:
            filter: { $zoom: [15,16,17] }
            draw: { text-blend-order: { font: { size: 12px, stroke: { width: 2 } } } }
        building_labels-z18:
            filter: { $zoom: [18,19] }
            draw: { text-blend-order: { font: { size: 12px, weight: 600, stroke: { width: 3 } } } }
        building_labels-z20-up:
            filter: { $zoom: { min: 20 } }
            draw: { text-blend-order: { font: { size: 14px, weight: 600, stroke: { width: 3 }  } } }
        building-labels-z16:
            filter: function() { if( $zoom == 16 && feature.name.length > 20 ) { return true; } else { return false; } }
            draw:
                text-blend-order:
                    visible: false
        building-labels-z17:
            filter: function() { if( $zoom == 17 && feature.name.length > 30 ) { return true; } else { return false; } }
            draw:
                text-blend-order:
                    visible: false
        building-labels-z20+:
            filter: { $zoom: { min: 20 } }
            draw:
                text-blend-order:
                    text_source: function() { if( feature.addr_housenumber ) { return feature.name + '\n' + feature.addr_housenumber; } else { return feature.name; } }
    address-labels:
        data: { source: mapzen, layer: buildings }
        filter:
            $zoom: { min: 20 }
            any:
                - kind: address
                - { label_position: true, addr_housenumber: true, name: false }
        draw:
            text-blend-order:
                interactive: true
                order: 7
                visible: *text_visible_address
                text_source: addr_housenumber
                font:
                    fill: *text_fill_address
                    family: *text_font_family
                    style: italic
                    size: 10px
                    stroke: { color: *building1, width: 4 }

    boundaries:
        data: { source: mapzen, layer: boundaries }
        # country subdivisions (states, provinces)
        draw:
            lines:
                interactive: true
                order: function() { return feature.sort_rank; }
        country:
            filter:
                kind: country
                # any:
                #     - type: country
                #     - kind: nation
                #     - admin_level: 2
            draw:
                lines:
                    interactive: true
                    color: *country_boundary
                    width: [[1, 0.5px], [2, 1.0px], [4, 1.5px], [9, 2.5px], [14, 3.5px], [16, 4.5px], [17, 14m]]
            water:
                filter: { maritime_boundary: true }
                draw:
                    lines:
                        visible: false
        region:
            filter:
                kind: region
                # any:
                #     - type: state
                #     # territorial here is probably a hack
                #     - kind: [state, department, region, provincial, territorial]
                #     - admin_level: 4
            draw:
                lines:
                    interactive: true
                    color: *region_boundary
                    width: [[2, 0.75px], [3, 1px], [5, 1.5px], [9, 3.5px], [14, 5.5px], [16, 6.5px], [17, 16m]]
            water:
                filter: { maritime_boundary: true }
                draw:
                    lines:
                        visible: false
            early:
                filter: { not: { min_zoom: [1,2] }, $zoom: { max: 8 } }
                draw:
                    lines:
                        visible: false

#        subregions:
#            filter: { kind: county, $zoom: { min: 10 } }
#            draw:
#                lines:
#                    interactive: true
#                    color: *subregion_boundary
#                    width: [[9, 1px], [14, 2px], [16, 3px], [17, 8m]]

        city_walls:
            filter: { kind: city_wall }
            draw:
                lines:
                    interactive: true
                    color: *city_wall
                    width: [[12, 0.75px], [13, 1.0px], [14, 1.2px], [15, 2.0px], [16, 2.5px], [19, 6m]]
        retaining_wall:
            filter: { kind: retaining_wall }
            draw:
                lines:
                    interactive: true
                    color: *retaining_wall
                    width: [[14, 0.5px], [15, 1.0px], [16, 1.5px], [17, 2.0px], [19, 4m]]
        fence:
            filter: { kind: fence }
            draw:
                lines:
                    interactive: true
                    color: *fence
                    width: [[16, 0px], [17, 1px], [18, 1.5px], [20, 0.5m]]
        snow_fence:
            filter: { kind: snow_fence }
            draw:
                lines:
                    interactive: true
                    color: *snow_fence
                    width: [[14, 0.5px], [15, 1.0px], [16, 1.5px], [17, 2.0px], [19, 4m]]

    places:
        data: { source: mapzen, layer: places }
        filter: { not: { kind: [ocean, sea] } }
        draw:
            text-blend-order:
                visible: false    # labels are enabled by each layer below
                font:
                    family: *text_font_family
                    weight: 500

        continent:
            filter: { name: true, kind: [continent], $zoom: {max: 5} }
            draw:
                text-blend-order:
                    visible: *text_visible_continent
                    font:
                        size: 13px
                        style: italic
                        fill: *text_fill
                        stroke: { color: *text_stroke, width: 4 }
                        transform: uppercase

        country-z2:
            filter:
                all:
                    - kind: [country]
                    - $zoom: [2]
                    - name: ["United States of America","Brasil","中华人民共和国","Россия","Canada","Kalaallit Nunaat","Ísland","Australia","India","日本","Guam","Indonesia","South Africa","مصر","Nigeria","Kenya"]
            draw:
                text-blend-order:
                    priority: 3
                    visible: *text_visible_admin
                    text_source: function() { return feature["name:en"] || feature["name"]; }
                    font:
                        fill: *text_fill
                        weight: 400
                        size: 10px
                        transform: uppercase
        country-z3:
            filter: { name: true, population: true, kind: [country], $zoom: [3] }
            draw:
                text-blend-order:
                    priority: 3
                    visible: *text_visible_admin
                    text_source: function() { return feature["name:en"] || feature["name"]; }
                    font:
                        fill: *text_fill
                        size: 11px
                        weight: 600
                        # stroke: { color: *text_stroke, width: 4 }
                        transform: uppercase
    #            icons:
    #                size: [[13, 12px], [15, 18px]]
    #                interactive: true
    #                sprite: *townspot_sprite
            early-ones:
                # US, Brazil, China, Russia, Canada, Greenland, Iceland, Australia, India, Japan, Guam, Indonesia, South Africa, Egypt, Nigeria, Kenya
                filter: { not: { name: ["United States of America","Brasil","中华人民共和国","Россия","Canada","Kalaallit Nunaat","Ísland","Australia","India","日本","Guam","Indonesia","South Africa","مصر","Nigeria","Kenya"] }, $zoom: {min: 3, max: 4} }
                draw:
                    text-blend-order:
                        visible: false
        country-z4:
            filter: { name: true, population: true, kind: [country], $zoom: [4] }
            draw:
                text-blend-order:
                    priority: 3
                    visible: *text_visible_admin
                    text_source: function() { return feature["name:en"] || feature["name"]; }
                    font:
                        size: 12px
                        weight: 600
                        fill: *text_fill
                        # stroke: { color: *text_stroke, width: 4 }
                        transform: uppercase
    #            icons:
    #                size: [[13, 12px], [15, 18px]]
    #                interactive: true
    #                sprite: *townspot_sprite
            early-ones-z4:
                filter: { name: [Nederland,Luxembourg,Liechtenstein,San Marino,Civitatis Vaticanæ,Crna Gora,Македонија,The Gambia,Burundi,Swaziland,الإمارات العربية المتحدة,العراق,Singapore,El Salvador,Belize,Trinidad and Tobago, Saint Lucia, Montserrat,Anguilla,República Dominicana,Bahamas,British Virgin Islands,Antigua and Barbuda,Grenada,Sint Maarten,Saint Kitts and Nevis,Cayman Islands,België - Belgique - Belgien], $zoom: {min: 4, max: 5} }
                draw:
                    text-blend-order:
                        visible: false
        country-z5:
            filter:
                all:
                    - name: true
                    - population: true
                    - kind: [country]
                    - $zoom: [5]
                any:
                    - { population: { min: 5000000 } }
            draw:
                text-blend-order:
                    priority: 3
                    visible: *text_visible_admin
                    text_source: function() { return feature["name:en"] || feature["name"]; }
                    font:
                        size: 13px
                        weight: 400
                        fill: *text_fill
                        # stroke: { color: *text_stroke, width: 4 }
                        transform: uppercase
    #            icons:
    #                size: [[13, 12px], [15, 18px]]
    #                interactive: true
    #                sprite: *townspot_sprite
            early-ones-z5:
                filter: { name: [Luxembourg,Liechtenstein,San Marino,Civitatis Vaticanæ,El Salvador,Belize,België - Belgique - Belgien], $zoom: {min: 5, max: 6} }
                draw:
                    text-blend-order:
                        visible: false
        country-z6:
            # South Ossetia and Abkhazia aren't countries (they are disputed areas)
            filter: { name: true, kind: [country], $zoom: [6] }
            draw:
                text-blend-order:
                    priority: 3
                    visible: *text_visible_admin
                    text_source: function() { return feature["name:en"] || feature["name"]; }
                    font:
                        size: 14px
                        weight: 600
                        fill: *text_fill
                        # stroke: { color: *text_stroke, width: 4 }
                        transform: uppercase
            small-ones-z6:
                filter: { name: [Luxembourg,Liechtenstein,San Marino,Civitatis Vaticanæ,België - Belgique - Belgien,Хуссар Ирыстон,Аҧсны - Абхазия], $zoom: {min: 6, max: 7} }
                draw:
                    text-blend-order:
                        visible: false
        country-z7:
            # South Ossetia and Abkhazia aren't countries (they are disputed areas)
            filter: { name: true, kind: [country], $zoom: { min: 7, max: 10 } }
            draw:
                text-blend-order:
                    priority: 3
                    visible: *text_visible_admin
                    text_source: function() { return feature["name:en"] || feature["name"]; }
                    font:
                        size: 16px
                        weight: 800
                        fill: *text_fill
                        stroke: { color: *text_stroke, width: 4 }
                        transform: uppercase
#                icons:
#                    size: [[13, 12px], [15, 18px]]
#                    interactive: true
#                    sprite: *townspot_sprite
            small-ones-z7:
                filter: { name: [Liechtenstein,San Marino,Civitatis Vaticanæ,Хуссар Ирыстон,Аҧсны - Абхазия], $zoom: {min: 7, max: 8} }
                draw:
                    text-blend-order:
                        visible: false

        region-z4:
            filter: { name: true, kind: [region], $zoom: [4], not: { name: ["Western Cape","Eastern Cape","Northern Cape","North West","Limpopo","KwaZulu-Natal","Hamburg","Freie und Hansestadt Hamburg","Neuchâtel","Nordrhein-Westfalen","Haute-Normandie","Baden-Württemberg","Bayern","Sachsen-Anhalt","Berlin","Mecklenburg-Vorpommern","Schleswig-Holstein","Brandenburg","Niedersachsen","Saarland","Thüringen","Hessen","Sachsen"] } }
            draw:
                text-blend-order:
                    priority: 14
                    visible: *text_visible_admin
                    text_source: 'name:short'
                    font:
                        size: 10px
                        weight: 200
                        fill: *text_fill

        region-z5:
            filter: { name: true, kind: [region], $zoom: [5], not: { name: ["Western Cape","Eastern Cape","Northern Cape","North West","Limpopo","KwaZulu-Natal","Hamburg","Freie und Hansestadt Hamburg","Neuchâtel","Nordrhein-Westfalen","Haute-Normandie","Baden-Württemberg","Bayern","Sachsen-Anhalt","Berlin","Mecklenburg-Vorpommern","Schleswig-Holstein","Brandenburg","Niedersachsen","Saarland","Thüringen","Hessen","Sachsen"] } }
            draw:
                text-blend-order:
                    priority: 14
                    visible: *text_visible_admin
                    text_source: 'name:short'
                    font:
                        size: 13px
                        weight: 200
                        fill: *text_fill

        region-z6:
            filter: { name: true, kind: [region], $zoom: [6], not: { name: ["Western Cape","Eastern Cape","Northern Cape","North West","Limpopo","KwaZulu-Natal","Hamburg","Freie und Hansestadt Hamburg","Neuchâtel","Nordrhein-Westfalen","Haute-Normandie","Baden-Württemberg","Bayern","Sachsen-Anhalt","Berlin","Mecklenburg-Vorpommern","Schleswig-Holstein","Brandenburg","Niedersachsen","Saarland","Thüringen","Hessen","Sachsen"] } }
            draw:
                text-blend-order:
                    priority: 14
                    visible: *text_visible_admin
                    text_source: 'name:short'
                    font:
                        size: 13px
                        weight: 200
                        fill: *text_fill
        region:
            filter: { name: true, kind: [region], $zoom: {min: 6, max: 9} }
            draw:
                text-blend-order:
                    priority: 14
                    visible: *text_visible_admin
                    text_source: function() { if(feature["name:short"]) { return feature["name"]; } else { return ""; } }
                    font:
                        size: 14px
                        weight: 300
                        fill: *text_fill
                        stroke: { color: *text_stroke, width: 4 }
                        transform: uppercase
    #            icons:
    #                size: [[13, 12px], [15, 18px]]
    #                interactive: true
    #                sprite: *townspot_sprite
            pesky:
                filter: { name: ["Western Cape","Eastern Cape","Northern Cape","North West","Limpopo","KwaZulu-Natal","Hamburg","Freie und Hansestadt Hamburg","Neuchâtel","Nordrhein-Westfalen","Haute-Normandie","Baden-Württemberg","Bayern","Sachsen-Anhalt","Berlin","Mecklenburg-Vorpommern","Schleswig-Holstein","Brandenburg","Niedersachsen","Saarland","Thüringen","Hessen","Sachsen"], $zoom: {min: 6, max: 8} }
                draw:
                    text-blend-order:
                        visible: false
            small-ones:
                filter: { name: ["Delaware","New Jersey","Connecticut","Rhode Island","Massachusetts","New Hampshire","Vermont"], $zoom: {min: 6, max: 8} }
                draw:
                    text-blend-order:
                        text_source: function() { return feature["name:abbreviation"] || feature["name"]; }
                        font: { transform: uppercase }

        populated-places:
            filter:
                kind: locality
                name: true
            draw:
                icons:
                    interactive: true
                    priority: 5
                    text:
                        buffer: 3px
                        font:
                            fill: *text_fill
                text-blend-order:
                    interactive: true
                    anchor: bottom
                    priority: 6

            populated-places-natural-earth-z2:
                filter: { $zoom: [2], min_zoom: 2 }
                draw:
                    icons:
                        size: 5px
                        visible: *icon_visible_populated_places
                        sprite: townspot-s-rev
                        text:
                            visible: *text_visible_populated_places
                            font:
                                size: 10px
                                fill: *text_fill
                                # stroke: { color: *text_stroke, width: 4 }

            populated-places-natural-earth-z3:
                filter: { $zoom: [3] }
                z3places-1:
                    filter: { min_zoom: 2 }
                    draw:
                        icons:
                            size: 5px
                            visible: *icon_visible_populated_places
                            sprite: townspot-s-rev
                            text:
                                visible: *text_visible_populated_places
                                font:
                                    size: 11px
                                    fill: *text_fill
                                    # stroke: { color: *text_stroke, width: 4 }
                z3places-2:
                    filter: { min_zoom: 2 }
                    draw:
                        icons:
                            priority: 7
                            size: 5px
                            visible: *icon_visible_populated_places
                            sprite: townspot-s-rev
                            text:
                                visible: *text_visible_populated_places
                                font:
                                    size: 10px
                                    fill: *text_fill
                                    # stroke: { color: *text_stroke, width: 4 }

            populated-places-natural-earth-z4:
                filter: { $zoom: [4] }
                z4places-1:
                    filter: { min_zoom: 2 }
                    draw:
                        icons:
                            size: 5px
                            visible: *icon_visible_populated_places
                            sprite: townspot-s-rev
                            text:
                                visible: *text_visible_populated_places
                                font:
                                    size: 12px
                                    fill: *text_fill
                                    # stroke: { color: *text_stroke, width: 4 }

                z4places-2:
                    filter: { min_zoom: [3,4] }
                    draw:
                        icons:
                            priority: 7
                            size: 5px
                            visible: *icon_visible_populated_places
                            sprite: townspot-s-rev
                            text:
                                visible: *text_visible_populated_places
                                font:
                                    size: 11px
                                    fill: *text_fill
                                    # stroke: { color: *text_stroke, width: 4 }

            populated-places-natural-earth-z5:
                filter: { $zoom: [5] }
                draw: { text-blend-order: { font: { fill: *text_fill } } }
                z5places-1:
                    filter: { min_zoom: [2,3] }
                    draw:
                        icons:
                            priority: 7
                            size: 6px
                            visible: *icon_visible_populated_places
                            sprite: townspot-m-rev
                            text:
                                visible: *text_visible_populated_places
                                font:
                                    size: 13px
                    capital:
                        filter: { country_capital: true }
                        draw:
                            icons:
                                priority: 5
                                size: 8px
                                sprite: capital-l

                z5places-2:
                    filter: { min_zoom: 4 }
                    draw:
                        icons:
                            priority: 11
                            size: 5px
                            visible: *icon_visible_populated_places
                            sprite: townspot-s-rev
                            text:
                                visible: *text_visible_populated_places
                                font:
                                    size: 12px
                    capital:
                        filter: { country_capital: true }
                        draw:
                            icons:
                                priority: 9
                                size: 6px
                                sprite: capital-m

                z5places-3:
                    filter: { min_zoom: 5 }
                    draw:
                        icons:
                            priority: 17
                            size: 5px
                            visible: *icon_visible_populated_places
                            sprite: townspot-s-rev
                            text:
                                visible: *text_visible_populated_places
                                font:
                                    fill: [0.25,0.25,0.25]
                                    size: 11px
                    capital:
                        filter: { country_capital: true }
                        draw:
                            icons:
                                priority: 15
                                size: 6px
                                sprite: capital-m

            populated-places-natural-earth-z6:
                filter: { $zoom: [6] }
                draw: { text-blend-order: { font: { fill: *text_fill } } }
                z6places-1:
                    filter: { min_zoom: [2,3] }
                    draw:
                        icons:
                            priority: 7
                            size: 8px
                            visible: *icon_visible_populated_places
                            sprite: townspot-l-rev
                            text:
                                visible: *text_visible_populated_places
                                font:
                                    fill: *text_fill
                                    size: 14px
                    capital:
                        filter: { country_capital: true }
                        draw:
                            icons:
                                sprite: capital-l
                                size: 8px
                                priority: 5

                z6places-2:
                    filter: { min_zoom: [4,5] }
                    draw:
                        icons:
                            priority: 11
                            size: 6px
                            visible: *icon_visible_populated_places
                            sprite: townspot-m-rev
                            text:
                                visible: *text_visible_populated_places
                                font:
                                    fill: *text_fill
                                    size: 13px
                    capital:
                        filter: { country_capital: true }
                        draw:
                            icons:
                                size: 6px
                                sprite: capital-m
                                priority: 9

                z6places-3:
                    filter: { min_zoom: 6 }
                    draw:
                        icons:
                            size: 5px
                            visible: *icon_visible_populated_places
                            sprite: townspot-s-rev
                            priority: 15
                            text:
                                visible: *text_visible_populated_places
                                font:
                                    size: 11px
                    capital:
                        filter: { country_capital: true }
                        draw:
                            icons:
                                size: 6px
                                sprite: capital-m
                                priority: 13

            populated-places-natural-earth-z7:
                filter: { $zoom: [7] }
                draw: { text-blend-order: { font: { fill: *text_fill } } }
                z7places-1:
                    filter: { min_zoom: [2,3] }
                    draw:
                        icons:
                            size: 8px
                            visible: *icon_visible_populated_places
                            sprite: townspot-l-rev
                            priority: 7
                            text:
                                visible: *text_visible_populated_places
                                font:
                                    size: 14px
                    capital:
                        filter: { country_capital: true }
                        draw:
                            icons:
                                size: 8px
                                sprite: capital-l
                                priority: 5

                z7places-2:
                    filter: { min_zoom: [4,5,6] }
                    draw:
                        icons:
                            size: 6px
                            visible: *icon_visible_populated_places
                            sprite: townspot-m-rev
                            priority: 13
                            text:
                                visible: *text_visible_populated_places
                                font:
                                    fill: *text_fill
                                    size: 13px
                    capital:
                        filter: { country_capital: true }
                        draw:
                            icons:
                                size: 8px
                                sprite: capital-l
                                priority: 11

                z7places-3:
                    filter: { min_zoom: [6,7] }
                    draw:
                        icons:
                            size: 5px
                            visible: *icon_visible_populated_places
                            sprite: townspot-s-rev
                            priority: 17
                            text:
                                visible: *text_visible_populated_places
                                font:
                                    size: 12px
                    capital:
                        filter: { country_capital: true }
                        draw:
                            icons:
                                size: 6px
                                sprite: capital-m
                                priority: 15

            populated-places-osm-z8:
                filter:
                    all:
                        - source: [openstreetmap, openstreetmap.org]
                        - name: true
                        - population: true
                        - not: { kind: [country, county, state, island, neighbourhood, suburb, quarter] }
                        - $zoom: [8]
                draw: { text-blend-order: { font: { fill: *text_fill, stroke: { color: *text_stroke, width: 2px } } } }
                z8places-1:
                    filter:
                        any:
                            - { population: { min: 500000 } }
                    draw:
                        icons:
                            size: 6px
                            visible: *icon_visible_populated_places
                            sprite: townspot-m-rev
                            priority: 7
                            text:
                                visible: *text_visible_populated_places
                                font:
                                    size: 15px
                    capital:
                        filter: { country_capital: true }
                        draw:
                            icons:
                                size: 8px
                                sprite: capital-l
                                priority: 5
                z8places-2:
                    filter:
                        any:
                            - { population: { min: 150000, max: 499999 } }
                    draw:
                        icons:
                            size: 6px
                            visible: *icon_visible_populated_places
                            sprite: townspot-m-rev
                            priority: 11
                            text:
                                visible: *text_visible_populated_places
                                font:
                                    size: 13px
                    capital:
                        filter: { country_capital: true }
                        draw:
                            icons:
                                size: 6px
                                sprite: capital-m
                                priority: 9

                z8places-3:
                    filter:
                        any:
                            - { population: { min: 85000, max: 149999 } }
                    draw:
                        icons:
                            size: 6px
                            visible: *icon_visible_populated_places
                            sprite: townspot-m-rev
                            priority: 15
                            text:
                                visible: *text_visible_populated_places
                                font:
                                    fill: [0.25,0.25,0.25]
                                    size: 12px
                    capital:
                        filter: { country_capital: true }
                        draw:
                            icons:
                                size: 6px
                                sprite: capital-m
                                priority: 13

                z8places-4:
                    filter:
                        any:
                            - { population: { min: 50000, max: 84999 } }
                    draw:
                        icons:
                            size: 5px
                            visible: *icon_visible_populated_places
                            sprite: townspot-s-rev
                            priority: 19
                            text:
                                visible: *text_visible_populated_places
                                font:
                                    size: 11px
                                    fill: [0.25,0.25,0.25]
                    capital:
                        filter: { country_capital: true }
                        draw:
                            icons:
                                size: 5px
                                sprite: capital-m
                                priority: 17
                z8places-5:
                    filter:
                        all:
                            - { population: { max: 50000 } }
                        any:
                            - { country_capital: true }
                            - { region_capital: true }
                    draw:
                        icons:
                            size: 5px
                            interactive: true
                            visible: *icon_visible_populated_places
                            sprite: townspot-xs-rev
                            text:
                                interactive: true
                                visible: *text_visible_populated_places
                                font:
                                    size: 11px
                    capital:
                        filter: { country_capital: true }
                        draw:
                            icons:
                                sprite: capital-s
                                text:
                                    font:
                                        size: 12px

            populated-places-natural-earth-z8-backfill:
                filter: { $zoom: [8], population: { max: 50000 } }
                draw: { text-blend-order: { font: { fill: *text_fill, stroke: { color: *text_stroke, width: 2px } } } }
                z8places-1-ne:
                    filter: { min_zoom: [2,3] }
                    draw:
                        icons:
                            size: 8px
                            visible: *icon_visible_populated_places
                            sprite: townspot-l-rev
                            priority: 23
                            text:
                                visible: *text_visible_populated_places
                                font:
                                    size: 15px
                    capital:
                        filter: { country_capital: true }
                        draw:
                            icons:
                                size: 8px
                                sprite: capital-l
                                priority: 21

                z8places-2-ne:
                    filter: { min_zoom: [4,5,6] }
                    draw:
                        icons:
                            size: 6px
                            visible: *icon_visible_populated_places
                            sprite: townspot-m-rev
                            text:
                                visible: *text_visible_populated_places
                                font:
                                    size: 13px
                    capital:
                        filter: { country_capital: true }
                        draw:
                            icons:
                                sprite: capital-m

                z8places-3-ne:
                    filter: { min_zoom: [6,7] }
                    draw:
                        icons:
                            size: 5px
                            visible: *icon_visible_populated_places
                            sprite: townspot-s-rev
                            priority: 27
                            text:
                                visible: *text_visible_populated_places
                                font:
                                    size: 11px
                    capital:
                        filter: { country_capital: true }
                        draw:
                            icons:
                                sprite: capital-s
                                priority: 25

            populated-places-osm-z9:
                filter:
                    all:
                        - source: [openstreetmap, openstreetmap.org]
                        - name: true
                        - population: true
                        - not: { kind: [country, county, state, island, neighbourhood, suburb, quarter] }
                        - $zoom: [9]
                draw: { text-blend-order: { font: { fill: *text_fill, stroke: { color: *text_stroke, width: 2px } } } }

                z9places-1:
                    filter:
                        any:
                            - { population: { min: 500000 } }
                    draw:
                        text-blend-order:
                            anchor: center
                            visible: *text_visible_populated_places
                            priority: 6
                            font:
                                size: 16px
                                weight: 600

                z9places-2a:
                    filter:
                        any:
                            - { population: { min: 350000, max: 499999 } }
                    draw:
                        text-blend-order:
                            anchor: center
                            visible: *text_visible_populated_places
                            priority: 8
                            font:
                                size: 15px

                z9places-2b:
                    filter:
                        any:
                            - { population: { min: 150000, max: 350000 } }
                    draw:
                        icons:
                            size: 6px
                            visible: *icon_visible_populated_places
                            sprite: townspot-m-rev
                            priority: 11
                            text:
                                visible: *text_visible_populated_places
                                font:
                                    size: 14px
                    capital:
                        filter: { country_capital: true }
                        draw:
                            icons:
                                sprite: capital-m
                                priority: 9

                z9places-3:
                    filter:
                        any:
                            - { population: { min: 85000, max: 149999 } }
                    draw:
                        icons:
                            size: 6px
                            visible: *icon_visible_populated_places
                            sprite: townspot-m-rev
                            priority: 15
                            text:
                                visible: *text_visible_populated_places
                                font:
                                    fill: [0.25,0.25,0.25]
                                    size: 13px
                    capital:
                        filter: { country_capital: true }
                        draw:
                            icons:
                                sprite: capital-m
                                priority: 13
                                text:
                                    font:
                                        size: 15px

                z9places-4:
                    filter:
                        any:
                            - { population: { min: 50000, max: 84999 } }
                    draw:
                        icons:
                            size: 5px
                            visible: *icon_visible_populated_places
                            sprite: townspot-s-rev
                            priority: 19
                            text:
                                visible: *text_visible_populated_places
                                font:
                                    fill: [0.30,0.30,0.30]
                                    size: 12px
                    capital:
                        filter: { country_capital: true }
                        draw:
                            icons:
                                sprite: capital-s
                                priority: 17

                z9places-5:
                    filter:
                        all:
                            - { population: { max: 50000 } }
                        any:
                            - { country_capital: true }
                            - { region_capital: true }
                    draw:
                        icons:
                            size: 5px
                            interactive: true
                            visible: *icon_visible_populated_places
                            sprite: townspot-xs-rev
                            text:
                                interactive: true
                                visible: *text_visible_populated_places
                                font:
                                    size: 11px
                    capital:
                        filter: { country_capital: true }
                        draw:
                            icons:
                                sprite: capital-s
                                text:
                                    font:
                                        size: 13px

            populated-places-osm-z9-no-population:
                filter:
                    all:
                        - source: [openstreetmap, openstreetmap.org]
                        - name: true
                        - population: false
                        - not: { kind: [country, county, state, island, neighbourhood, suburb, quarter] }
                        - $zoom: [9]
                        - kind_detail: [city,town]
                draw:
                    icons:
                        size: 5px
                        visible: *icon_visible_populated_places
                        sprite: townspot-s-rev
                        priority: 21
                        text:
                            visible: *text_visible_populated_places
                            font:
                                size: 11px
                                fill: *text_fill
                                stroke: { color: *text_stroke, width: 2px }

            populated-places-natural-earth-z9-backfill:
                filter: { $zoom: [9], population: { max: 50000 } }
                draw: { text-blend-order: { font: { fill: *text_fill } } }
                z9places-1-ne:
                    filter: { min_zoom: [2,3] }
                    draw:
                        icons:
                            size: 8px
                            visible: *icon_visible_populated_places
                            sprite: townspot-l-rev
                            priority: 25
                            text:
                                visible: *text_visible_populated_places
                                font:
                                    size: 16px
                                    stroke: { color: *text_stroke, width: 2px }
                    capital:
                        filter: { country_capital: true }
                        draw:
                            icons:
                                sprite: capital-l
                                priority: 23

                z9places-2-ne:
                    filter: { min_zoom: [4,5,6] }
                    draw:
                        icons:
                            size: 6px
                            visible: *icon_visible_populated_places
                            sprite: townspot-m-rev
                            priority: 29
                            text:
                                visible: *text_visible_populated_places
                                font:
                                    size: 13px
                    capital:
                        filter: { country_capital: true }
                        draw:
                            icons:
                                sprite: capital-m
                                priority: 28

                z9places-3-ne:
                    filter: { min_zoom: [6,7,9] }
                    draw:
                        icons:
                            size: 6px
                            visible: *icon_visible_populated_places
                            sprite: townspot-m-rev
                            priority: 33
                            text:
                                visible: *text_visible_populated_places
                                font:
                                    size: 11px
                    capital:
                        filter: { country_capital: true }
                        draw:
                            icons:
                                sprite: capital-m
                                priority: 31

            populated-places-osm-z10:
                filter:
                    all:
                        - source: [openstreetmap, openstreetmap.org]
                        - name: true
                        - population: true
                        - not: { kind: [country, county, state, island, neighbourhood, suburb, quarter] }
                        - $zoom: [10]
                draw: { text-blend-order: { font: { fill: *text_fill, stroke: { color: *text_stroke, width: 3px } } } }

                z10places-1:
                    filter:
                        any:
                            - { population: { min: 500000 } }
                    draw:
                        text-blend-order:
                            anchor: center
                            visible: *text_visible_populated_places
                            priority: 5
                            font:
                                size: 17px
                                weight: 600

                z10places-2a:
                    filter:
                        any:
                            - { population: { min: 350000, max: 500000 } }
                    draw:
                        text-blend-order:
                            anchor: center
                            visible: *text_visible_populated_places
                            priority: 6
                            font:
                                size: 14px

                z10places-2b:
                    filter:
                        any:
                            - { population: { min: 150000, max: 350000 } }
                    draw:
                        icons:
                            size: 6px
                            visible: *icon_visible_populated_places
                            sprite: townspot-m-rev
                            priority: 7
                            text:
                                visible: *text_visible_populated_places
                                font:
                                    size: 13px

                z10places-3:
                    filter:
                        any:
                            - { population: { min: 50000, max: 149999 } }
                    draw:
                        icons:
                            size: 6px
                            visible: *icon_visible_populated_places
                            sprite: townspot-m-rev
                            priority: 11
                            text:
                                visible: *text_visible_populated_places
                                font:
                                    size: 12px

                z10places-4:
                    filter:
                        any:
                            - { population: { min: 20000, max: 49999 } }
                    draw:
                        icons:
                            size: 5px
                            visible: *icon_visible_populated_places
                            sprite: townspot-s-rev
                            priority: 13
                            text:
                                visible: *text_visible_populated_places
                                font:
                                    size: 11px

            populated-places-osm-z10-no-population:
                filter:
                    all:
                        - source: [openstreetmap, openstreetmap.org]
                        - name: true
                        - population: false
                        - not: { kind: [country, county, state, island, neighbourhood, suburb, quarter] }
                        - $zoom: [10]
                        - kind_detail: [city,town]
                draw:
                    icons:
                        size: 5px
                        visible: *icon_visible_populated_places
                        sprite: townspot-s-rev
                        priority: 15
                        text:
                            visible: *text_visible_populated_places
                            font:
                                size: 11px
                                fill: *text_fill
                                stroke: { color: *text_stroke, width: 3px }

            populated-places-natural-earth-z10-backfill:
                filter: { $zoom: [10], population: { max: 20000 } }
                draw: { text-blend-order: { font: { fill: *text_fill, stroke: { color: *text_stroke, width: 3px } } } }
                z10places-1-ne:
                    filter: { min_zoom: [2,3] }
                    draw:
                        text-blend-order:
                            visible: *text_visible_populated_places
                            offset: [0, 2px] # half icon size
                            priority: 17
                            font:
                                size: 16px

                z10places-2-ne:
                    filter: { min_zoom: [4,5,6] }
                    draw:
                        icons:
                            size: 6px
                            visible: *icon_visible_populated_places
                            sprite: townspot-m-rev
                            priority: 21
                            text:
                                visible: *text_visible_populated_places
                                font:
                                    size: 14px
                    capital:
                        filter: { country_capital: true }
                        draw:
                            icons:
                                sprite: capital-m
                                priority: 20

                z10places-3-ne:
                    filter: { min_zoom: [6,7,9,10] }
                    draw:
                        icons:
                            size: 5px
                            visible: *icon_visible_populated_places
                            sprite: townspot-s-rev
                            priority: 25
                            text:
                                visible: *text_visible_populated_places
                                font:
                                    size: 13px
                    capital:
                        filter: { country_capital: true }
                        draw:
                            icons:
                                size: 7px
                                sprite: capital-m
                                priority: 23

            populated-places-osm-z11:
                filter:
                    all:
                        - source: [openstreetmap, openstreetmap.org]
                        - name: true
                        - population: true
                        - not: { kind: [country, county, state, island, neighbourhood, suburb, quarter] }
                        - $zoom: [11]
                        - kind_detail: [city,town]
                draw: { text-blend-order: { anchor: center, font: { fill: *text_fill, stroke: { color: *text_stroke, width: 3px } } } }

                z11places-1:
                    filter:
                        any:
                            - { population: { min: 500000 } }
                    draw:
                        text-blend-order:
                            visible: *text_visible_populated_places
                            priority: 5
                            font:
                                size: 17px
                                weight: 600

                z11places-2:
                    filter:
                        any:
                            - { population: { min: 50000, max: 500000 } }
                    draw:
                        text-blend-order:
                            visible: *text_visible_populated_places
                            priority: 6
                            font:
                                size: 13px
                                weight: 600

                z11places-3:
                    filter:
                        any:
                        - { population: { min: 5000, max: 50000 } }
                    draw:
                        text-blend-order:
                            visible: *text_visible_populated_places
                            priority: 7
                            font:
                                size: 12px

            populated-places-osm-z11-no-population:
                filter:
                    all:
                        - source: [openstreetmap, openstreetmap.org]
                        - name: true
                        - population: false
                        - not: { kind: [country, county, state, island, neighbourhood, suburb, quarter] }
                        - $zoom: [11]
                        - kind_detail: [city,town]
                draw:
                    text-blend-order:
                        anchor: center
                        visible: *text_visible_populated_places
                        priority: 8
                        font:
                            size: 12px
                            fill: *text_fill
                            stroke: { color: *text_stroke, width: 3px }

            populated-places-natural-earth-z11-backfill:
                filter: { $zoom: [11], population: { max: 5000 } }
                draw:
                    text-blend-order:
                        anchor: center
                        font:
                            fill: *text_fill
                            stroke: { color: *text_stroke, width: 3px }
                z11places-1-ne:
                    filter: { min_zoom: [2,3] }
                    draw:
                        text-blend-order:
                            visible: *text_visible_populated_places
                            priority: 10
                            font:
                                size: 16px
                    capital:
                        filter: { country_capital: true }
                        draw:
                            text-blend-order:
                                priority: 9

                z11places-2-ne:
                    filter: { min_zoom: [4,5,6] }
                    draw:
                        text-blend-order:
                            visible: *text_visible_populated_places
                            priority: 13
                            font:
                                size: 14px
                    capital:
                        filter: { country_capital: true }
                        draw:
                            text-blend-order:
                                priority: 11
                                font:
                                    size: 16px
                    state_capital:
                        filter: { region_capital: true }
                        draw:
                            text-blend-order:
                                priority: 12
                                font:
                                    size: 15px

                z11places-3-ne:
                    filter: { min_zoom: [6,7,9,10] }
                    draw:
                        text-blend-order:
                            visible: *text_visible_populated_places
                            priority: 15
                            font:
                                size: 12px
                    capital:
                        filter: { country_capital: true }
                        draw:
                            text-blend-order:
                                priority: 14
                                font:
                                    size: 14px

            populated-places-osm-z12:
                filter:
                    all:
                        - source: [openstreetmap, openstreetmap.org]
                        - name: true
                        - population: true
                        - not: { kind: [country, county, state, island, neighbourhood, suburb, quarter] }
                        - $zoom: [12]
                        - kind_detail: [city,town]
                draw: { text-blend-order: { anchor: center, font: { fill: *text_fill, weight: 600, stroke: { color: *text_stroke, width: 3px } } } }

                z12places-1:
                    filter:
                        any:
                            - { population: { min: 500000 } }

                    draw:
                        text-blend-order:
                            visible: *text_visible_populated_places
                            priority: 5
                            font:
                                size: 18px
                                weight: 600

                z12places-2:
                    filter:
                        any:
                            - { population: { min: 50000, max: 500000 } }
                    draw:
                        text-blend-order:
                            visible: *text_visible_populated_places
                            priority: 6
                            font:
                                size: 14px

                z12places-3:
                    filter:
                        any:
                        - { population: { min: 5000, max: 50000 } }
                    draw:
                        text-blend-order:
                            visible: *text_visible_populated_places
                            priority: 7
                            font:
                                size: 12px

                z12places-4:
                    filter:
                        any:
                        - { population: { max: 5000 } }
                    draw:
                        text-blend-order:
                            visible: *text_visible_populated_places
                            priority: 8
                            font:
                                size: 11px

            populated-places-osm-z12-no-population:
                filter:
                    all:
                        - source: [openstreetmap, openstreetmap.org]
                        - name: true
                        - population: false
                        - not: { kind: [country, county, state, island, neighbourhood, suburb, quarter] }
                        - $zoom: [12]
                        - kind_detail: [city,town]
                draw:
                    text-blend-order:
                        anchor: center
                        visible: *text_visible_populated_places
                        priority: 9
                        font:
                            size: 11px
                            fill: *text_fill
                            stroke: { color: *text_stroke, width: 3px }

            populated-places-natural-earth-z12-backfill:
                filter: { $zoom: [12], population: { max: 5000 } }
                draw:
                    text-blend-order:
                        anchor: center
                        priority: 10
                        font:
                            fill: *text_fill
                            stroke: { color: *text_stroke, width: 3px }

                z12places-1-ne:
                    filter: { min_zoom: [2,3] }
                    draw:
                        text-blend-order:
                            visible: *text_visible_populated_places
                            priority: 12
                            font:
                                size: 16px
                    capital:
                        filter: { country_capital: true }
                        draw:
                            text-blend-order:
                                priority: 11
                                font:
                                    size: 16px

                z12places-2-ne:
                    filter: { min_zoom: [4,5,6] }
                    draw:
                        text-blend-order:
                            visible: *text_visible_populated_places
                            priority: 14
                            font:
                                size: 13px
                    capital:
                        filter: { country_capital: true }
                        draw:
                            text-blend-order:
                                priority: 13
                                font:
                                    size: 16px

                z12places-3-ne:
                    filter: { min_zoom: [6,7,9,10] }
                    draw:
                        text-blend-order:
                            visible: *text_visible_populated_places
                            priority: 16
                            font:
                                size: 11px
                    capital:
                        filter: { country_capital: true }
                        draw:
                            text-blend-order:
                                priority: 15
                                font:
                                    size: 14px

            populated-places-osm-z13-z14:
                filter:
                    all:
                        - source: [openstreetmap, openstreetmap.org]
                        - name: true
                        - population: true
                        - not: { kind: [country, county, state, island, neighbourhood, suburb, quarter] }
                        - $zoom: [13,14]
                        - kind_detail: [city,town]
                draw:
                    text-blend-order:
                        anchor: center
                        visible: *text_visible_populated_places
                        font:
                            size: 12px
                            fill: *text_fill
                            stroke: { color: *text_stroke, width: 4 }
                            weight: 600
                z14:
                    filter:
                        $zoom: [14]
                    draw:
                        text-blend-order:
                            font:
                                weight: 600

                z13places-1:
                    filter:
                        any:
                            - { population: { min: 200000 } }
                    draw:
                        text-blend-order:
                            visible: false

                z13places-2:
                    filter:
                        any:
                            - { population: { min: 50000, max: 199999 } }
                    draw:
                        text-blend-order:
                            visible: *text_visible_populated_places
                            priority: 5
                            font:
                                size: 14px

                z13places-3:
                    filter:
                        any:
                        - { population: { min: 5000, max: 49999 } }
                    draw:
                        text-blend-order:
                            visible: *text_visible_populated_places
                            priority: 6
                            font:
                                size: 13px

                z13places-4:
                    filter:
                        any:
                            - population: false
                            - population: true
                              all:
                                - population: { max: 5000 }
                    draw:
                        text-blend-order:
                            font:
                                size: 12px

            populated-places-osm-z13-z14-no-population:
                filter:
                    all:
                        - source: [openstreetmap, openstreetmap.org]
                        - name: true
                        - population: false
                        - not: { kind: [country, county, state, island, neighbourhood, suburb, quarter] }
                        - $zoom: [13, 14]
                        - kind_detail: [city,town]
                draw:
                    text-blend-order:
                        anchor: center
                        visible: *text_visible_populated_places
                        priority: 7
                        font:
                            size: 11px
                            fill: *text_fill
                            stroke: { color: *text_stroke, width: 3 }

            populated-places-natural-earth-z13-z14-backfill:
                filter: { $zoom: [13,14], population: { max: 5000 } }
                draw:
                    text-blend-order:
                        anchor: center
                        font:
                            fill: *text_fill
                            weight: 400

                z13places-1-ne:
                    filter: { min_zoom: [2,3] }
                    draw:
                        text-blend-order:
                            priority: 8
                            interactive: false
                            visible: false

                z13places-2-ne:
                    filter: { min_zoom: [4,5,6] }
                    draw:
                        text-blend-order:
                            priority: 9
                            visible: *text_visible_populated_places
                            font:
                                size: 13px

                z13places-3-ne:
                    filter: { min_zoom: [6,7,9,10] }
                    draw:
                        text-blend-order:
                            visible: *text_visible_populated_places
                            priority: 10
                            font:
                                size: 12px
        neighbourhoods:
            filter:
                kind: [macrohood, neighbourhood]
            neighborhood-z11:
                filter:
                    all:
                        - $zoom: [11]
                        - min_zoom: [11]
                        - max_zoom: { min: 12 }
                        - is_landuse_aoi: false
                        #- kind_tile_rank: { max: 6 }
                draw:
                    text-blend-order:
                        priority: 18
                        text_wrap: 10
                        visible: *text_visible_neighbourhoods_e
                        font:
                            size: 9px
                            weight: 400
                            fill: *text_fill
                            transform: uppercase
                            stroke: { color: *text_stroke, width: 2 }
            neighborhood-z12:
                filter:
                    all:
                        - $zoom: [12]
                        - min_zoom: [11,12]
                        - max_zoom: { min: 13 }
                        - is_landuse_aoi: false
                        #- kind_tile_rank: { max: 8 }
                draw:
                    text-blend-order:
                        priority: 18
                        text_wrap: 10
                        visible: *text_visible_neighbourhoods_e
                        font:
                            size: 9px
                            weight: 400
                            fill: *text_fill
                            transform: uppercase
                            stroke: { color: *text_stroke, width: 2 }
            neighborhood-z13:
                filter:
                    all:
                        - $zoom: [13]
                        - min_zoom: [11,12,13]
                        - max_zoom: { min: 14 }
                        - is_landuse_aoi: false
                        - kind_tile_rank: { max: 8 }
                draw:
                    text-blend-order:
                        priority: 18
                        text_wrap: 10
                        visible: *text_visible_neighbourhoods_e
                        font:
                            size: 10px
                            weight: 400
                            fill: *text_fill
                            transform: uppercase
                            stroke: { color: *text_stroke, width: 3 }
            neighborhood-z14:
                filter:
                    all:
                        - $zoom: [14]
                        - min_zoom: [11,12,13,14]
                        - max_zoom: { min: 15 }
                        - is_landuse_aoi: false
                        - kind_tile_rank: { max: 8 }
                draw:
                    text-blend-order:
                        priority: 18
                        text_wrap: 12
                        visible: *text_visible_neighbourhoods
                        font:
                            size: 11px
                            weight: 400
                            fill: *text_fill
                            transform: uppercase
                            stroke: { color: *text_stroke, width: 3 }
            neighborhood-z15:
                filter:
                    all:
                        - $zoom: [15]
                        - min_zoom: [11,12,13,14,15]
                        - max_zoom: { min: 16 }
                        - is_landuse_aoi: false
                        - kind_tile_rank: { max: 8 }
                draw:
                    text-blend-order:
                        priority: 18
                        text_wrap: 12
                        visible: *text_visible_neighbourhoods
                        font:
                            size: 13px
                            weight: 200
                            fill: *text_fill
                            transform: uppercase
                            stroke: { color: *text_stroke, width: 3 }
                z15-new:
                    filter:
                        all:
                            - min_zoom: 15
                    draw:
                        text-blend-order:
                            priority: 19
                            font:
                                size: 13px
            neighborhood-z16:
                filter:
                    all:
                        - $zoom: [16]
                        - min_zoom: [11,12,13,14,15,16]
                        - max_zoom: { min: 17 }
                        - is_landuse_aoi: false
                        - kind_tile_rank: { max: 8 }
                draw:
                    text-blend-order:
                        visible: *text_visible_neighbourhoods
                        priority: 18
                        font:
                            size: 14px
                            weight: 200
                            fill: *text_fill
                            transform: uppercase
                            stroke: { color: *text_stroke, width: 3 }

    highway-exit:
        data: { source: mapzen, layer: [pois] }
        filter: { kind: motorway_junction }
        draw:
            icons:
                visible: false
            text-blend-order:
                visible: *text_visible_exits
                interactive: true
                text_source: ref
                priority: 52
                font:
                    fill: *text_fill_exits
                    size: [[12,9px],[15,12px],[17,14px]]
                    stroke: { color: *highway1, width: [[12,2px],[14,3px],[15,3px]] }
        early:
            filter: { $zoom: { max: 13 } }
            draw:
                text-blend-order:
                    visible: *text_visible_exits_e
        later:
            filter: { $zoom: { min: 16 } }
            draw:
                text-blend-order:
                    font:
                        weight: 600
    airport-gate:
        data: { source: mapzen, layer: [pois] }
        filter: { kind: aeroway_gate }
        draw:
            icons:
                visible: false
            text-blend-order:
                visible: *text_visible_airport_gate
                interactive: true
                text_source: ref
                font:
                    fill: *text_fill
                    size: [[16,9px],[17,12px],[20,14px]]
                    #stroke: { color: *highway1, width: [[12,2px],[14,3px],[15,3px]] }
        later:
            filter: { $zoom: { min: 19 } }
            draw:
                text-blend-order:
                    font:
                        weight: 600

    pois_and_landuse_labels:
        data: { source: mapzen, layer: [pois] }
        visible: *label_visible_poi_landuse
        filter:
            all:
                - not: { kind: [building,address,farm,tree,apron,residential,commercial,industrial] }
                - $geometry: point
                # White list a few kinds to "always" show per the tile zoom inclusion, else test feature's min_zoom
                #- function() { return feature.min_zoom <= $zoom }
                - function() { if( feature.kind == 'restaurant' || feature.kind == 'landmark' || feature.kind == 'cafe' ) { return true } else { return feature.min_zoom <= $zoom } }
                - any:
                    - area: false
                      all:
                          - $zoom: { min: 12 }
                    - area: true
                      all:
                          - kind: true
        draw:
            icons:
                size: [[13, 12px], [16, 16px], [18, 19px]]
                interactive: true
                visible: false
                priority: 65
                text:
                    visible: false    # labels are enabled by each layer below
                    move_into_tile: false # preserves text alignment w/icons in JS
                    interactive: true
                    buffer: 7px
                    font:
                        family: *text_font_family
                        weight: 500
                        fill: *text_fill
                        size: 12px
                        stroke: { color: *text_stroke, width: 4 }
        poi_labels-z14:
            filter: { $zoom: [14] }
            draw: { icons: { text: { font: { size: 11px } } } }
        poi_labels-z15:
            filter: { $zoom: [15,16,17] }
            draw: { icons: { text: { font: { size: 12px, stroke: { width: 2 } } } } }
        poi_labels-z18:
            filter: { $zoom: [18,19] }
            draw: { icons: { text: { font: { size: 12px, weight: 600, stroke: { width: 3 } } } } }
        poi_labels-z20-up:
            filter: { $zoom: { min: 20 } }
            draw: { icons: { text: { font: { size: 14px, weight: 600, stroke: { width: 3 } } } } }
        no-name:
            filter: { name: false }
            sports-pitch:
                filter: { kind: [grass, pitch], $geometry: point, area: true, $zoom: { min: 17 } }
                draw:
                    icons:
                        sprite: function() { return feature.kind_detail }
                        visible: *icon_visible_poi_landuse_e
                        priority: 49
                baseball:
                    filter: { kind_detail: baseball }
                    draw: { icons: { sprite: baseball } }
                basketball:
                    filter: { kind_detail: basketball }
                    draw: { icons: { sprite: basketball } }
                football:
                    filter: { kind_detail: football }
                    draw: { icons: { sprite: football } }
                hockey:
                    filter: { kind_detail: hockey }
                    draw: { icons: { sprite: hockey } }
                soccer:
                    filter: { kind_detail: soccer }
                    draw: { icons: { sprite: soccer } }
                tennis:
                    filter: { kind_detail: tennis }
                    draw: { icons: { sprite: tennis } }
            toilets:
                filter: { kind: toilets, $zoom: { min: 18 }  }
                draw: { icons: { sprite: toilets, visible: *icon_visible_poi_landuse_e } }
            playground:
                filter: { kind: playground, $zoom: { min: 18 }  }
                draw: { icons: { sprite: playground, visible: *icon_visible_poi_landuse_e } }
            picnic_site:
                filter: { kind: picnic_site, $zoom: { min: 18 }  }
                draw: { icons: { sprite: picnic_site, visible: *icon_visible_poi_landuse_e } }
            information:
                filter: { kind: information, $zoom: { min: 18 }  }
                draw: { icons: { sprite: information, visible: *icon_visible_poi_landuse_e } }
            drinking_water:
                filter: { kind: drinking_water, $zoom: { min: 18 }  }
                draw: { icons: { sprite: drinking_water, visible: *icon_visible_poi_landuse_e } }
            traffic_signals:
                filter: { kind: traffic_signals, $zoom: { min: 18 } }
                draw:   { icons: { sprite: traffic_signals, visible: *icon_visible_poi_landuse_e } }
            bicycle_parking:
                filter: { kind: [bicycle_parking], $zoom: { min: 19 } }
                draw:   { icons: { sprite: bicycle_parking, visible: *icon_visible_poi_landuse_e } }
            parking:
                filter: { kind: [parking], $zoom: { min: 17 } }
                draw:   { icons: { sprite: parking, visible: *icon_visible_poi_landuse_e } }
        has-name:
            filter: { name: true }
            # match 1:1 correlations between data and sprite name
            direct-match:
                filter: { area: false }
                draw:
                    icons:
                        # sprite_source: kind
                        sprite: function() { return feature.kind; }
                        visible: *icon_visible_poi_landuse

            # add generic icon at high zoom, if direct match fails
            generic-icons:
                filter: { $zoom: { min: 18 }, area: false }
                draw:
                    icons:
                        sprite_default: generic
                        visible: *icon_visible_poi_landuse
                        priority: 47

            # add generic icon at high zoom
            default-label-names:
                filter: { $zoom: { min: 13 }, area: false }
                draw:
                    icons:
                        text:
                            visible: *text_visible_poi_landuse
                            priority: 48
                            font:
                                fill: *text_fill
                                size: 12px
                                stroke: { color: *text_stroke, width: 4 }
            landuse-labels-green-areas-national-park:
                filter:
                    all:
                        - area: true
                        - $geometry: point
                        - kind: [national_park, "park or protected land"]
                    any:
                        # show labels for smaller landuse areas at higher zooms
                        - { $zoom: [4],  area: { min: 3000000000 } }
                        - { $zoom: [5],  area: { min: 3000000000 } }
                        - { $zoom: [6],  area: { min: 500000000 } }
                        - { $zoom: [7,8,9],  area: { min: 100000000 } }
                        - { $zoom: [10], area: { min: 50000000 } }
                        - { $zoom: [11], area: { min: 25000000 } }
                        - { $zoom: [12], area: { min: 5000000 } }
                        - { $zoom: [13], area: { min: 200000 } }
                        - { $zoom: [14], area: { min: 50000 } }
                        - { $zoom: { min: 15 } }
                national-park:
                    # yosemite national park, joshua tree national park
                    filter: function() { return feature.name && feature.name.indexOf("National Park") > -1; }
                    visible: *label_visible_landuse_green
                    draw:
                        icons:
                            visible: *icon_visible_landuse_green
                            sprite: park
                            priority: 41
                            text:
                                visible: *text_visible_landuse_green
                                font:
                                    fill: *text_fill_park
                                    size: 12px
                                    style: italic
                                    stroke: { color: *text_stroke_park, width: 4 }
                    natl-park-labels-z4-z6:
                        filter: { $zoom: [4,5,6] }
                        draw:
                            icons:
                                visible: false
                                text: { font: { size: 10px, stroke: { width: 2px } } }
                    natl-park-labels-z7:
                        filter: { $zoom: [7] }
                        draw:
                            icons:
                                text: { font: { size: 10px, stroke: { width: 2px } } }
                    natl-park-labels-z8:
                        filter: { $zoom: [8,9] }
                        draw:
                            icons:
                                text: { font: { size: 11px, stroke: { width: 2px } } }
                    natl-park-labels-z10:
                        filter: { $zoom: {min: 10, max: 14 } }
                        draw:
                            icons:
                                text: { font: { size: 12px } }

            landuse-labels-green-areas-not-national-park:
                filter:
                    all:
                        - area: true
                        - $geometry: point
                        - kind: [park, national_park, "park or protected land",conservation, protected_area, nature_reserve, forest, grass]
                    any:
                        # show labels for smaller landuse areas at higher zooms
                        - { $zoom: [5],    area: { min: 10000000000 } }
                        - { $zoom: [6,7],  area: { min: 5000000000 } }
                        - { $zoom: [8],    area: { min: 1000000000 } }
                        - { $zoom: [9],    area: { min: 100000000 } }
                        - { $zoom: [10],   area: { min: 50000000 } }
                        - { $zoom: [11],   area: { min: 25000000 } }
                        - { $zoom: [12],   area: { min: 5000000 } }
                        - { $zoom: [13],   area: { min: 200000 } }
                        - { $zoom: [14],   area: { min: 50000 } }
                        - { $zoom: [15],   area: { min: 10000 } }
                        - { $zoom: [16],   area: { min: 1000 } }
                        - { $zoom: { min: 17 } }
                not-national-park:
                    filter: function() { return !( feature.name.indexOf("National Park") > -1 ); }
                    draw:
                        icons:
                            visible: *icon_visible_landuse_green
                            sprite: park
                            priority: 41
                            text:
                                visible: *text_visible_landuse_green
                                font:
                                    fill: *text_fill_park
    #                                size: 12px
    #                                weight: 400
                                    style: italic
    #                                stroke: { color: [0.870,0.870,0.870], width: 2 }
                    green-areas-z6:
                        # mojave national preserve
                        filter: { $zoom: [6] }
                        draw:
                            icons:
                                visible: false
                                text: { font: { size: 10px, stroke: { width: 2px } } }
                    green-areas-z7:
                        filter: { $zoom: [7] }
                        draw:
                            icons:
                                visible: false
                                text: { font: { size: 10px } }
                    green-areas-z8-z9:
                        filter: { $zoom: { min: 8, max: 14 } }
                        draw:
                            icons:
                                text: { font: { size: 11px } }
                    wilderness-areas-early:
                        filter: function() { return $zoom < 10 && feature.name && (feature.name.indexOf("Wilderness") > -1 || feature.name.indexOf("BLM") > -1) }
                        draw:
                            icons:
                                visible: false
                                text: { visible: false }
                    early-not-national-park:
                        filter: { not: { kind: national_park }, $zoom: { max: 6 } }
                        draw:
                            icons:
                                visible: false
                                text: { visible: false }
                    not-national-park:
                        filter: function() { return feature.name && feature.name.indexOf("Park") > -1 }
                        # draw:
                        #     icons:
                        #         sprite: park
                        early:
                            filter: { $zoom: { max: 8 } }
                            draw:
                                icons:
                                    visible: false
                                    text: { visible: false }
                    forest:
                        filter: function() { return $zoom < 8 && ((feature.name && feature.name.indexOf("Forest") > -1) || feature.protect_class >=6) }
                        draw:
                            icons:
                                visible: false
                                text: { visible: false }
                    hide-till-later:
                        filter: { kind: [grass], $zoom: { max: 16 } }
                        draw:
                            icons:
                                visible: false
                                text: { visible: false }
                    only-text-later:
                        filter: { kind: [grass], $zoom: { min: 16 } }
                        draw:
                            icons:
                                visible: false
                                text: { font: { style: italic } }
            beach:
                filter:
                    all:
                        - area: true
                        - $geometry: point
                        - kind: [beach]
                    any:
                        # show labels for smaller landuse areas at higher zooms
                        - { $zoom: [10],   area: { min: 300000 } }
                        - { $zoom: [11],   area: { min: 100000 } }
                        - { $zoom: [12],   area: { min: 50000 } }
                        - { $zoom: [13],   area: { min: 50000 } }
                        - { $zoom: [14],   area: { min: 20000 } }
                        - { $zoom: [15],   area: { min: 10000 } }
                        - { $zoom: [16],   area: { min: 1000 } }
                        - { $zoom: { min: 17 } }
                draw:
                    icons:
                        visible: *icon_visible_landuse_green
                        interactive: true
                        sprite: beach
                        text:
                            visible: *text_visible_landuse_green
                            interactive: true
                            font:
                                fill: *text_fill_beach
            airport:
                filter:
                    all:
                        - kind: [airport, aerodrome]
                        - area: true
                        - $geometry: point
                    any:
                        # show labels for smaller landuse areas at higher zooms
                        - { $zoom: [9],  area: { min: 10000000 } }
                        - { $zoom: [10], area: { min: 10000000 } }
                        - { $zoom: [11], area: { min: 5000000 } }
                        - { $zoom: [12], area: { min: 5000000 } }
                        - { $zoom: [13], area: { min: 500000 } }
                        - { $zoom: [14], area: { min: 20000 } }
                        # show labels for smaller landuse areas at higher zooms
                        - { $zoom: [15], area: { min: 10000 } }
                        - { $zoom: [16], area: { min: 5000 } }
                        - { $zoom: [17], area: { min: 2000 } }
                        - { $zoom: { min: 18 } }
                draw:
                    icons:
                        sprite: airport
                        visible: *icon_visible_landuse_green
                        priority: 42
                        text:
                            visible: *text_visible_landuse_green
                            text_source: function() { if(feature.iata) { return feature.name + ' (' + feature.iata + ')'; } else { return feature.name; } }
                            font:
                                fill: [0.20,0.20,0.20] # *text_fill
                                #size: 11px
                                stroke: { color: *text_stroke, width: 4 }
                early:
                    filter: { $zoom: [9,10,11] }
                    # todo: huh?
                    draw: { icons: { text: { text_source: iata, font: { size: 11px } } } }
                early2:
                    filter: { $zoom: { min: 12, max: 14 } }
                    draw: { icons: { text: { font: { size: 11px } } } }
            university:
                filter:
                    all:
                        - kind: [university, college]
                        - area: true
                        - $geometry: point
                        - not: { $layer: buildings }
                    any:
                        # show labels for smaller landuse areas at higher zooms
                        - { $zoom: [9],   area: { min: 10000000 } }
                        - { $zoom: [10], area: { min: 5000000 } }
                        - { $zoom: [11], area: { min: 2000000 } }
                        - { $zoom: [12], area: { min: 500000 } }
                        - { $zoom: [13], area: { min: 100000 } }
                        - { $zoom: [14], area: { min: 100000 } }
                        # show labels for smaller landuse areas at higher zooms
                        - { $zoom: [15], area: { min: 40000 } }
                        - { $zoom: [16], area: { min: 5000 } }
                        - { $zoom: [17], area: { min: 2000 } }
                        - { $zoom: { min: 18 } }
                visible: *label_visible_landuse_green
                draw:
                    icons:
                        sprite: college
                        visible: *icon_visible_landuse_green
                        priority: 41
                        text:
                            visible: *text_visible_landuse_green
                            font:
                                fill: *text_fill
                                size: 12px
                                stroke: { color: *text_stroke, width: 4 }
                early:
                    filter: { $zoom: { max: 12 } }
                    draw: { icons: { text: { visible: false } } }
                early2:
                    filter: { $zoom: { min: 12, max: 14 } }
                    draw: { icons: { text: { size: 11px } } }
            school:
                filter:
                    all:
                        - kind: [school, kindergarten]
                        - area: true
                        - $geometry: point
                        - not: { $layer: buildings }
                    any:
                        # show labels for smaller landuse areas at higher zooms
                        - { $zoom: [13], area: { min: 100000 } }
                        - { $zoom: [14], area: { min: 50000 } }
                        # show labels for smaller landuse areas at higher zooms
                        - { $zoom: [15], area: { min: 10000 } }
                        - { $zoom: [16], area: { min: 5000 } }
                        - { $zoom: [17], area: { min: 2000 } }
                        - { $zoom: { min: 18 } }
                draw:
                    icons:
                        sprite: school
                        visible: *icon_visible_landuse_green
                        priority: 41
                        text:
                            visible: *text_visible_landuse_green
                            font:
                                fill: *text_fill
                                size: 12px
                                stroke: { color: *text_stroke, width: 4 }
                early:
                    filter: { $zoom: { max: 14 } }
                    draw: { icons: { text: { font: { size: 11px } } } }
            winter_sports:
                filter:
                    all:
                        - kind: winter_sports
                        - area: true
                        - $geometry: point
                    any:
                        # show labels for smaller landuse areas at higher zooms
                        - { $zoom: [10], area: { min: 5000000 } }
                        - { $zoom: [11], area: { min: 2000000 } }
                        - { $zoom: [12], area: { min: 500000 } }
                        - { $zoom: [13], area: { min: 100000 } }
                        - { $zoom: [14], area: { min: 100000 } }
                        # show labels for smaller landuse areas at higher zooms
                        - { $zoom: [15], area: { min: 40000 } }
                        - { $zoom: [16], area: { min: 5000 } }
                        - { $zoom: [17], area: { min: 2000 } }
                        - { $zoom: { min: 18 } }
                draw:
                    icons:
                        sprite: ski
                        visible: *icon_visible_landuse_green
                        priority: 41
                        text:
                            visible: *text_visible_landuse_green
                            font:
                                fill: *text_fill
                                size: 12px
                                stroke: { color: *text_stroke, width: 4 }
                early:
                    filter: { $zoom: { max: 14 } }
                    draw: { icons: { text: { font: { size: 10px } } } }
            tourism-related:
                filter:
                    all:
                        - kind: [zoo, theme_park, resort, aquarium, winery, maze]
                        - area: true
                        - $geometry: point
                    any:
                        # show labels for smaller landuse areas at higher zooms
                        - { $zoom: { min: 11 }, area: { min: 400000 } }
                        - { $zoom: { min: 12 }, area: { min: 200000 } }
                        - { $zoom: { min: 13 }, area: { min: 50000 } }
                        - { $zoom: { min: 14 }, area: { min: 20000 } }
                        - { $zoom: { min: 15 }, area: { min: 10000 } }
                        - { $zoom: { min: 15 }, area: { min: 2000 } }
                        - { $zoom: { min: 16 } }
                draw:
                    icons:
                        sprite: function() { return feature.kind; }
                        sprite_default: generic
                        visible: *icon_visible_poi_landuse
                        priority: 43
                        text:
                            visible: *text_visible_poi_landuse
                            font:
                                fill: *text_fill
                                size: 12px
                                stroke: { color: *text_stroke, width: 4 }
                early-sizing:
                    filter: { $zoom: { max: 14 } }
                    draw: { icons: { text: { size: 11px } } }
            landuse-labels-not-green-areas:
                filter:
                    all:
                        - $zoom: { min: 6 }
                        - area: true
                        - $geometry: point
                        - not: { kind: [park, national_park, "park or protected land", conservation, protected_area, nature_reserve, airport, aerodrome, university, college, school, kindergarten, winter_sports, zoo, theme_park, resort, aquarium, winery, maze] }
                    any:
                        # show labels for smaller landuse areas at higher zooms
                        - { $zoom: [5,6,7], area: { min: 5000000000 } }
                        - { $zoom: [8],     area: { min: 1600000000 } }
                        - { $zoom: [9],     area: { min: 400000000 } }
                        - { $zoom: [10],    area: { min: 100000000 } }
                        - { $zoom: [11],    area: { min: 25000000 } }
                        - { $zoom: [12],    area: { min: 5000000 } }
                        - { $zoom: [13],    area: { min: 1000000 } }
                        - { $zoom: [14],    area: { min: 100000 } }
                        # show labels for smaller landuse areas at higher zooms
                        - { $zoom: [15],    area: { min: 5000 } }
                        - { $zoom: [16],    area: { min: 2000 } }
                        - { $zoom: { min: 17 } }
                draw:
                    icons:
                        sprite: function() { return feature.kind; }
                        sprite_default: generic
                        visible: *icon_visible_poi_landuse
                        priority: 43
                        text:
                            visible: *text_visible_poi_landuse
                            font:
                                fill: *text_fill
                                size: 12px
                                stroke: { color: *text_stroke, width: 4 }
                early-sizing:
                    filter: { $zoom: { max: 14 } }
                    draw: { icons: { text: { size: 11px } } }
                building-like:
                    filter: { kind: [commercial,residential,warehouse,public,dormitory], osm_relation: false }
                    draw:
                        icons:
                            sprite: building
                residential-relations-paris-wtf-early:
                    filter: { kind: [residential], osm_relation: true, $zoom: { max: 13 } }
                    draw:
                        icons:
                            visible: false
                            text: { visible: false }
                residential-relations-paris-wtf:
                    filter: { kind: [residential], osm_relation: true, $zoom: { min: 13 } }
                    draw:
                        icons:
                            visible: false
                            text:
                                visible: true
                                text_source: short_name
                hide-till-later:
                    filter: { kind: [pedestrian,common,railway,ship,houseboat,common,grass,wetland,pitch], $zoom: { max: 17 } }
                    draw:
                        icons:
                            visible: false
                            text: { visible: false }
                only-text-later:
                    filter: { kind: [pedestrian,common,railway,ship,houseboat,common,grass,wetland,pitch], $zoom: { min: 17 } }
                    draw:
                        icons:
                            visible: false
                            text: { font: { style: italic } }
                burial_vault-early:
                    filter: { kind: [burial_vault], $zoom: { max: 19 } }
                    draw:
                        icons:
                            visible: false
                            text: { visible: false }
                garden-area-early:
                   filter:
                       all:
                           - kind: [garden, allotments]
                       any:
                           # limit show smaller landuse areas to higher zooms
                           - { $zoom: [12], area: { max: 500000 } }
                           - { $zoom: [13], area: { max: 100000 } }
                           - { $zoom: [14], area: { max: 10000 } }
                           - { $zoom: [15], area: { max: 5000 } }
                   draw:
                       icons:
                           visible: false
            university-poi:
                filter: { kind: [university, college], area: false, $zoom: { max: 16 } }
                draw:
                    icons:
                        visible: false
                        text: { visible: false }
            office-early:
                filter:
                    any:
                        - { kind: [insurance, office, company], $zoom: [15], area: { max: 10000 } }
                        - { kind: [insurance, office, company], $zoom: [16], area: { max: 5000 } }
                draw:
                    icons:
                        visible: false
                        text: { visible: false }
            bank-early:
                filter: { kind: [bank], $zoom: { max: 17 } }
                draw:
                    icons:
                        visible: false
                        text: { visible: false }
            garden-no-area-early2:
                filter: { kind: [garden, allotments], $zoom: { max: 16 }, area: false }
                draw:
                    icons:
                        visible: false
            garden-no-area-early:
                filter: { kind: [garden, allotments], $zoom: [16], area: false }
                draw:
                    icons:
                        priority: 45
                        size: 14px
                        text:  { font: { size: 10px, style: italic } }
            garden-no-area-later:
                filter: { kind: [garden, allotments], $zoom: { min: 17 }, area: false }
                draw:
                    icons:
                        priority: 45
                        size: 16px
                        text:  { font: { size: 11px, style: italic } }
            post-office-early:
                filter: { kind: [post_office], $zoom: { max: 14 } }
                draw:
                    icons:
                        visible: false
                        text: { visible: false }
            atm-early:
                filter: { kind: [atm], $zoom: { max: 18 } }
                draw:
                    icons:
                        visible: false
                        text: { visible: false }
            bicycle-parking-early:
                filter: { kind: [bicycle_parking], $zoom: { max: 19 } }
                draw:
                    icons:
                        visible: false
                        text: { visible: false }
            true-early:
                filter: { kind: [true], $zoom: { max: 18 } }
                draw:
                    icons:
                        visible: false
                        text: { visible: false }
            peak-early:
                filter: { kind: [peak], $zoom: { max: 16 } }
                draw:
                    icons:
                        visible: false
                        text: { visible: false }
            drinking-water-early:
                filter: { kind: [drinking_water], $zoom: { max: 18 } }
                draw:
                    icons:
                        visible: false
                        text: { visible: false }
            memorial-early:
                filter: { kind: [memorial], $zoom: { max: 13 } }
                draw:
                    icons:
                        visible: false
                        text: { visible: false }
            animal-points-early:
                filter: { kind: [animal], area: false, $zoom: { max: 18 } }
                draw:
                    icons:
                        visible: false
                        text: { visible: false }
#            animal-areas-early:
#                filter: { kind: [animal], area: { min: 500 }, $zoom: { max: 18 } }
#                draw:
#                    text-blend-order:  { visible: false }
#                    icons: { visible: false }
            parking-labels-early:
                filter:
                    kind: [parking]
                    $zoom: { max: 18 }
                draw:
                    icons:
                        visible: false
                        text: { visible: false }
            parking-labels:
                filter:
                    kind: [parking]
                    $zoom: { min: 18 }
                draw:
                    icons:
                        text:
                            visible: *text_visible_poi_landuse
                            font:
                                fill: *text_fill
                                size: 12px
                                stroke: { color: *text_stroke, width: 4 }
            landuse-funky:
                filter: { kind: [commercial, residential, wood], $zoom: { max: 17 } }
                draw:
                    icons:
                        text:
                            visible: false
            car-sharing:
                filter: { kind: car_sharing }
                icons-early:
                    filter: { $zoom: { max: 17 } }
                    draw:
                        icons:
                            visible: false
                text-labels-early:
                    filter: { $zoom: { max: 19 } }
                    draw:
                        icons:
                            text:
                                visible: false
            tower:
                filter: { kind: [tower], label_placement: true }
                draw:
                    icons:
                        visible: false
                        text:
                            font:
                                style: italic
            station-train-subway:
                filter: { kind: [station, train-station, train_station], $zoom: { min: 11 } }
                visible: *label_visible_station
                draw:
                    icons:
                        visible: *icon_visible_station
                        sprite: train_station
                        size: [[13, 12px], [14, 12px], [15, 16px], [17, 18px], [18, 20px]]
                        priority: 41
                        text:
                            visible: *text_visible_station
                low-priority-early:
                    filter: { kind_tile_rank: { min: 5 }, $zoom: { min: 0, max: 13 } }
                    draw:
                        icons:
                            visible: false
                            #size: [[12, 6px], [14, 6px], [15, 16px]]
                            text: { visible: false }
                low-priority-early-z13:
                    filter: { kind_tile_rank: { min: 5 }, $zoom: [13] }
                    draw:
                        icons:
                            visible: false
                            #size: [[12, 6px], [14, 6px], [15, 16px]]
                            text: { visible: false }
                low-priority-early-z14:
                    filter: { kind_tile_rank: { min: 7 }, $zoom: [14] }
                    draw:
                        icons:
                            #size: [[12, 10px], [14, 11px], [15, 16px]]
                            #visible: false
                            text: { visible: false }
            tram-stop-early:
                filter: { kind: tram_stop, $zoom: { max: 15 } }
                draw:
                    icons:
                        visible: false
                        text:
                            visible: false
            tram-stop-early-z15:
                filter: { kind: tram_stop, $zoom: [15] }
                draw:
                    icons:
                        text:
                            visible: false
            tram-stop:
                filter: { kind: tram_stop, $zoom: { min: 15 } }
                draw:
                    icons:
                        size: [[16, 12px], [17, 18px]]
            bus-stop-bus-station-labels:
                filter:
                    kind: [bus_stop, bus_station]
                    $zoom: { min: 18 }
                draw:
                    icons:
                        text:
                            visible: *text_visible_poi_landuse
                            font:
                                fill: *text_fill
                                size: 12px
                                stroke: { color: *text_stroke, width: 4 }
                bus_stop:
                    filter:
                        kind: [bus_stop]
                        $zoom: { max: 19 }
                    draw:
                        icons:
                            size: [[13, 8px], [19, 18px]]
                            text:
                                visible: false
            minor-z17-early:
                filter:
                    kind: [accountant, administrative, advertising_agency, architect, association, atm, bakery, bed_and_breakfast, bicycle, bicycle_parking, bicycle_rental, books, bus_stop, bus_stop, butcher, car, car_repair, chalet, clothes, company, computer, consulting, convenience, doityourself, drinking_water, dry_cleaning, educational_institution, emergency_phone, employment_agency, estate_agent, fashion, financial, florist, foundation, gate, gift, government, greengrocer, guest_house, hairdresser, hostel, hotel, insurance, it, jewelry, lawyer, mast, memorial, mobile_phone, motel, newspaper, ngo, notary, optician, parking, pet, physician, playground, political_party, post_box, religion, research, slipway, subway_entrance, tax_advisor, telecommunication, telephone, theatre, therapist, toilets, traffic_signals, travel_agent, water_tower, true]
                    area: false
                    $zoom: { max: 17 }
                draw:
                    icons:
                        visible: false
                        text:
                            visible: false
            minor-z18-early:
                filter:
                    kind: [bench, waste_basket]
                    area: false
                    $zoom: { max: 18 }
                draw:
                    icons:
                        visible: false
                        text:
                            visible: false

            icons:
                building-icon:
                    filter: { kind: [building, auditorium, terminal, hangar, retirement_home, manor, recreation_center, apartments] }
                    draw:   { icons: { sprite: building } }
                    early:
                        filter:
                            any:
                                # show labels for smaller landuse areas at higher zooms
                                - { $zoom: [14], area: { max: 200000 } }
                                - { $zoom: [15], area: { max: 20000 } }
                                - { $zoom: [16], area: { max: 5000 } }
                                - { $zoom: [17], area: { max: 1000 } }
                        draw:
                            icons:
                                visible: false
                                text:
                                    visible: false
                college:
                    filter: { kind: [university, college], area: false }
                    draw:   { icons: { sprite: college } }
                hardware-store:
                    filter: { kind: [hardware, hardware-store, doityourself, paint] }
                    draw:   { icons: { sprite: hardware-store } }
                hotel:
                    filter: { kind: [hotel, motel, hostel] }
                    draw:   { icons: { sprite: hotel } }
                landmark:
                    filter: { kind: [landmark, memorial, monument, wayside_shrine, beacon] }
                    draw:   { icons: { sprite: landmark } }
                tower:
                    filter: { kind: [tower], label_placement: false }
                    draw:   { icons: { sprite: landmark } }
                place_of_worship:
                    filter:
                        all:
                            - kind: [place_of_worship, wayside_chapel]
                    draw:
                        icons:
                            sprite: function() { return feature.religion; }
                            sprite_default: place_of_worship

    # todo: ocean and sea features are hiding in the places layer
    water-area-labels:
        data: { source: mapzen, layer: [water] }
        visible: *text_visible_water_labels
        filter:
            all:
                - name: true
                - $geometry: point
                - not: { kind: [riverbank, dock, playa] }
                - area: true
            any:
                # show labels for smaller landuse areas at higher zooms
                - { $zoom: { min: 5 },  area: { min: 10000000000 } }
                - { $zoom: { min: 6 },  area: { min: 5000000000 } }
                - { $zoom: { min: 7 },  area: { min: 400000000 } }
                - { $zoom: { min: 8 },  area: { min: 200000000 } }
                - { $zoom: { min: 9 },  area: { min: 100000000 } }
                - { $zoom: { min: 10 }, area: { min: 100000000 } }
                - { $zoom: { min: 11 }, area: { min: 10000000 } }
                - { $zoom: { min: 12 }, area: { min: 2000000 } }
                - { $zoom: { min: 13 }, area: { min: 1000000 } }
                - { $zoom: { min: 14 }, area: { min: 500000 } }
                - { $zoom: { min: 15 }, area: { min: 100000 } }
                - { $zoom: { min: 15 }, area: { min: 50000 } }
                - { $zoom: { min: 16 }, area: { min: 20000 } }
                - { $zoom: { min: 17 } }
        default-label-text:
            draw:
                text-blend-order:
                    font:
                        fill: *text_fill_water
                        family: *text_font_family
                        style: italic
                        weight: 500
                        size: 12px
                        stroke: { color: *text_stroke_water, width: 3 }
        lakes-z5:
            filter: { $zoom: [5] }
            draw:
                text-blend-order: { font: { size: 9px } }
        lakes-z6:
            filter: { $zoom: [6] }
            draw:
                text-blend-order: { font: { size: 11px } }
        lakes-z8:
            filter: { $zoom: [8] }
            draw:
                text-blend-order: { font: { size: 12px } }

    ocean-sea-labels:
        data: { source: mapzen, layer: places }
        visible: *text_visible_water_labels
        filter: { name: true, kind: [sea, ocean] }
        draw:
            text-blend-order:
                font:
                    fill: *text_fill_water
                    family: *text_font_family
                    style: italic
                    weight: 500
                    size: 12px
                    stroke: { color: *text_stroke_water, width: 3 }
                    transform: uppercase
        sea-early:
            filter: { $zoom: [3], kind: sea }
            draw: { text-blend-order: { visible: false } }
        ocean-spacer:
            filter: { kind: ocean }
            ocean-spacer-z1-z4:
                filter: { $zoom: { min: 1, max: 4 } }
                draw:
                    text-blend-order:
                        text_source: function() { return feature.name.split('').join(' ') }
                        text_wrap: false
            ocean-spacer-z4-up:
                filter: { $zoom: { min: 4 } }
                draw:
                    text-blend-order:
                        text_source: function() { return feature.name.split('').join('  ') }
                        text_wrap: false
        ocean-labels-z1:
            filter: { $zoom: [1] }
            draw:
                text-blend-order: { font: { size: 8px } }
        ocean-labels-z2:
            filter: { $zoom: [2] }
            draw:
                text-blend-order: { font: { size: 10px } }
        ocean-labels-z3:
            filter: { $zoom: [3] }
            draw:
                text-blend-order: { font: { size: 13px } }
        ocean-labels-z4-up:
            filter: { $zoom: { min: 4} }
            draw:
                text-blend-order: { font: { size: 16px } }

        sea-spacer:
            filter: { not: { kind: [ocean] }, $zoom: { min: 5 } }
            draw:
                text-blend-order:
                    text_source: function() { return feature.name.split('').join(' ') }
                    text_wrap: false

        sea-labels:
            filter: { not: { kind: [ocean] } }
            sea-labels-z4:
                    filter: { $zoom: [4] }
                    draw:
                        text-blend-order: { font: { size: 9px } }
            sea-labels-z5:
                    filter: { $zoom: [5] }
                    draw:
                        text-blend-order: { font: { size: 10px } }
            sea-labels-z6:
                    filter: { $zoom: [6] }
                    draw:
                        text-blend-order: { font: { size: 11px } }
            sea-labels-z7:
                    filter: { $zoom: [7] }
                    draw:
                        text-blend-order: { font: { size: 12px } }
            sea-labels-z8:
                    filter: { $zoom: { min: 8} }
                    draw:
                        text-blend-order: { font: { size: 14px } }

    playa-labels:
        data: { source: mapzen, layer: [water] }
        visible: *text_visible_water_labels
        filter:
            all:
                - name: true
                - $geometry: point
                - kind: playa
                - area: true
            any:
                # show labels for smaller landuse areas at higher zooms
                - { $zoom: { min: 7 },  area: { min: 1500000000 } }
                - { $zoom: { min: 8 },  area: { min: 200000000 } }
                - { $zoom: { min: 9 },  area: { min: 100000000 } }
                - { $zoom: { min: 10 }, area: { min: 100000000 } }
                - { $zoom: { min: 11 }, area: { min: 10000000 } }
                - { $zoom: { min: 12 }, area: { min: 2000000 } }
                - { $zoom: { min: 13 }, area: { min: 1000000 } }
                - { $zoom: { min: 14 }, area: { min: 500000 } }
                - { $zoom: { min: 15 }, area: { min: 100000 } }
                - { $zoom: { min: 15 }, area: { min: 50000 } }
                - { $zoom: { min: 16 }, area: { min: 20000 } }
                - { $zoom: { min: 17 } }
        draw:
            text-blend-order:
                font:
                    fill: grey
                    family: *text_font_family
                    style: italic
                    weight: 400
                    size: 12px
                    stroke: { color: *text_stroke_water, width: 3 }
        # debug only
#        icons:
#            size: [[13, 12px], [15, 18px]]
#            interactive: true
#            sprite: *townspot_sprite
    water-line-labels:
        data: { source: mapzen, layer: [water] }
        filter:
            all:
                - name: true
                - $geometry: line
#                - kind: [river,canal,stream,dam,ditch,drain]
                - $zoom: { min: 14 }
        draw:
            text-blend-order:
                visible: *text_visible_water_labels
                font:
                    fill: *text_fill_water
                    family: *text_font_family
                    style: italic
                    weight: 400
                    size: 12px
        water-line-labels-z14:
            filter: { $zoom: [14] }
            draw:
                text-blend-order: { font: { size: 10px } }
        water-line-labels-z17:
            filter: { $zoom: [17] }
            draw:
                text-blend-order: { font: { size: 14px } }
        not-river-not-stream:
            filter: { kind: [canal,dam,ditch,drain], $zoom: { max: 16 } }
            draw:
                text-blend-order:
                    visible: false
        stream:
            filter: { kind: [stream], $zoom: { max: 17 } }
            draw:
                text-blend-order:
                    visible: false

    landuse:
        data: { source: mapzen }
        draw:
            polygons:
                order: function() { return feature.sort_rank; }

        landuse-labels:
            filter:
                all:
                    - label_placement: true
                    - name: true
                    - $zoom: { min: 16 }
            draw:
                text-blend-order:
                    #text_source: global.ux_language_text_source
                    interactive: true
                    move_into_tile: true
                    priority: 100
                    visible: *text_visible_landuse_generic
                    font:
                        fill: '#666'
                        family: *text_font_family
                        style: italic
                        size: 11px
                        stroke: { color: *text_stroke_address, width: 1 }

        tier1:
            # filter:
            #     any:
            #         # limit show smaller landuse areas to higher zooms
            #         - { $zoom: { min: 3 },  area: { min: 300000000 } }
            #         - { $zoom: { min: 4 },  area: { min: 300000000 } }
            #         - { $zoom: { min: 5 },  area: { min: 150000000 } }
            #         - { $zoom: { min: 6 },  area: { min: 150000000 } }
            #         - { $zoom: { min: 7 },  area: { min: 100000000 } }
            #         - { $zoom: { min: 8 },  area: { min: 10000000 } }
            #         - { $zoom: { min: 9 },  area: { min: 5000000 } }
            #         - { $zoom: { min: 10 }, area: { min: 1000000 } }
            #         - { $zoom: { min: 11 }, area: { min: 500000 } }
            #         - { $zoom: { min: 12 }, area: { min: 500000 } }
            #         - { $zoom: { min: 13 }, area: { min: 100000 } }
            #         - { $zoom: { min: 14 }, area: { min: 50000 } }
            #         - { $zoom: { min: 15 }, area: { min: 20000 } }
            #         - { $zoom: { min: 15 }, area: { min: 2000 } }
            #         - { $zoom: { min: 16 } }
            # national_park:
            #     filter: { kind: [national_park, "park or protected land"], not: { operator: [ "United States Forest Service", "US Forest Service", "U.S. Forest Service", "USDA Forest Service" ] } }
            #     draw:
            #         polygons:
            #             order: 18
            #             color: *green7
            #     us_national_park:
            #         # yosemite national park, death valley national park, grand canyon national park
            #         filter: { operator: [ "United States National Park Service", "US National Park Service" ] }
            #         draw:
            #             polygons:
            #                 order: 19
            #                 color: *green1

            national_park:
                filter:
                    all:
                        - kind: [national_park, battlefield, protected_area]
                    any:
                        - not: { operator: [ "United States Forest Service" ] }
                        - protect_class: ['2','3','5']
                draw:
                    polygons:
                        interactive: true
                        color: *green7
                        # todo: what is this?
                        order: 18
                        visible: true
                us_national_park:
                    # yosemite national park, death valley national park, grand canyon national park
                    filter:
                        any:
                            - operator: [ "United States National Park Service" ]
                            - protect_class: ['2','3','5']
                    draw:
                        polygons:
                            color: *green1
                            visible: true
        tier2:
            # filter:
            #     any:
            #         # limit show smaller landuse areas to higher zooms
            #         - { $zoom: { min: 4 },  area: { min: 1000000000 } }
            #         - { $zoom: { min: 5 },  area: { min: 1000000000 } }
            #         - { $zoom: { min: 6 },  area: { min: 150000000 } }
            #         - { $zoom: { min: 7 },  area: { min: 100000000 } }
            #         - { $zoom: { min: 8 },  area: { min: 10000000 } }
            #         - { $zoom: { min: 9 },  area: { min: 5000000 } }
            #         - { $zoom: { min: 10 }, area: { min: 1000000 } }
            #         - { $zoom: { min: 11 }, area: { min: 500000 } }
            #         - { $zoom: { min: 12 }, area: { min: 250000 } }
            #         - { $zoom: { min: 13 }, area: { min: 100000 } }
            #         - { $zoom: { min: 14 }, area: { min: 50000 } }
            #         - { $zoom: { min: 15 }, area: { min: 20000 } }
            #         - { $zoom: { min: 15 }, area: { min: 2000 } }
            #         - { $zoom: { min: 16 } }
            # conservation:
            #     filter:
            #         kind: [conservation, protected_area, nature_reserve]
            #         $zoom: { min: 4 }
            #     draw:
            #         polygons:
            #             color: *green8
            #     wilderness-areas:
            #         filter: function() { return feature.name && feature.name.indexOf("Wilderness") > -1 }
            #         draw:
            #             polygons:
            #                 order: 25
            #                 color: [[5,*green7],[8,*green1_w]]
            #             outline:
            #                 style: lines
            #                 order: 39
            #                 color: *green1_ws
            #                 width: [[9,0px],[10,1px],[11,2px],[12,4px]]
            #     national_forest_level_6:
            #         filter: { protect_class: ["6",6] }
            #         draw:
            #             polygons:
            #                 color: *green7
            #             lines:
            #                 order: 10
            #                 color: *earth1
            #                 width: 2px


            conservation:
                filter:
                    $zoom: { min: 4 }
                    kind: [protected_area, nature_reserve, national_park]
                    not: { protect_class: [2,3,5]}
                draw:
                    # pixel-pattern-light:
                    #     #order: 33 #25
                    #     visible: true

                    polygons:
                        color: *green8
                        visible: true
            national_forest_level_6:
                filter:
                    all:
                        - kind: forest
                    any:
                        - protect_class: ['6']
                        - operator: ['United States Forest Service']
                draw:
                    polygons:
                        color: *green7
                        visible: true
                    lines:
                        color: *earth1
                        width: 2px

            parks-and-national-forests-not-national-park:
                filter:
                    all:
                        - $zoom: { min: 4 }
                        - kind: [park, national_park]
                    any:
                        - not: { operator: [ "United States National Park Service", "United States Forest Service" ] }
                        - not: { protect_class: ['2','3','5','6'] }
                # default for national forests and more?
                draw:
                    polygons:
                        color: *green7
                        visible: true
                    lines:
                        color: *earth1
                        width: [[7,0px],[8,1px],[10,2px]]
                national_park:
                    #filter: function() { return feature.name && (feature.name.indexOf('National Park') > -1); }
                    filter:
                        all:
                            - kind: national_park
                            - not: [ protect_class: ['2','3','5','6'], operator: [ "United States National Park Service"] ]
                    draw:
                        polygons:
                            visible: true
            # gotta be a protected area to draw green, not just a landcover type
            farm:
                filter:
                    kind: [farm, farmland]
                    $zoom: { min: 10}
                draw:
                    polygons:
                        color: [ [10,*green4], [12,*green5] ]
                        visible: *green4_v

            forest:
                filter: { kind: [forest, wood, natural_wood, natural_forest, natural_park], $zoom: { min: 10 }, not: { operator: [ "United States Forest Service"] } }
                draw:
                    polygons:
                        color: *green7
                        visible: true
                    lines:
                        order: 28
                        color: *earth1
                        width: 2px
            # forest:
            #     filter: { kind: [forest,wood], $zoom: { min: 6 } }
            #     national-forest:
            #         filter:
            #             operator: [ "United States Forest Service", "US Forest Service", "U.S. Forest Service", "USDA Forest Service" ]
            #         draw:
            #             polygons:
            #                 color: *green7
            #             lines:
            #                 order: 28
            #                 color: *earth1
            #                 width: 2px
            #     landuse-forest:
            #         filter:
            #             not: { operator: [ "United States Forest Service", "US Forest Service", "U.S. Forest Service", "USDA Forest Service" ] }
            #             $zoom: { min: 10 }
            #         draw:
            #             polygons:
            #                 color: *green9

            # nature_reserve:
            #     filter: { kind: nature_reserve, $zoom: { min: 7 } }
            #     draw:
            #         polygons:
            #             color: *green6
            #     wilderness-areas:
            #         filter: function() { return feature.name && feature.name.indexOf("Wilderness") > -1 }
            #         draw:
            #             polygons:
            #                 color: *green7
            #             outline:
            #                 style: lines
            #                 color: *green6
            #                 width: [[9,0px],[10,2px],[12,4px]]
            # parks-and-national-forests-not-national-park:
            #     filter: { $zoom: { min: 4 }, kind: [park, national_park, "park or protected land"], not: { operator: [ "United States National Park Service", "US National Park Service" ] } }
            #     # default for national forests and more?
            #     draw:
            #         polygons:
            #             color: *green7
            #         lines:
            #             color: *earth1
            #             width: [[7,0px],[8,1px],[10,2px]]
            urban:
                filter: { kind: [urban, rural, residential] }
                visible: *earth2_v
                draw:
                    polygons:
                        color: [[0,*earth2],[9,*earth2]]
                        visible: *earth2_v
        tier3:
            # filter:
            #     any:
            #         # limit show smaller landuse areas to higher zooms
            #         - { $zoom: { min: 8 },  area: { min: 10000000 } }
            #         - { $zoom: { min: 9 },  area: { min: 5000000 } }
            #         - { $zoom: { min: 10 }, area: { min: 1000000 } }
            #         - { $zoom: { min: 11 }, area: { min: 500000 } }
            #         - { $zoom: { min: 12 }, area: { min: 500000 } }
            #         - { $zoom: { min: 13 }, area: { min: 100000 } }
            #         - { $zoom: { min: 14 }, area: { min: 50000 } }
            #         - { $zoom: { min: 15 }, area: { min: 20000 } }
            #         - { $zoom: { min: 15 }, area: { min: 2000 } }
            #         - { $zoom: { min: 16 } }
            airport:
                filter:
                    kind: aerodrome
                draw:
                    polygons:
                        color: *purple
                        visible: *purple_v
            military:
                filter:
                    kind: military
                draw:
                    polygons:
                        color: *purple
            university:
                filter:
                    kind: [university, college]
                draw:
                    polygons:
                        color: *brown1
        tier4:
            # filter:
            #     any:
            #         # limit show smaller landuse areas to higher zooms
            #         - { $zoom: { min: 10 }, area: { min: 1000000 } }
            #         - { $zoom: { min: 11 }, area: { min: 500000 } }
            #         - { $zoom: { min: 12 }, area: { min: 500000 } }
            #         - { $zoom: { min: 13 }, area: { min: 100000 } }
            #         - { $zoom: { min: 14 }, area: { min: 50000 } }
            #         - { $zoom: { min: 15 }, area: { min: 20000 } }
            #         - { $zoom: { min: 15 }, area: { min: 2000 } }
            #         - { $zoom: { min: 16 } }
            cemetery:
                filter:
                    kind: cemetery
                draw:
                    polygons:
                        #order: 11
                        color: *green2
            commercial:
                filter:
                    kind: commercial
                draw:
                    polygons:
                        color: *grey1
                        visible: *grey1_v
            golf_course:
                filter:
                    kind: golf_course
                draw:
                    polygons:
                        color: *green3
            hospital:
                filter:
                    kind: hospital
                draw:
                    polygons:
                        color: *red1
            industrial:
                filter:
                    kind: industrial
                draw:
                    polygons:
                        color: *grey6
            power:
                filter: { kind: [plant, generator, substation] }
                draw:
                    polygons:
                        color: *grey3
            railway:
                filter:
                    kind: railway
                draw:
                    polygons:
                        color: *grey3
            sports_centre:
                filter:
                    kind: sports_centre
                draw:
                    polygons:
                        color: *green10
            recreation_ground:
                filter:
                    kind: recreation_ground
                draw:
                    polygons:
                        color: *mystry1
            retail:
                filter:
                    kind: retail
                draw:
                    polygons:
                        color: *grey1
                        visible: *grey1_v
            stadium:
                filter:
                    kind: stadium
                draw:
                    polygons:
                        color: *orange1
            zoo:
                filter:
                    kind: [zoo, wildlife_park]
                draw:
                    polygons:
                        color: *green2
            winter_sports:
                filter:
                    kind: winter_sports
                draw:
                    polygons:
                        color: *grey8
                        visible: *grey8_v
            man-made:
                filter: { kind: [pier,wastewater_plant,works,bridge,tower,breakwater,water_works,groyne,dike,cutline] }
                draw:
                    polygons:
                        color: *grey3
                pier:
                    filter: { kind: [pier,bridge,breakwater,groyne,dike,cutline] }
                    draw:
                        polygons:
                            color: *earth1
        tier5:
            # filter:
            #     any:
            #         # limit show smaller landuse areas to higher zooms
            #         - { $zoom: { min: 10 }, area: { min: 1000000 } }
            #         - { $zoom: { min: 11 }, area: { min: 400000 } }
            #         - { $zoom: { min: 12 }, area: { min: 200000 } }
            #         - { $zoom: { min: 13 }, area: { min: 50000 } }
            #         - { $zoom: { min: 14 }, area: { min: 20000 } }
            #         - { $zoom: { min: 15 }, area: { min: 10000 } }
            #         - { $zoom: { min: 15 }, area: { min: 2000 } }
            #         - { $zoom: { min: 16 } }
            #     all:
            #         - kind:
            #             - theme_park
            #             - resort
            #             - aquarium
            #             - winery
            #             - maze
            #             - beach
            tourism-related:
                filter:
                    kind:
                        - theme_park
                        - resort
                        - aquarium
                        - winery
                        - maze
                draw:
                    polygons:
                        color: *grey10
            beach:
                filter:
                    kind: beach
                draw:
                    polygons:
                        color: *yellow1
        tier6:
            # filter:
            #     any:
            #         # limit show smaller landuse areas to higher zooms
            #         - { $zoom: { min: 12 }, area: { min: 500000 } }
            #         - { $zoom: { min: 13 }, area: { min: 100000 } }
            #         - { $zoom: { min: 14 }, area: { min: 50000 } }
            #         - { $zoom: { min: 15 }, area: { min: 20000 } }
            #         - { $zoom: { min: 15 }, area: { min: 2000 } }
            #         - { $zoom: { min: 16 } }
            garden:
                filter:
                    kind: garden
                draw:
                    polygons:
                        color: *green2
            parking:
                filter:
                    all:
                        - kind: parking
                        - $zoom: { min: 14 }
                    any:
                        - { $zoom: { min: 14 }, area: { min: 10000 } }
                        - { $zoom: { min: 15 }, area: { min: 5000 } }
                draw:
                    polygons:
                        color: *grey1
                        visible: *grey1_v
                early:
                    filter: { $zoom: { max: 15 } }
                    draw:
                        polygons:
                            color: *grey1_e
            pedestrian:
                filter:
                    kind: [pedestrian,common]
                draw:
                    polygons:
                        color: *grey7
                        visible: *grey7_v
                green-stuff:
                    filter:
                        surface: [grass]
                    draw:
                        polygons:
                            color: *green12
            pitch:
                filter: { kind: pitch }
                draw:
                    polygons:
                        color: *orange2
                    outline:
                        style: lines
                        color: *green6
                        width: [[14,0px],[15,1px],[16,1m]]
            place_of_worship:
                filter:
                    kind: place_of_worship
                draw:
                    polygons:
                        color: *grey1
                        visible: *grey1_v
            playground:
                filter:
                    kind: playground
                draw:
                    polygons:
                        color: *brown3
            school:
                filter:
                    kind: school
                draw:
                    polygons:
                        color: *brown2
            minor-landuse:
                filter:
                    kind:
                        - attraction
                        - artwork
                        - wilderness_hut
                        - hanami
                draw:
                    polygons:
                        color: *grey11
                    outline:
                        style: lines
                        color: *grey11_o
                        width: [[14,0px],[15,1px],[16,0.5m]]

    landuse-not-filtered:
        data: { source: mapzen, layer: landuse }
        # runways and taxiways are also in the roads layer as lines
        # these ones are probably duplicate features, but have AREA (a good thing)
        filter:
            kind:
                - runway
                - apron
                - roller_coaster
                - amusement_ride
                - summer_toboggan
                - trail_riding_station
                - water_slide
                - carousel
                - animal
                - enclosure
                - petting_zoo
                - aviary
        draw:
            polygons:
                order: function() { return feature.sort_rank; }
        runway:
            filter:
                kind: runway
            draw:
                polygons:
                    color: *grey2
        apron:
            filter:
                kind: apron
                $zoom: { min: 15}
            draw:
                polygons:
                    color: *grey1
                    visible: *grey1_v
        minor-amusement-park-landuse:
            filter:
                kind:
                    - roller_coaster
                    - amusement_ride
                    - summer_toboggan
                    - trail_riding_station
                    - water_slide
                    - carousel
            draw:
                polygons:
                    color: *grey12
                    visible: true
                outline:
                    style: lines
                    color: *grey12_o
                    width: [[14,0px],[15,1px],[16,0.5m]]
        minor-zoo-landuse:
            filter:
                kind:
                    - animal
                    - enclosure
                    - petting_zoo
                    - aviary
            draw:
                polygons:
                    color: *green11
                    visible: true
                outline:
                    style: lines
                    color: *green11_o
                    width: [[14,0px],[15,1px],[16,0.5m]]

    landuse_urban_area-early:
        data: { source: mapzen, layer: landuse }
        filter:
            # This is from Natural Earth and only shows up from zoom(0,9)
            kind: ['urban area']
        visible: *earth2_ev
        draw:
            polygons:
                order: function() { return feature.sort_rank; }
                color: [[0,*earth2_e],[6,*earth2_e2],[8,*earth2_e3]]

    debug:
        data: { source: mapzen }
        draw:
            flat_lines:
                width: 2px
                order: 1000
                color: '#ff0000'